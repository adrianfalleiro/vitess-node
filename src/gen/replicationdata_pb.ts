//
//Copyright 2019 The Vitess Authors.
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// This file defines the replication related structures we use.

// @generated by protoc-gen-es v2.2.5 with parameter "target=ts,json_types=true"
// @generated from file replicationdata.proto (package replicationdata, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file replicationdata.proto.
 */
export const file_replicationdata: GenFile = /*@__PURE__*/
  fileDesc("ChVyZXBsaWNhdGlvbmRhdGEucHJvdG8SD3JlcGxpY2F0aW9uZGF0YSK+BAoGU3RhdHVzEhAKCHBvc2l0aW9uGAEgASgJEh8KF3JlcGxpY2F0aW9uX2xhZ19zZWNvbmRzGAQgASgNEhMKC3NvdXJjZV9ob3N0GAUgASgJEhMKC3NvdXJjZV9wb3J0GAYgASgFEhUKDWNvbm5lY3RfcmV0cnkYByABKAUSGgoScmVsYXlfbG9nX3Bvc2l0aW9uGAggASgJEhUKDWZpbGVfcG9zaXRpb24YCSABKAkSMworcmVsYXlfbG9nX3NvdXJjZV9iaW5sb2dfZXF1aXZhbGVudF9wb3NpdGlvbhgKIAEoCRIYChBzb3VyY2Vfc2VydmVyX2lkGAsgASgNEhMKC3NvdXJjZV91dWlkGAwgASgJEhAKCGlvX3N0YXRlGA0gASgFEhUKDWxhc3RfaW9fZXJyb3IYDiABKAkSEQoJc3FsX3N0YXRlGA8gASgFEhYKDmxhc3Rfc3FsX2Vycm9yGBAgASgJEh8KF3JlbGF5X2xvZ19maWxlX3Bvc2l0aW9uGBEgASgJEhMKC3NvdXJjZV91c2VyGBIgASgJEhEKCXNxbF9kZWxheRgTIAEoDRIVCg1hdXRvX3Bvc2l0aW9uGBQgASgIEhIKCnVzaW5nX2d0aWQYFSABKAgSHwoXaGFzX3JlcGxpY2F0aW9uX2ZpbHRlcnMYFiABKAgSEwoLc3NsX2FsbG93ZWQYFyABKAgSHwoXcmVwbGljYXRpb25fbGFnX3Vua25vd24YGCABKAhKBAgCEANKBAgDEAQiSAoNQ29uZmlndXJhdGlvbhIaChJoZWFydGJlYXRfaW50ZXJ2YWwYASABKAESGwoTcmVwbGljYV9uZXRfdGltZW91dBgCIAEoBSJoChVTdG9wUmVwbGljYXRpb25TdGF0dXMSJwoGYmVmb3JlGAEgASgLMhcucmVwbGljYXRpb25kYXRhLlN0YXR1cxImCgVhZnRlchgCIAEoCzIXLnJlcGxpY2F0aW9uZGF0YS5TdGF0dXMiTQoNUHJpbWFyeVN0YXR1cxIQCghwb3NpdGlvbhgBIAEoCRIVCg1maWxlX3Bvc2l0aW9uGAIgASgJEhMKC3NlcnZlcl91dWlkGAMgASgJIsMFCgpGdWxsU3RhdHVzEhEKCXNlcnZlcl9pZBgBIAEoDRITCgtzZXJ2ZXJfdXVpZBgCIAEoCRIzChJyZXBsaWNhdGlvbl9zdGF0dXMYAyABKAsyFy5yZXBsaWNhdGlvbmRhdGEuU3RhdHVzEjYKDnByaW1hcnlfc3RhdHVzGAQgASgLMh4ucmVwbGljYXRpb25kYXRhLlByaW1hcnlTdGF0dXMSEwoLZ3RpZF9wdXJnZWQYBSABKAkSDwoHdmVyc2lvbhgGIAEoCRIXCg92ZXJzaW9uX2NvbW1lbnQYByABKAkSEQoJcmVhZF9vbmx5GAggASgIEhEKCWd0aWRfbW9kZRgJIAEoCRIVCg1iaW5sb2dfZm9ybWF0GAogASgJEhgKEGJpbmxvZ19yb3dfaW1hZ2UYCyABKAkSFwoPbG9nX2Jpbl9lbmFibGVkGAwgASgIEhsKE2xvZ19yZXBsaWNhX3VwZGF0ZXMYDSABKAgSIQoZc2VtaV9zeW5jX3ByaW1hcnlfZW5hYmxlZBgOIAEoCBIhChlzZW1pX3N5bmNfcmVwbGljYV9lbmFibGVkGA8gASgIEiAKGHNlbWlfc3luY19wcmltYXJ5X3N0YXR1cxgQIAEoCBIgChhzZW1pX3N5bmNfcmVwbGljYV9zdGF0dXMYESABKAgSIQoZc2VtaV9zeW5jX3ByaW1hcnlfY2xpZW50cxgSIAEoDRIhChlzZW1pX3N5bmNfcHJpbWFyeV90aW1lb3V0GBMgASgEEigKIHNlbWlfc3luY193YWl0X2Zvcl9yZXBsaWNhX2NvdW50GBQgASgNEhcKD3N1cGVyX3JlYWRfb25seRgVIAEoCBJBChlyZXBsaWNhdGlvbl9jb25maWd1cmF0aW9uGBYgASgLMh4ucmVwbGljYXRpb25kYXRhLkNvbmZpZ3VyYXRpb24qOwoTU3RvcFJlcGxpY2F0aW9uTW9kZRISCg5JT0FORFNRTFRIUkVBRBAAEhAKDElPVEhSRUFET05MWRABQi5aLHZpdGVzcy5pby92aXRlc3MvZ28vdnQvcHJvdG8vcmVwbGljYXRpb25kYXRhYgZwcm90bzM");

/**
 * Status is the replication status for MySQL/MariaDB/File-based. Returned by a
 * flavor-specific command and parsed into a Position and fields.
 *
 * @generated from message replicationdata.Status
 */
export type Status = Message<"replicationdata.Status"> & {
  /**
   * @generated from field: string position = 1;
   */
  position: string;

  /**
   * @generated from field: uint32 replication_lag_seconds = 4;
   */
  replicationLagSeconds: number;

  /**
   * @generated from field: string source_host = 5;
   */
  sourceHost: string;

  /**
   * @generated from field: int32 source_port = 6;
   */
  sourcePort: number;

  /**
   * @generated from field: int32 connect_retry = 7;
   */
  connectRetry: number;

  /**
   * RelayLogPosition will be empty for flavors that do not support returning the full GTIDSet from the relay log, such as MariaDB.
   *
   * @generated from field: string relay_log_position = 8;
   */
  relayLogPosition: string;

  /**
   * @generated from field: string file_position = 9;
   */
  filePosition: string;

  /**
   * @generated from field: string relay_log_source_binlog_equivalent_position = 10;
   */
  relayLogSourceBinlogEquivalentPosition: string;

  /**
   * @generated from field: uint32 source_server_id = 11;
   */
  sourceServerId: number;

  /**
   * @generated from field: string source_uuid = 12;
   */
  sourceUuid: string;

  /**
   * @generated from field: int32 io_state = 13;
   */
  ioState: number;

  /**
   * @generated from field: string last_io_error = 14;
   */
  lastIoError: string;

  /**
   * @generated from field: int32 sql_state = 15;
   */
  sqlState: number;

  /**
   * @generated from field: string last_sql_error = 16;
   */
  lastSqlError: string;

  /**
   * @generated from field: string relay_log_file_position = 17;
   */
  relayLogFilePosition: string;

  /**
   * @generated from field: string source_user = 18;
   */
  sourceUser: string;

  /**
   * @generated from field: uint32 sql_delay = 19;
   */
  sqlDelay: number;

  /**
   * @generated from field: bool auto_position = 20;
   */
  autoPosition: boolean;

  /**
   * @generated from field: bool using_gtid = 21;
   */
  usingGtid: boolean;

  /**
   * @generated from field: bool has_replication_filters = 22;
   */
  hasReplicationFilters: boolean;

  /**
   * @generated from field: bool ssl_allowed = 23;
   */
  sslAllowed: boolean;

  /**
   * @generated from field: bool replication_lag_unknown = 24;
   */
  replicationLagUnknown: boolean;
};

/**
 * Status is the replication status for MySQL/MariaDB/File-based. Returned by a
 * flavor-specific command and parsed into a Position and fields.
 *
 * @generated from message replicationdata.Status
 */
export type StatusJson = {
  /**
   * @generated from field: string position = 1;
   */
  position?: string;

  /**
   * @generated from field: uint32 replication_lag_seconds = 4;
   */
  replicationLagSeconds?: number;

  /**
   * @generated from field: string source_host = 5;
   */
  sourceHost?: string;

  /**
   * @generated from field: int32 source_port = 6;
   */
  sourcePort?: number;

  /**
   * @generated from field: int32 connect_retry = 7;
   */
  connectRetry?: number;

  /**
   * RelayLogPosition will be empty for flavors that do not support returning the full GTIDSet from the relay log, such as MariaDB.
   *
   * @generated from field: string relay_log_position = 8;
   */
  relayLogPosition?: string;

  /**
   * @generated from field: string file_position = 9;
   */
  filePosition?: string;

  /**
   * @generated from field: string relay_log_source_binlog_equivalent_position = 10;
   */
  relayLogSourceBinlogEquivalentPosition?: string;

  /**
   * @generated from field: uint32 source_server_id = 11;
   */
  sourceServerId?: number;

  /**
   * @generated from field: string source_uuid = 12;
   */
  sourceUuid?: string;

  /**
   * @generated from field: int32 io_state = 13;
   */
  ioState?: number;

  /**
   * @generated from field: string last_io_error = 14;
   */
  lastIoError?: string;

  /**
   * @generated from field: int32 sql_state = 15;
   */
  sqlState?: number;

  /**
   * @generated from field: string last_sql_error = 16;
   */
  lastSqlError?: string;

  /**
   * @generated from field: string relay_log_file_position = 17;
   */
  relayLogFilePosition?: string;

  /**
   * @generated from field: string source_user = 18;
   */
  sourceUser?: string;

  /**
   * @generated from field: uint32 sql_delay = 19;
   */
  sqlDelay?: number;

  /**
   * @generated from field: bool auto_position = 20;
   */
  autoPosition?: boolean;

  /**
   * @generated from field: bool using_gtid = 21;
   */
  usingGtid?: boolean;

  /**
   * @generated from field: bool has_replication_filters = 22;
   */
  hasReplicationFilters?: boolean;

  /**
   * @generated from field: bool ssl_allowed = 23;
   */
  sslAllowed?: boolean;

  /**
   * @generated from field: bool replication_lag_unknown = 24;
   */
  replicationLagUnknown?: boolean;
};

/**
 * Describes the message replicationdata.Status.
 * Use `create(StatusSchema)` to create a new message.
 */
export const StatusSchema: GenMessage<Status, StatusJson> = /*@__PURE__*/
  messageDesc(file_replicationdata, 0);

/**
 * Configuration holds replication configuration information gathered from performance_schema and global variables.
 *
 * @generated from message replicationdata.Configuration
 */
export type Configuration = Message<"replicationdata.Configuration"> & {
  /**
   * HeartbeatInterval controls the heartbeat interval that the primary sends to the replica
   *
   * @generated from field: double heartbeat_interval = 1;
   */
  heartbeatInterval: number;

  /**
   * ReplicaNetTimeout specifies the number of seconds to wait for more data or a heartbeat signal from the source before the replica considers the connection broken
   *
   * @generated from field: int32 replica_net_timeout = 2;
   */
  replicaNetTimeout: number;
};

/**
 * Configuration holds replication configuration information gathered from performance_schema and global variables.
 *
 * @generated from message replicationdata.Configuration
 */
export type ConfigurationJson = {
  /**
   * HeartbeatInterval controls the heartbeat interval that the primary sends to the replica
   *
   * @generated from field: double heartbeat_interval = 1;
   */
  heartbeatInterval?: number | "NaN" | "Infinity" | "-Infinity";

  /**
   * ReplicaNetTimeout specifies the number of seconds to wait for more data or a heartbeat signal from the source before the replica considers the connection broken
   *
   * @generated from field: int32 replica_net_timeout = 2;
   */
  replicaNetTimeout?: number;
};

/**
 * Describes the message replicationdata.Configuration.
 * Use `create(ConfigurationSchema)` to create a new message.
 */
export const ConfigurationSchema: GenMessage<Configuration, ConfigurationJson> = /*@__PURE__*/
  messageDesc(file_replicationdata, 1);

/**
 * StopReplicationStatus represents the replication status before calling StopReplication, and the replication status collected immediately after
 * calling StopReplication.
 *
 * @generated from message replicationdata.StopReplicationStatus
 */
export type StopReplicationStatus = Message<"replicationdata.StopReplicationStatus"> & {
  /**
   * @generated from field: replicationdata.Status before = 1;
   */
  before?: Status;

  /**
   * @generated from field: replicationdata.Status after = 2;
   */
  after?: Status;
};

/**
 * StopReplicationStatus represents the replication status before calling StopReplication, and the replication status collected immediately after
 * calling StopReplication.
 *
 * @generated from message replicationdata.StopReplicationStatus
 */
export type StopReplicationStatusJson = {
  /**
   * @generated from field: replicationdata.Status before = 1;
   */
  before?: StatusJson;

  /**
   * @generated from field: replicationdata.Status after = 2;
   */
  after?: StatusJson;
};

/**
 * Describes the message replicationdata.StopReplicationStatus.
 * Use `create(StopReplicationStatusSchema)` to create a new message.
 */
export const StopReplicationStatusSchema: GenMessage<StopReplicationStatus, StopReplicationStatusJson> = /*@__PURE__*/
  messageDesc(file_replicationdata, 2);

/**
 * PrimaryStatus is the replication status for a MySQL primary (returned by 'show binary log status').
 *
 * @generated from message replicationdata.PrimaryStatus
 */
export type PrimaryStatus = Message<"replicationdata.PrimaryStatus"> & {
  /**
   * @generated from field: string position = 1;
   */
  position: string;

  /**
   * @generated from field: string file_position = 2;
   */
  filePosition: string;

  /**
   * @generated from field: string server_uuid = 3;
   */
  serverUuid: string;
};

/**
 * PrimaryStatus is the replication status for a MySQL primary (returned by 'show binary log status').
 *
 * @generated from message replicationdata.PrimaryStatus
 */
export type PrimaryStatusJson = {
  /**
   * @generated from field: string position = 1;
   */
  position?: string;

  /**
   * @generated from field: string file_position = 2;
   */
  filePosition?: string;

  /**
   * @generated from field: string server_uuid = 3;
   */
  serverUuid?: string;
};

/**
 * Describes the message replicationdata.PrimaryStatus.
 * Use `create(PrimaryStatusSchema)` to create a new message.
 */
export const PrimaryStatusSchema: GenMessage<PrimaryStatus, PrimaryStatusJson> = /*@__PURE__*/
  messageDesc(file_replicationdata, 3);

/**
 * FullStatus contains the full status of MySQL including the replication information, semi-sync information, GTID information among others
 *
 * @generated from message replicationdata.FullStatus
 */
export type FullStatus = Message<"replicationdata.FullStatus"> & {
  /**
   * @generated from field: uint32 server_id = 1;
   */
  serverId: number;

  /**
   * @generated from field: string server_uuid = 2;
   */
  serverUuid: string;

  /**
   * @generated from field: replicationdata.Status replication_status = 3;
   */
  replicationStatus?: Status;

  /**
   * @generated from field: replicationdata.PrimaryStatus primary_status = 4;
   */
  primaryStatus?: PrimaryStatus;

  /**
   * @generated from field: string gtid_purged = 5;
   */
  gtidPurged: string;

  /**
   * @generated from field: string version = 6;
   */
  version: string;

  /**
   * @generated from field: string version_comment = 7;
   */
  versionComment: string;

  /**
   * @generated from field: bool read_only = 8;
   */
  readOnly: boolean;

  /**
   * @generated from field: string gtid_mode = 9;
   */
  gtidMode: string;

  /**
   * @generated from field: string binlog_format = 10;
   */
  binlogFormat: string;

  /**
   * @generated from field: string binlog_row_image = 11;
   */
  binlogRowImage: string;

  /**
   * @generated from field: bool log_bin_enabled = 12;
   */
  logBinEnabled: boolean;

  /**
   * @generated from field: bool log_replica_updates = 13;
   */
  logReplicaUpdates: boolean;

  /**
   * @generated from field: bool semi_sync_primary_enabled = 14;
   */
  semiSyncPrimaryEnabled: boolean;

  /**
   * @generated from field: bool semi_sync_replica_enabled = 15;
   */
  semiSyncReplicaEnabled: boolean;

  /**
   * @generated from field: bool semi_sync_primary_status = 16;
   */
  semiSyncPrimaryStatus: boolean;

  /**
   * @generated from field: bool semi_sync_replica_status = 17;
   */
  semiSyncReplicaStatus: boolean;

  /**
   * @generated from field: uint32 semi_sync_primary_clients = 18;
   */
  semiSyncPrimaryClients: number;

  /**
   * @generated from field: uint64 semi_sync_primary_timeout = 19;
   */
  semiSyncPrimaryTimeout: bigint;

  /**
   * @generated from field: uint32 semi_sync_wait_for_replica_count = 20;
   */
  semiSyncWaitForReplicaCount: number;

  /**
   * @generated from field: bool super_read_only = 21;
   */
  superReadOnly: boolean;

  /**
   * @generated from field: replicationdata.Configuration replication_configuration = 22;
   */
  replicationConfiguration?: Configuration;
};

/**
 * FullStatus contains the full status of MySQL including the replication information, semi-sync information, GTID information among others
 *
 * @generated from message replicationdata.FullStatus
 */
export type FullStatusJson = {
  /**
   * @generated from field: uint32 server_id = 1;
   */
  serverId?: number;

  /**
   * @generated from field: string server_uuid = 2;
   */
  serverUuid?: string;

  /**
   * @generated from field: replicationdata.Status replication_status = 3;
   */
  replicationStatus?: StatusJson;

  /**
   * @generated from field: replicationdata.PrimaryStatus primary_status = 4;
   */
  primaryStatus?: PrimaryStatusJson;

  /**
   * @generated from field: string gtid_purged = 5;
   */
  gtidPurged?: string;

  /**
   * @generated from field: string version = 6;
   */
  version?: string;

  /**
   * @generated from field: string version_comment = 7;
   */
  versionComment?: string;

  /**
   * @generated from field: bool read_only = 8;
   */
  readOnly?: boolean;

  /**
   * @generated from field: string gtid_mode = 9;
   */
  gtidMode?: string;

  /**
   * @generated from field: string binlog_format = 10;
   */
  binlogFormat?: string;

  /**
   * @generated from field: string binlog_row_image = 11;
   */
  binlogRowImage?: string;

  /**
   * @generated from field: bool log_bin_enabled = 12;
   */
  logBinEnabled?: boolean;

  /**
   * @generated from field: bool log_replica_updates = 13;
   */
  logReplicaUpdates?: boolean;

  /**
   * @generated from field: bool semi_sync_primary_enabled = 14;
   */
  semiSyncPrimaryEnabled?: boolean;

  /**
   * @generated from field: bool semi_sync_replica_enabled = 15;
   */
  semiSyncReplicaEnabled?: boolean;

  /**
   * @generated from field: bool semi_sync_primary_status = 16;
   */
  semiSyncPrimaryStatus?: boolean;

  /**
   * @generated from field: bool semi_sync_replica_status = 17;
   */
  semiSyncReplicaStatus?: boolean;

  /**
   * @generated from field: uint32 semi_sync_primary_clients = 18;
   */
  semiSyncPrimaryClients?: number;

  /**
   * @generated from field: uint64 semi_sync_primary_timeout = 19;
   */
  semiSyncPrimaryTimeout?: string;

  /**
   * @generated from field: uint32 semi_sync_wait_for_replica_count = 20;
   */
  semiSyncWaitForReplicaCount?: number;

  /**
   * @generated from field: bool super_read_only = 21;
   */
  superReadOnly?: boolean;

  /**
   * @generated from field: replicationdata.Configuration replication_configuration = 22;
   */
  replicationConfiguration?: ConfigurationJson;
};

/**
 * Describes the message replicationdata.FullStatus.
 * Use `create(FullStatusSchema)` to create a new message.
 */
export const FullStatusSchema: GenMessage<FullStatus, FullStatusJson> = /*@__PURE__*/
  messageDesc(file_replicationdata, 4);

/**
 * StopReplicationMode is used to provide controls over how replication is stopped.
 *
 * @generated from enum replicationdata.StopReplicationMode
 */
export enum StopReplicationMode {
  /**
   * @generated from enum value: IOANDSQLTHREAD = 0;
   */
  IOANDSQLTHREAD = 0,

  /**
   * @generated from enum value: IOTHREADONLY = 1;
   */
  IOTHREADONLY = 1,
}

/**
 * StopReplicationMode is used to provide controls over how replication is stopped.
 *
 * @generated from enum replicationdata.StopReplicationMode
 */
export type StopReplicationModeJson = "IOANDSQLTHREAD" | "IOTHREADONLY";

/**
 * Describes the enum replicationdata.StopReplicationMode.
 */
export const StopReplicationModeSchema: GenEnum<StopReplicationMode, StopReplicationModeJson> = /*@__PURE__*/
  enumDesc(file_replicationdata, 0);

