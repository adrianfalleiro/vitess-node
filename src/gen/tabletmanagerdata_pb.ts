//
//Copyright 2019 The Vitess Authors.
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// This file contains all the types and servers necessary to make
// RPC calls to VtTablet for the management API.

// @generated by protoc-gen-es v2.2.5 with parameter "target=ts,json_types=true"
// @generated from file tabletmanagerdata.proto (package tabletmanagerdata, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { BinlogSource, BinlogSourceJson, OnDDLAction, OnDDLActionJson, VReplicationWorkflowState, VReplicationWorkflowStateJson, VReplicationWorkflowSubType, VReplicationWorkflowSubTypeJson, VReplicationWorkflowType, VReplicationWorkflowTypeJson } from "./binlogdata_pb";
import { file_binlogdata } from "./binlogdata_pb";
import type { Event, EventJson } from "./logutil_pb";
import { file_logutil } from "./logutil_pb";
import type { HostMetricsResponse, HostMetricsResponseJson } from "./mysqlctl_pb";
import { file_mysqlctl } from "./mysqlctl_pb";
import type { Field, FieldJson, QueryResult, QueryResultJson, TransactionMetadata, TransactionMetadataJson } from "./query_pb";
import { file_query } from "./query_pb";
import type { FullStatus, FullStatusJson, PrimaryStatus, PrimaryStatusJson, Status, StatusJson, StopReplicationMode, StopReplicationModeJson, StopReplicationStatus, StopReplicationStatusJson } from "./replicationdata_pb";
import { file_replicationdata } from "./replicationdata_pb";
import type { TabletAlias, TabletAliasJson, TabletType, TabletTypeJson, ThrottledAppRule, ThrottledAppRuleJson } from "./topodata_pb";
import { file_topodata } from "./topodata_pb";
import type { CallerID, CallerIDJson } from "./vtrpc_pb";
import { file_vtrpc } from "./vtrpc_pb";
import type { Time, TimeJson } from "./vttime_pb";
import { file_vttime } from "./vttime_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file tabletmanagerdata.proto.
 */
export const file_tabletmanagerdata: GenFile = /*@__PURE__*/
  fileDesc("", [file_binlogdata, file_logutil, file_mysqlctl, file_query, file_replicationdata, file_topodata, file_vtrpc, file_vttime]);

/**
 * @generated from message tabletmanagerdata.TableDefinition
 */
export type TableDefinition = Message<"tabletmanagerdata.TableDefinition"> & {
  /**
   * the table name
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * the SQL to run to create the table
   *
   * @generated from field: string schema = 2;
   */
  schema: string;

  /**
   * the columns in the order that will be used to dump and load the data
   *
   * @generated from field: repeated string columns = 3;
   */
  columns: string[];

  /**
   * the primary key columns in the primary key order
   *
   * @generated from field: repeated string primary_key_columns = 4;
   */
  primaryKeyColumns: string[];

  /**
   * type is either mysqlctl.TableBaseTable or mysqlctl.TableView
   *
   * @generated from field: string type = 5;
   */
  type: string;

  /**
   * how much space the data file takes.
   *
   * @generated from field: uint64 data_length = 6;
   */
  dataLength: bigint;

  /**
   * approximate number of rows
   *
   * @generated from field: uint64 row_count = 7;
   */
  rowCount: bigint;

  /**
   * column names along with their types.
   * NOTE: this is a superset of columns.
   *
   * @generated from field: repeated query.Field fields = 8;
   */
  fields: Field[];
};

/**
 * @generated from message tabletmanagerdata.TableDefinition
 */
export type TableDefinitionJson = {
  /**
   * the table name
   *
   * @generated from field: string name = 1;
   */
  name?: string;

  /**
   * the SQL to run to create the table
   *
   * @generated from field: string schema = 2;
   */
  schema?: string;

  /**
   * the columns in the order that will be used to dump and load the data
   *
   * @generated from field: repeated string columns = 3;
   */
  columns?: string[];

  /**
   * the primary key columns in the primary key order
   *
   * @generated from field: repeated string primary_key_columns = 4;
   */
  primaryKeyColumns?: string[];

  /**
   * type is either mysqlctl.TableBaseTable or mysqlctl.TableView
   *
   * @generated from field: string type = 5;
   */
  type?: string;

  /**
   * how much space the data file takes.
   *
   * @generated from field: uint64 data_length = 6;
   */
  dataLength?: string;

  /**
   * approximate number of rows
   *
   * @generated from field: uint64 row_count = 7;
   */
  rowCount?: string;

  /**
   * column names along with their types.
   * NOTE: this is a superset of columns.
   *
   * @generated from field: repeated query.Field fields = 8;
   */
  fields?: FieldJson[];
};

/**
 * Describes the message tabletmanagerdata.TableDefinition.
 * Use `create(TableDefinitionSchema)` to create a new message.
 */
export const TableDefinitionSchema: GenMessage<TableDefinition, TableDefinitionJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 0);

/**
 * @generated from message tabletmanagerdata.SchemaDefinition
 */
export type SchemaDefinition = Message<"tabletmanagerdata.SchemaDefinition"> & {
  /**
   * @generated from field: string database_schema = 1;
   */
  databaseSchema: string;

  /**
   * @generated from field: repeated tabletmanagerdata.TableDefinition table_definitions = 2;
   */
  tableDefinitions: TableDefinition[];
};

/**
 * @generated from message tabletmanagerdata.SchemaDefinition
 */
export type SchemaDefinitionJson = {
  /**
   * @generated from field: string database_schema = 1;
   */
  databaseSchema?: string;

  /**
   * @generated from field: repeated tabletmanagerdata.TableDefinition table_definitions = 2;
   */
  tableDefinitions?: TableDefinitionJson[];
};

/**
 * Describes the message tabletmanagerdata.SchemaDefinition.
 * Use `create(SchemaDefinitionSchema)` to create a new message.
 */
export const SchemaDefinitionSchema: GenMessage<SchemaDefinition, SchemaDefinitionJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 1);

/**
 * @generated from message tabletmanagerdata.SchemaChangeResult
 */
export type SchemaChangeResult = Message<"tabletmanagerdata.SchemaChangeResult"> & {
  /**
   * before_schema holds the schema before each change.
   *
   * @generated from field: tabletmanagerdata.SchemaDefinition before_schema = 1;
   */
  beforeSchema?: SchemaDefinition;

  /**
   * after_schema holds the schema after each change.
   *
   * @generated from field: tabletmanagerdata.SchemaDefinition after_schema = 2;
   */
  afterSchema?: SchemaDefinition;
};

/**
 * @generated from message tabletmanagerdata.SchemaChangeResult
 */
export type SchemaChangeResultJson = {
  /**
   * before_schema holds the schema before each change.
   *
   * @generated from field: tabletmanagerdata.SchemaDefinition before_schema = 1;
   */
  beforeSchema?: SchemaDefinitionJson;

  /**
   * after_schema holds the schema after each change.
   *
   * @generated from field: tabletmanagerdata.SchemaDefinition after_schema = 2;
   */
  afterSchema?: SchemaDefinitionJson;
};

/**
 * Describes the message tabletmanagerdata.SchemaChangeResult.
 * Use `create(SchemaChangeResultSchema)` to create a new message.
 */
export const SchemaChangeResultSchema: GenMessage<SchemaChangeResult, SchemaChangeResultJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 2);

/**
 * UserPermission describes a single row in the mysql.user table
 * Primary key is Host+User
 * PasswordChecksum is the crc64 of the password, for security reasons
 *
 * @generated from message tabletmanagerdata.UserPermission
 */
export type UserPermission = Message<"tabletmanagerdata.UserPermission"> & {
  /**
   * @generated from field: string host = 1;
   */
  host: string;

  /**
   * @generated from field: string user = 2;
   */
  user: string;

  /**
   * @generated from field: uint64 password_checksum = 3;
   */
  passwordChecksum: bigint;

  /**
   * @generated from field: map<string, string> privileges = 4;
   */
  privileges: { [key: string]: string };
};

/**
 * UserPermission describes a single row in the mysql.user table
 * Primary key is Host+User
 * PasswordChecksum is the crc64 of the password, for security reasons
 *
 * @generated from message tabletmanagerdata.UserPermission
 */
export type UserPermissionJson = {
  /**
   * @generated from field: string host = 1;
   */
  host?: string;

  /**
   * @generated from field: string user = 2;
   */
  user?: string;

  /**
   * @generated from field: uint64 password_checksum = 3;
   */
  passwordChecksum?: string;

  /**
   * @generated from field: map<string, string> privileges = 4;
   */
  privileges?: { [key: string]: string };
};

/**
 * Describes the message tabletmanagerdata.UserPermission.
 * Use `create(UserPermissionSchema)` to create a new message.
 */
export const UserPermissionSchema: GenMessage<UserPermission, UserPermissionJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 3);

/**
 * DbPermission describes a single row in the mysql.db table
 * Primary key is Host+Db+User
 *
 * @generated from message tabletmanagerdata.DbPermission
 */
export type DbPermission = Message<"tabletmanagerdata.DbPermission"> & {
  /**
   * @generated from field: string host = 1;
   */
  host: string;

  /**
   * @generated from field: string db = 2;
   */
  db: string;

  /**
   * @generated from field: string user = 3;
   */
  user: string;

  /**
   * @generated from field: map<string, string> privileges = 4;
   */
  privileges: { [key: string]: string };
};

/**
 * DbPermission describes a single row in the mysql.db table
 * Primary key is Host+Db+User
 *
 * @generated from message tabletmanagerdata.DbPermission
 */
export type DbPermissionJson = {
  /**
   * @generated from field: string host = 1;
   */
  host?: string;

  /**
   * @generated from field: string db = 2;
   */
  db?: string;

  /**
   * @generated from field: string user = 3;
   */
  user?: string;

  /**
   * @generated from field: map<string, string> privileges = 4;
   */
  privileges?: { [key: string]: string };
};

/**
 * Describes the message tabletmanagerdata.DbPermission.
 * Use `create(DbPermissionSchema)` to create a new message.
 */
export const DbPermissionSchema: GenMessage<DbPermission, DbPermissionJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 4);

/**
 * Permissions have all the rows in mysql.{user,db} tables,
 * (all rows are sorted by primary key)
 *
 * @generated from message tabletmanagerdata.Permissions
 */
export type Permissions = Message<"tabletmanagerdata.Permissions"> & {
  /**
   * @generated from field: repeated tabletmanagerdata.UserPermission user_permissions = 1;
   */
  userPermissions: UserPermission[];

  /**
   * @generated from field: repeated tabletmanagerdata.DbPermission db_permissions = 2;
   */
  dbPermissions: DbPermission[];
};

/**
 * Permissions have all the rows in mysql.{user,db} tables,
 * (all rows are sorted by primary key)
 *
 * @generated from message tabletmanagerdata.Permissions
 */
export type PermissionsJson = {
  /**
   * @generated from field: repeated tabletmanagerdata.UserPermission user_permissions = 1;
   */
  userPermissions?: UserPermissionJson[];

  /**
   * @generated from field: repeated tabletmanagerdata.DbPermission db_permissions = 2;
   */
  dbPermissions?: DbPermissionJson[];
};

/**
 * Describes the message tabletmanagerdata.Permissions.
 * Use `create(PermissionsSchema)` to create a new message.
 */
export const PermissionsSchema: GenMessage<Permissions, PermissionsJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 5);

/**
 * @generated from message tabletmanagerdata.PingRequest
 */
export type PingRequest = Message<"tabletmanagerdata.PingRequest"> & {
  /**
   * @generated from field: string payload = 1;
   */
  payload: string;
};

/**
 * @generated from message tabletmanagerdata.PingRequest
 */
export type PingRequestJson = {
  /**
   * @generated from field: string payload = 1;
   */
  payload?: string;
};

/**
 * Describes the message tabletmanagerdata.PingRequest.
 * Use `create(PingRequestSchema)` to create a new message.
 */
export const PingRequestSchema: GenMessage<PingRequest, PingRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 6);

/**
 * @generated from message tabletmanagerdata.PingResponse
 */
export type PingResponse = Message<"tabletmanagerdata.PingResponse"> & {
  /**
   * @generated from field: string payload = 1;
   */
  payload: string;
};

/**
 * @generated from message tabletmanagerdata.PingResponse
 */
export type PingResponseJson = {
  /**
   * @generated from field: string payload = 1;
   */
  payload?: string;
};

/**
 * Describes the message tabletmanagerdata.PingResponse.
 * Use `create(PingResponseSchema)` to create a new message.
 */
export const PingResponseSchema: GenMessage<PingResponse, PingResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 7);

/**
 * @generated from message tabletmanagerdata.SleepRequest
 */
export type SleepRequest = Message<"tabletmanagerdata.SleepRequest"> & {
  /**
   * duration is in nanoseconds
   *
   * @generated from field: int64 duration = 1;
   */
  duration: bigint;
};

/**
 * @generated from message tabletmanagerdata.SleepRequest
 */
export type SleepRequestJson = {
  /**
   * duration is in nanoseconds
   *
   * @generated from field: int64 duration = 1;
   */
  duration?: string;
};

/**
 * Describes the message tabletmanagerdata.SleepRequest.
 * Use `create(SleepRequestSchema)` to create a new message.
 */
export const SleepRequestSchema: GenMessage<SleepRequest, SleepRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 8);

/**
 * @generated from message tabletmanagerdata.SleepResponse
 */
export type SleepResponse = Message<"tabletmanagerdata.SleepResponse"> & {
};

/**
 * @generated from message tabletmanagerdata.SleepResponse
 */
export type SleepResponseJson = {
};

/**
 * Describes the message tabletmanagerdata.SleepResponse.
 * Use `create(SleepResponseSchema)` to create a new message.
 */
export const SleepResponseSchema: GenMessage<SleepResponse, SleepResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 9);

/**
 * @generated from message tabletmanagerdata.ExecuteHookRequest
 */
export type ExecuteHookRequest = Message<"tabletmanagerdata.ExecuteHookRequest"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: repeated string parameters = 2;
   */
  parameters: string[];

  /**
   * @generated from field: map<string, string> extra_env = 3;
   */
  extraEnv: { [key: string]: string };
};

/**
 * @generated from message tabletmanagerdata.ExecuteHookRequest
 */
export type ExecuteHookRequestJson = {
  /**
   * @generated from field: string name = 1;
   */
  name?: string;

  /**
   * @generated from field: repeated string parameters = 2;
   */
  parameters?: string[];

  /**
   * @generated from field: map<string, string> extra_env = 3;
   */
  extraEnv?: { [key: string]: string };
};

/**
 * Describes the message tabletmanagerdata.ExecuteHookRequest.
 * Use `create(ExecuteHookRequestSchema)` to create a new message.
 */
export const ExecuteHookRequestSchema: GenMessage<ExecuteHookRequest, ExecuteHookRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 10);

/**
 * @generated from message tabletmanagerdata.ExecuteHookResponse
 */
export type ExecuteHookResponse = Message<"tabletmanagerdata.ExecuteHookResponse"> & {
  /**
   * @generated from field: int64 exit_status = 1;
   */
  exitStatus: bigint;

  /**
   * @generated from field: string stdout = 2;
   */
  stdout: string;

  /**
   * @generated from field: string stderr = 3;
   */
  stderr: string;
};

/**
 * @generated from message tabletmanagerdata.ExecuteHookResponse
 */
export type ExecuteHookResponseJson = {
  /**
   * @generated from field: int64 exit_status = 1;
   */
  exitStatus?: string;

  /**
   * @generated from field: string stdout = 2;
   */
  stdout?: string;

  /**
   * @generated from field: string stderr = 3;
   */
  stderr?: string;
};

/**
 * Describes the message tabletmanagerdata.ExecuteHookResponse.
 * Use `create(ExecuteHookResponseSchema)` to create a new message.
 */
export const ExecuteHookResponseSchema: GenMessage<ExecuteHookResponse, ExecuteHookResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 11);

/**
 * @generated from message tabletmanagerdata.GetSchemaRequest
 */
export type GetSchemaRequest = Message<"tabletmanagerdata.GetSchemaRequest"> & {
  /**
   * @generated from field: repeated string tables = 1;
   */
  tables: string[];

  /**
   * @generated from field: bool include_views = 2;
   */
  includeViews: boolean;

  /**
   * @generated from field: repeated string exclude_tables = 3;
   */
  excludeTables: string[];

  /**
   * TableSchemaOnly specifies whether to limit the results to just table/view
   * schema definition (CREATE TABLE/VIEW statements) and skip column/field information
   *
   * @generated from field: bool table_schema_only = 4;
   */
  tableSchemaOnly: boolean;
};

/**
 * @generated from message tabletmanagerdata.GetSchemaRequest
 */
export type GetSchemaRequestJson = {
  /**
   * @generated from field: repeated string tables = 1;
   */
  tables?: string[];

  /**
   * @generated from field: bool include_views = 2;
   */
  includeViews?: boolean;

  /**
   * @generated from field: repeated string exclude_tables = 3;
   */
  excludeTables?: string[];

  /**
   * TableSchemaOnly specifies whether to limit the results to just table/view
   * schema definition (CREATE TABLE/VIEW statements) and skip column/field information
   *
   * @generated from field: bool table_schema_only = 4;
   */
  tableSchemaOnly?: boolean;
};

/**
 * Describes the message tabletmanagerdata.GetSchemaRequest.
 * Use `create(GetSchemaRequestSchema)` to create a new message.
 */
export const GetSchemaRequestSchema: GenMessage<GetSchemaRequest, GetSchemaRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 12);

/**
 * @generated from message tabletmanagerdata.GetSchemaResponse
 */
export type GetSchemaResponse = Message<"tabletmanagerdata.GetSchemaResponse"> & {
  /**
   * @generated from field: tabletmanagerdata.SchemaDefinition schema_definition = 1;
   */
  schemaDefinition?: SchemaDefinition;
};

/**
 * @generated from message tabletmanagerdata.GetSchemaResponse
 */
export type GetSchemaResponseJson = {
  /**
   * @generated from field: tabletmanagerdata.SchemaDefinition schema_definition = 1;
   */
  schemaDefinition?: SchemaDefinitionJson;
};

/**
 * Describes the message tabletmanagerdata.GetSchemaResponse.
 * Use `create(GetSchemaResponseSchema)` to create a new message.
 */
export const GetSchemaResponseSchema: GenMessage<GetSchemaResponse, GetSchemaResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 13);

/**
 * @generated from message tabletmanagerdata.GetPermissionsRequest
 */
export type GetPermissionsRequest = Message<"tabletmanagerdata.GetPermissionsRequest"> & {
};

/**
 * @generated from message tabletmanagerdata.GetPermissionsRequest
 */
export type GetPermissionsRequestJson = {
};

/**
 * Describes the message tabletmanagerdata.GetPermissionsRequest.
 * Use `create(GetPermissionsRequestSchema)` to create a new message.
 */
export const GetPermissionsRequestSchema: GenMessage<GetPermissionsRequest, GetPermissionsRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 14);

/**
 * @generated from message tabletmanagerdata.GetPermissionsResponse
 */
export type GetPermissionsResponse = Message<"tabletmanagerdata.GetPermissionsResponse"> & {
  /**
   * @generated from field: tabletmanagerdata.Permissions permissions = 1;
   */
  permissions?: Permissions;
};

/**
 * @generated from message tabletmanagerdata.GetPermissionsResponse
 */
export type GetPermissionsResponseJson = {
  /**
   * @generated from field: tabletmanagerdata.Permissions permissions = 1;
   */
  permissions?: PermissionsJson;
};

/**
 * Describes the message tabletmanagerdata.GetPermissionsResponse.
 * Use `create(GetPermissionsResponseSchema)` to create a new message.
 */
export const GetPermissionsResponseSchema: GenMessage<GetPermissionsResponse, GetPermissionsResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 15);

/**
 * @generated from message tabletmanagerdata.GetGlobalStatusVarsRequest
 */
export type GetGlobalStatusVarsRequest = Message<"tabletmanagerdata.GetGlobalStatusVarsRequest"> & {
  /**
   * @generated from field: repeated string variables = 1;
   */
  variables: string[];
};

/**
 * @generated from message tabletmanagerdata.GetGlobalStatusVarsRequest
 */
export type GetGlobalStatusVarsRequestJson = {
  /**
   * @generated from field: repeated string variables = 1;
   */
  variables?: string[];
};

/**
 * Describes the message tabletmanagerdata.GetGlobalStatusVarsRequest.
 * Use `create(GetGlobalStatusVarsRequestSchema)` to create a new message.
 */
export const GetGlobalStatusVarsRequestSchema: GenMessage<GetGlobalStatusVarsRequest, GetGlobalStatusVarsRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 16);

/**
 * @generated from message tabletmanagerdata.GetGlobalStatusVarsResponse
 */
export type GetGlobalStatusVarsResponse = Message<"tabletmanagerdata.GetGlobalStatusVarsResponse"> & {
  /**
   * @generated from field: map<string, string> status_values = 1;
   */
  statusValues: { [key: string]: string };
};

/**
 * @generated from message tabletmanagerdata.GetGlobalStatusVarsResponse
 */
export type GetGlobalStatusVarsResponseJson = {
  /**
   * @generated from field: map<string, string> status_values = 1;
   */
  statusValues?: { [key: string]: string };
};

/**
 * Describes the message tabletmanagerdata.GetGlobalStatusVarsResponse.
 * Use `create(GetGlobalStatusVarsResponseSchema)` to create a new message.
 */
export const GetGlobalStatusVarsResponseSchema: GenMessage<GetGlobalStatusVarsResponse, GetGlobalStatusVarsResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 17);

/**
 * @generated from message tabletmanagerdata.SetReadOnlyRequest
 */
export type SetReadOnlyRequest = Message<"tabletmanagerdata.SetReadOnlyRequest"> & {
};

/**
 * @generated from message tabletmanagerdata.SetReadOnlyRequest
 */
export type SetReadOnlyRequestJson = {
};

/**
 * Describes the message tabletmanagerdata.SetReadOnlyRequest.
 * Use `create(SetReadOnlyRequestSchema)` to create a new message.
 */
export const SetReadOnlyRequestSchema: GenMessage<SetReadOnlyRequest, SetReadOnlyRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 18);

/**
 * @generated from message tabletmanagerdata.SetReadOnlyResponse
 */
export type SetReadOnlyResponse = Message<"tabletmanagerdata.SetReadOnlyResponse"> & {
};

/**
 * @generated from message tabletmanagerdata.SetReadOnlyResponse
 */
export type SetReadOnlyResponseJson = {
};

/**
 * Describes the message tabletmanagerdata.SetReadOnlyResponse.
 * Use `create(SetReadOnlyResponseSchema)` to create a new message.
 */
export const SetReadOnlyResponseSchema: GenMessage<SetReadOnlyResponse, SetReadOnlyResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 19);

/**
 * @generated from message tabletmanagerdata.SetReadWriteRequest
 */
export type SetReadWriteRequest = Message<"tabletmanagerdata.SetReadWriteRequest"> & {
};

/**
 * @generated from message tabletmanagerdata.SetReadWriteRequest
 */
export type SetReadWriteRequestJson = {
};

/**
 * Describes the message tabletmanagerdata.SetReadWriteRequest.
 * Use `create(SetReadWriteRequestSchema)` to create a new message.
 */
export const SetReadWriteRequestSchema: GenMessage<SetReadWriteRequest, SetReadWriteRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 20);

/**
 * @generated from message tabletmanagerdata.SetReadWriteResponse
 */
export type SetReadWriteResponse = Message<"tabletmanagerdata.SetReadWriteResponse"> & {
};

/**
 * @generated from message tabletmanagerdata.SetReadWriteResponse
 */
export type SetReadWriteResponseJson = {
};

/**
 * Describes the message tabletmanagerdata.SetReadWriteResponse.
 * Use `create(SetReadWriteResponseSchema)` to create a new message.
 */
export const SetReadWriteResponseSchema: GenMessage<SetReadWriteResponse, SetReadWriteResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 21);

/**
 * @generated from message tabletmanagerdata.ChangeTypeRequest
 */
export type ChangeTypeRequest = Message<"tabletmanagerdata.ChangeTypeRequest"> & {
  /**
   * @generated from field: topodata.TabletType tablet_type = 1;
   */
  tabletType: TabletType;

  /**
   * @generated from field: bool semiSync = 2;
   */
  semiSync: boolean;
};

/**
 * @generated from message tabletmanagerdata.ChangeTypeRequest
 */
export type ChangeTypeRequestJson = {
  /**
   * @generated from field: topodata.TabletType tablet_type = 1;
   */
  tabletType?: TabletTypeJson;

  /**
   * @generated from field: bool semiSync = 2;
   */
  semiSync?: boolean;
};

/**
 * Describes the message tabletmanagerdata.ChangeTypeRequest.
 * Use `create(ChangeTypeRequestSchema)` to create a new message.
 */
export const ChangeTypeRequestSchema: GenMessage<ChangeTypeRequest, ChangeTypeRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 22);

/**
 * @generated from message tabletmanagerdata.ChangeTypeResponse
 */
export type ChangeTypeResponse = Message<"tabletmanagerdata.ChangeTypeResponse"> & {
};

/**
 * @generated from message tabletmanagerdata.ChangeTypeResponse
 */
export type ChangeTypeResponseJson = {
};

/**
 * Describes the message tabletmanagerdata.ChangeTypeResponse.
 * Use `create(ChangeTypeResponseSchema)` to create a new message.
 */
export const ChangeTypeResponseSchema: GenMessage<ChangeTypeResponse, ChangeTypeResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 23);

/**
 * @generated from message tabletmanagerdata.RefreshStateRequest
 */
export type RefreshStateRequest = Message<"tabletmanagerdata.RefreshStateRequest"> & {
};

/**
 * @generated from message tabletmanagerdata.RefreshStateRequest
 */
export type RefreshStateRequestJson = {
};

/**
 * Describes the message tabletmanagerdata.RefreshStateRequest.
 * Use `create(RefreshStateRequestSchema)` to create a new message.
 */
export const RefreshStateRequestSchema: GenMessage<RefreshStateRequest, RefreshStateRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 24);

/**
 * @generated from message tabletmanagerdata.RefreshStateResponse
 */
export type RefreshStateResponse = Message<"tabletmanagerdata.RefreshStateResponse"> & {
};

/**
 * @generated from message tabletmanagerdata.RefreshStateResponse
 */
export type RefreshStateResponseJson = {
};

/**
 * Describes the message tabletmanagerdata.RefreshStateResponse.
 * Use `create(RefreshStateResponseSchema)` to create a new message.
 */
export const RefreshStateResponseSchema: GenMessage<RefreshStateResponse, RefreshStateResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 25);

/**
 * @generated from message tabletmanagerdata.RunHealthCheckRequest
 */
export type RunHealthCheckRequest = Message<"tabletmanagerdata.RunHealthCheckRequest"> & {
};

/**
 * @generated from message tabletmanagerdata.RunHealthCheckRequest
 */
export type RunHealthCheckRequestJson = {
};

/**
 * Describes the message tabletmanagerdata.RunHealthCheckRequest.
 * Use `create(RunHealthCheckRequestSchema)` to create a new message.
 */
export const RunHealthCheckRequestSchema: GenMessage<RunHealthCheckRequest, RunHealthCheckRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 26);

/**
 * @generated from message tabletmanagerdata.RunHealthCheckResponse
 */
export type RunHealthCheckResponse = Message<"tabletmanagerdata.RunHealthCheckResponse"> & {
};

/**
 * @generated from message tabletmanagerdata.RunHealthCheckResponse
 */
export type RunHealthCheckResponseJson = {
};

/**
 * Describes the message tabletmanagerdata.RunHealthCheckResponse.
 * Use `create(RunHealthCheckResponseSchema)` to create a new message.
 */
export const RunHealthCheckResponseSchema: GenMessage<RunHealthCheckResponse, RunHealthCheckResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 27);

/**
 * @generated from message tabletmanagerdata.ReloadSchemaRequest
 */
export type ReloadSchemaRequest = Message<"tabletmanagerdata.ReloadSchemaRequest"> & {
  /**
   * wait_position allows scheduling a schema reload to occur after a
   * given DDL has replicated to this server, by specifying a replication
   * position to wait for. Leave empty to trigger the reload immediately.
   *
   * @generated from field: string wait_position = 1;
   */
  waitPosition: string;
};

/**
 * @generated from message tabletmanagerdata.ReloadSchemaRequest
 */
export type ReloadSchemaRequestJson = {
  /**
   * wait_position allows scheduling a schema reload to occur after a
   * given DDL has replicated to this server, by specifying a replication
   * position to wait for. Leave empty to trigger the reload immediately.
   *
   * @generated from field: string wait_position = 1;
   */
  waitPosition?: string;
};

/**
 * Describes the message tabletmanagerdata.ReloadSchemaRequest.
 * Use `create(ReloadSchemaRequestSchema)` to create a new message.
 */
export const ReloadSchemaRequestSchema: GenMessage<ReloadSchemaRequest, ReloadSchemaRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 28);

/**
 * @generated from message tabletmanagerdata.ReloadSchemaResponse
 */
export type ReloadSchemaResponse = Message<"tabletmanagerdata.ReloadSchemaResponse"> & {
};

/**
 * @generated from message tabletmanagerdata.ReloadSchemaResponse
 */
export type ReloadSchemaResponseJson = {
};

/**
 * Describes the message tabletmanagerdata.ReloadSchemaResponse.
 * Use `create(ReloadSchemaResponseSchema)` to create a new message.
 */
export const ReloadSchemaResponseSchema: GenMessage<ReloadSchemaResponse, ReloadSchemaResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 29);

/**
 * @generated from message tabletmanagerdata.PreflightSchemaRequest
 */
export type PreflightSchemaRequest = Message<"tabletmanagerdata.PreflightSchemaRequest"> & {
  /**
   * @generated from field: repeated string changes = 1;
   */
  changes: string[];
};

/**
 * @generated from message tabletmanagerdata.PreflightSchemaRequest
 */
export type PreflightSchemaRequestJson = {
  /**
   * @generated from field: repeated string changes = 1;
   */
  changes?: string[];
};

/**
 * Describes the message tabletmanagerdata.PreflightSchemaRequest.
 * Use `create(PreflightSchemaRequestSchema)` to create a new message.
 */
export const PreflightSchemaRequestSchema: GenMessage<PreflightSchemaRequest, PreflightSchemaRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 30);

/**
 * @generated from message tabletmanagerdata.PreflightSchemaResponse
 */
export type PreflightSchemaResponse = Message<"tabletmanagerdata.PreflightSchemaResponse"> & {
  /**
   * change_results has for each change the schema before and after it.
   * The number of elements is identical to the length of "changes" in the request.
   *
   * @generated from field: repeated tabletmanagerdata.SchemaChangeResult change_results = 1;
   */
  changeResults: SchemaChangeResult[];
};

/**
 * @generated from message tabletmanagerdata.PreflightSchemaResponse
 */
export type PreflightSchemaResponseJson = {
  /**
   * change_results has for each change the schema before and after it.
   * The number of elements is identical to the length of "changes" in the request.
   *
   * @generated from field: repeated tabletmanagerdata.SchemaChangeResult change_results = 1;
   */
  changeResults?: SchemaChangeResultJson[];
};

/**
 * Describes the message tabletmanagerdata.PreflightSchemaResponse.
 * Use `create(PreflightSchemaResponseSchema)` to create a new message.
 */
export const PreflightSchemaResponseSchema: GenMessage<PreflightSchemaResponse, PreflightSchemaResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 31);

/**
 * @generated from message tabletmanagerdata.ApplySchemaRequest
 */
export type ApplySchemaRequest = Message<"tabletmanagerdata.ApplySchemaRequest"> & {
  /**
   * @generated from field: string sql = 1;
   */
  sql: string;

  /**
   * @generated from field: bool force = 2;
   */
  force: boolean;

  /**
   * @generated from field: bool allow_replication = 3;
   */
  allowReplication: boolean;

  /**
   * @generated from field: tabletmanagerdata.SchemaDefinition before_schema = 4;
   */
  beforeSchema?: SchemaDefinition;

  /**
   * @generated from field: tabletmanagerdata.SchemaDefinition after_schema = 5;
   */
  afterSchema?: SchemaDefinition;

  /**
   * @generated from field: string sql_mode = 6;
   */
  sqlMode: string;

  /**
   * BatchSize indicates how many queries to apply together.
   *
   * @generated from field: int64 batch_size = 7;
   */
  batchSize: bigint;

  /**
   * DisableForeignKeyChecks will result in setting foreign_key_checks to off before applying the schema.
   *
   * @generated from field: bool disable_foreign_key_checks = 8;
   */
  disableForeignKeyChecks: boolean;
};

/**
 * @generated from message tabletmanagerdata.ApplySchemaRequest
 */
export type ApplySchemaRequestJson = {
  /**
   * @generated from field: string sql = 1;
   */
  sql?: string;

  /**
   * @generated from field: bool force = 2;
   */
  force?: boolean;

  /**
   * @generated from field: bool allow_replication = 3;
   */
  allowReplication?: boolean;

  /**
   * @generated from field: tabletmanagerdata.SchemaDefinition before_schema = 4;
   */
  beforeSchema?: SchemaDefinitionJson;

  /**
   * @generated from field: tabletmanagerdata.SchemaDefinition after_schema = 5;
   */
  afterSchema?: SchemaDefinitionJson;

  /**
   * @generated from field: string sql_mode = 6;
   */
  sqlMode?: string;

  /**
   * BatchSize indicates how many queries to apply together.
   *
   * @generated from field: int64 batch_size = 7;
   */
  batchSize?: string;

  /**
   * DisableForeignKeyChecks will result in setting foreign_key_checks to off before applying the schema.
   *
   * @generated from field: bool disable_foreign_key_checks = 8;
   */
  disableForeignKeyChecks?: boolean;
};

/**
 * Describes the message tabletmanagerdata.ApplySchemaRequest.
 * Use `create(ApplySchemaRequestSchema)` to create a new message.
 */
export const ApplySchemaRequestSchema: GenMessage<ApplySchemaRequest, ApplySchemaRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 32);

/**
 * @generated from message tabletmanagerdata.ApplySchemaResponse
 */
export type ApplySchemaResponse = Message<"tabletmanagerdata.ApplySchemaResponse"> & {
  /**
   * @generated from field: tabletmanagerdata.SchemaDefinition before_schema = 1;
   */
  beforeSchema?: SchemaDefinition;

  /**
   * @generated from field: tabletmanagerdata.SchemaDefinition after_schema = 2;
   */
  afterSchema?: SchemaDefinition;
};

/**
 * @generated from message tabletmanagerdata.ApplySchemaResponse
 */
export type ApplySchemaResponseJson = {
  /**
   * @generated from field: tabletmanagerdata.SchemaDefinition before_schema = 1;
   */
  beforeSchema?: SchemaDefinitionJson;

  /**
   * @generated from field: tabletmanagerdata.SchemaDefinition after_schema = 2;
   */
  afterSchema?: SchemaDefinitionJson;
};

/**
 * Describes the message tabletmanagerdata.ApplySchemaResponse.
 * Use `create(ApplySchemaResponseSchema)` to create a new message.
 */
export const ApplySchemaResponseSchema: GenMessage<ApplySchemaResponse, ApplySchemaResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 33);

/**
 * @generated from message tabletmanagerdata.LockTablesRequest
 */
export type LockTablesRequest = Message<"tabletmanagerdata.LockTablesRequest"> & {
};

/**
 * @generated from message tabletmanagerdata.LockTablesRequest
 */
export type LockTablesRequestJson = {
};

/**
 * Describes the message tabletmanagerdata.LockTablesRequest.
 * Use `create(LockTablesRequestSchema)` to create a new message.
 */
export const LockTablesRequestSchema: GenMessage<LockTablesRequest, LockTablesRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 34);

/**
 * @generated from message tabletmanagerdata.LockTablesResponse
 */
export type LockTablesResponse = Message<"tabletmanagerdata.LockTablesResponse"> & {
};

/**
 * @generated from message tabletmanagerdata.LockTablesResponse
 */
export type LockTablesResponseJson = {
};

/**
 * Describes the message tabletmanagerdata.LockTablesResponse.
 * Use `create(LockTablesResponseSchema)` to create a new message.
 */
export const LockTablesResponseSchema: GenMessage<LockTablesResponse, LockTablesResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 35);

/**
 * @generated from message tabletmanagerdata.UnlockTablesRequest
 */
export type UnlockTablesRequest = Message<"tabletmanagerdata.UnlockTablesRequest"> & {
};

/**
 * @generated from message tabletmanagerdata.UnlockTablesRequest
 */
export type UnlockTablesRequestJson = {
};

/**
 * Describes the message tabletmanagerdata.UnlockTablesRequest.
 * Use `create(UnlockTablesRequestSchema)` to create a new message.
 */
export const UnlockTablesRequestSchema: GenMessage<UnlockTablesRequest, UnlockTablesRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 36);

/**
 * @generated from message tabletmanagerdata.UnlockTablesResponse
 */
export type UnlockTablesResponse = Message<"tabletmanagerdata.UnlockTablesResponse"> & {
};

/**
 * @generated from message tabletmanagerdata.UnlockTablesResponse
 */
export type UnlockTablesResponseJson = {
};

/**
 * Describes the message tabletmanagerdata.UnlockTablesResponse.
 * Use `create(UnlockTablesResponseSchema)` to create a new message.
 */
export const UnlockTablesResponseSchema: GenMessage<UnlockTablesResponse, UnlockTablesResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 37);

/**
 * @generated from message tabletmanagerdata.ExecuteQueryRequest
 */
export type ExecuteQueryRequest = Message<"tabletmanagerdata.ExecuteQueryRequest"> & {
  /**
   * @generated from field: bytes query = 1;
   */
  query: Uint8Array;

  /**
   * @generated from field: string db_name = 2;
   */
  dbName: string;

  /**
   * @generated from field: uint64 max_rows = 3;
   */
  maxRows: bigint;

  /**
   * caller_id identifies the caller. This is the effective caller ID,
   * set by the application to further identify the caller.
   *
   * @generated from field: vtrpc.CallerID caller_id = 4;
   */
  callerId?: CallerID;
};

/**
 * @generated from message tabletmanagerdata.ExecuteQueryRequest
 */
export type ExecuteQueryRequestJson = {
  /**
   * @generated from field: bytes query = 1;
   */
  query?: string;

  /**
   * @generated from field: string db_name = 2;
   */
  dbName?: string;

  /**
   * @generated from field: uint64 max_rows = 3;
   */
  maxRows?: string;

  /**
   * caller_id identifies the caller. This is the effective caller ID,
   * set by the application to further identify the caller.
   *
   * @generated from field: vtrpc.CallerID caller_id = 4;
   */
  callerId?: CallerIDJson;
};

/**
 * Describes the message tabletmanagerdata.ExecuteQueryRequest.
 * Use `create(ExecuteQueryRequestSchema)` to create a new message.
 */
export const ExecuteQueryRequestSchema: GenMessage<ExecuteQueryRequest, ExecuteQueryRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 38);

/**
 * @generated from message tabletmanagerdata.ExecuteQueryResponse
 */
export type ExecuteQueryResponse = Message<"tabletmanagerdata.ExecuteQueryResponse"> & {
  /**
   * @generated from field: query.QueryResult result = 1;
   */
  result?: QueryResult;
};

/**
 * @generated from message tabletmanagerdata.ExecuteQueryResponse
 */
export type ExecuteQueryResponseJson = {
  /**
   * @generated from field: query.QueryResult result = 1;
   */
  result?: QueryResultJson;
};

/**
 * Describes the message tabletmanagerdata.ExecuteQueryResponse.
 * Use `create(ExecuteQueryResponseSchema)` to create a new message.
 */
export const ExecuteQueryResponseSchema: GenMessage<ExecuteQueryResponse, ExecuteQueryResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 39);

/**
 * @generated from message tabletmanagerdata.ExecuteFetchAsDbaRequest
 */
export type ExecuteFetchAsDbaRequest = Message<"tabletmanagerdata.ExecuteFetchAsDbaRequest"> & {
  /**
   * @generated from field: bytes query = 1;
   */
  query: Uint8Array;

  /**
   * @generated from field: string db_name = 2;
   */
  dbName: string;

  /**
   * @generated from field: uint64 max_rows = 3;
   */
  maxRows: bigint;

  /**
   * @generated from field: bool disable_binlogs = 4;
   */
  disableBinlogs: boolean;

  /**
   * @generated from field: bool reload_schema = 5;
   */
  reloadSchema: boolean;

  /**
   * @generated from field: bool disable_foreign_key_checks = 6;
   */
  disableForeignKeyChecks: boolean;
};

/**
 * @generated from message tabletmanagerdata.ExecuteFetchAsDbaRequest
 */
export type ExecuteFetchAsDbaRequestJson = {
  /**
   * @generated from field: bytes query = 1;
   */
  query?: string;

  /**
   * @generated from field: string db_name = 2;
   */
  dbName?: string;

  /**
   * @generated from field: uint64 max_rows = 3;
   */
  maxRows?: string;

  /**
   * @generated from field: bool disable_binlogs = 4;
   */
  disableBinlogs?: boolean;

  /**
   * @generated from field: bool reload_schema = 5;
   */
  reloadSchema?: boolean;

  /**
   * @generated from field: bool disable_foreign_key_checks = 6;
   */
  disableForeignKeyChecks?: boolean;
};

/**
 * Describes the message tabletmanagerdata.ExecuteFetchAsDbaRequest.
 * Use `create(ExecuteFetchAsDbaRequestSchema)` to create a new message.
 */
export const ExecuteFetchAsDbaRequestSchema: GenMessage<ExecuteFetchAsDbaRequest, ExecuteFetchAsDbaRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 40);

/**
 * @generated from message tabletmanagerdata.ExecuteFetchAsDbaResponse
 */
export type ExecuteFetchAsDbaResponse = Message<"tabletmanagerdata.ExecuteFetchAsDbaResponse"> & {
  /**
   * @generated from field: query.QueryResult result = 1;
   */
  result?: QueryResult;
};

/**
 * @generated from message tabletmanagerdata.ExecuteFetchAsDbaResponse
 */
export type ExecuteFetchAsDbaResponseJson = {
  /**
   * @generated from field: query.QueryResult result = 1;
   */
  result?: QueryResultJson;
};

/**
 * Describes the message tabletmanagerdata.ExecuteFetchAsDbaResponse.
 * Use `create(ExecuteFetchAsDbaResponseSchema)` to create a new message.
 */
export const ExecuteFetchAsDbaResponseSchema: GenMessage<ExecuteFetchAsDbaResponse, ExecuteFetchAsDbaResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 41);

/**
 * @generated from message tabletmanagerdata.ExecuteMultiFetchAsDbaRequest
 */
export type ExecuteMultiFetchAsDbaRequest = Message<"tabletmanagerdata.ExecuteMultiFetchAsDbaRequest"> & {
  /**
   * @generated from field: bytes sql = 1;
   */
  sql: Uint8Array;

  /**
   * @generated from field: string db_name = 2;
   */
  dbName: string;

  /**
   * @generated from field: uint64 max_rows = 3;
   */
  maxRows: bigint;

  /**
   * @generated from field: bool disable_binlogs = 4;
   */
  disableBinlogs: boolean;

  /**
   * @generated from field: bool reload_schema = 5;
   */
  reloadSchema: boolean;

  /**
   * @generated from field: bool disable_foreign_key_checks = 6;
   */
  disableForeignKeyChecks: boolean;
};

/**
 * @generated from message tabletmanagerdata.ExecuteMultiFetchAsDbaRequest
 */
export type ExecuteMultiFetchAsDbaRequestJson = {
  /**
   * @generated from field: bytes sql = 1;
   */
  sql?: string;

  /**
   * @generated from field: string db_name = 2;
   */
  dbName?: string;

  /**
   * @generated from field: uint64 max_rows = 3;
   */
  maxRows?: string;

  /**
   * @generated from field: bool disable_binlogs = 4;
   */
  disableBinlogs?: boolean;

  /**
   * @generated from field: bool reload_schema = 5;
   */
  reloadSchema?: boolean;

  /**
   * @generated from field: bool disable_foreign_key_checks = 6;
   */
  disableForeignKeyChecks?: boolean;
};

/**
 * Describes the message tabletmanagerdata.ExecuteMultiFetchAsDbaRequest.
 * Use `create(ExecuteMultiFetchAsDbaRequestSchema)` to create a new message.
 */
export const ExecuteMultiFetchAsDbaRequestSchema: GenMessage<ExecuteMultiFetchAsDbaRequest, ExecuteMultiFetchAsDbaRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 42);

/**
 * @generated from message tabletmanagerdata.ExecuteMultiFetchAsDbaResponse
 */
export type ExecuteMultiFetchAsDbaResponse = Message<"tabletmanagerdata.ExecuteMultiFetchAsDbaResponse"> & {
  /**
   * @generated from field: repeated query.QueryResult results = 1;
   */
  results: QueryResult[];
};

/**
 * @generated from message tabletmanagerdata.ExecuteMultiFetchAsDbaResponse
 */
export type ExecuteMultiFetchAsDbaResponseJson = {
  /**
   * @generated from field: repeated query.QueryResult results = 1;
   */
  results?: QueryResultJson[];
};

/**
 * Describes the message tabletmanagerdata.ExecuteMultiFetchAsDbaResponse.
 * Use `create(ExecuteMultiFetchAsDbaResponseSchema)` to create a new message.
 */
export const ExecuteMultiFetchAsDbaResponseSchema: GenMessage<ExecuteMultiFetchAsDbaResponse, ExecuteMultiFetchAsDbaResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 43);

/**
 * @generated from message tabletmanagerdata.ExecuteFetchAsAllPrivsRequest
 */
export type ExecuteFetchAsAllPrivsRequest = Message<"tabletmanagerdata.ExecuteFetchAsAllPrivsRequest"> & {
  /**
   * @generated from field: bytes query = 1;
   */
  query: Uint8Array;

  /**
   * @generated from field: string db_name = 2;
   */
  dbName: string;

  /**
   * @generated from field: uint64 max_rows = 3;
   */
  maxRows: bigint;

  /**
   * @generated from field: bool reload_schema = 4;
   */
  reloadSchema: boolean;
};

/**
 * @generated from message tabletmanagerdata.ExecuteFetchAsAllPrivsRequest
 */
export type ExecuteFetchAsAllPrivsRequestJson = {
  /**
   * @generated from field: bytes query = 1;
   */
  query?: string;

  /**
   * @generated from field: string db_name = 2;
   */
  dbName?: string;

  /**
   * @generated from field: uint64 max_rows = 3;
   */
  maxRows?: string;

  /**
   * @generated from field: bool reload_schema = 4;
   */
  reloadSchema?: boolean;
};

/**
 * Describes the message tabletmanagerdata.ExecuteFetchAsAllPrivsRequest.
 * Use `create(ExecuteFetchAsAllPrivsRequestSchema)` to create a new message.
 */
export const ExecuteFetchAsAllPrivsRequestSchema: GenMessage<ExecuteFetchAsAllPrivsRequest, ExecuteFetchAsAllPrivsRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 44);

/**
 * @generated from message tabletmanagerdata.ExecuteFetchAsAllPrivsResponse
 */
export type ExecuteFetchAsAllPrivsResponse = Message<"tabletmanagerdata.ExecuteFetchAsAllPrivsResponse"> & {
  /**
   * @generated from field: query.QueryResult result = 1;
   */
  result?: QueryResult;
};

/**
 * @generated from message tabletmanagerdata.ExecuteFetchAsAllPrivsResponse
 */
export type ExecuteFetchAsAllPrivsResponseJson = {
  /**
   * @generated from field: query.QueryResult result = 1;
   */
  result?: QueryResultJson;
};

/**
 * Describes the message tabletmanagerdata.ExecuteFetchAsAllPrivsResponse.
 * Use `create(ExecuteFetchAsAllPrivsResponseSchema)` to create a new message.
 */
export const ExecuteFetchAsAllPrivsResponseSchema: GenMessage<ExecuteFetchAsAllPrivsResponse, ExecuteFetchAsAllPrivsResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 45);

/**
 * @generated from message tabletmanagerdata.ExecuteFetchAsAppRequest
 */
export type ExecuteFetchAsAppRequest = Message<"tabletmanagerdata.ExecuteFetchAsAppRequest"> & {
  /**
   * @generated from field: bytes query = 1;
   */
  query: Uint8Array;

  /**
   * @generated from field: uint64 max_rows = 2;
   */
  maxRows: bigint;
};

/**
 * @generated from message tabletmanagerdata.ExecuteFetchAsAppRequest
 */
export type ExecuteFetchAsAppRequestJson = {
  /**
   * @generated from field: bytes query = 1;
   */
  query?: string;

  /**
   * @generated from field: uint64 max_rows = 2;
   */
  maxRows?: string;
};

/**
 * Describes the message tabletmanagerdata.ExecuteFetchAsAppRequest.
 * Use `create(ExecuteFetchAsAppRequestSchema)` to create a new message.
 */
export const ExecuteFetchAsAppRequestSchema: GenMessage<ExecuteFetchAsAppRequest, ExecuteFetchAsAppRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 46);

/**
 * @generated from message tabletmanagerdata.ExecuteFetchAsAppResponse
 */
export type ExecuteFetchAsAppResponse = Message<"tabletmanagerdata.ExecuteFetchAsAppResponse"> & {
  /**
   * @generated from field: query.QueryResult result = 1;
   */
  result?: QueryResult;
};

/**
 * @generated from message tabletmanagerdata.ExecuteFetchAsAppResponse
 */
export type ExecuteFetchAsAppResponseJson = {
  /**
   * @generated from field: query.QueryResult result = 1;
   */
  result?: QueryResultJson;
};

/**
 * Describes the message tabletmanagerdata.ExecuteFetchAsAppResponse.
 * Use `create(ExecuteFetchAsAppResponseSchema)` to create a new message.
 */
export const ExecuteFetchAsAppResponseSchema: GenMessage<ExecuteFetchAsAppResponse, ExecuteFetchAsAppResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 47);

/**
 * @generated from message tabletmanagerdata.GetUnresolvedTransactionsRequest
 */
export type GetUnresolvedTransactionsRequest = Message<"tabletmanagerdata.GetUnresolvedTransactionsRequest"> & {
  /**
   * @generated from field: int64 abandon_age = 1;
   */
  abandonAge: bigint;
};

/**
 * @generated from message tabletmanagerdata.GetUnresolvedTransactionsRequest
 */
export type GetUnresolvedTransactionsRequestJson = {
  /**
   * @generated from field: int64 abandon_age = 1;
   */
  abandonAge?: string;
};

/**
 * Describes the message tabletmanagerdata.GetUnresolvedTransactionsRequest.
 * Use `create(GetUnresolvedTransactionsRequestSchema)` to create a new message.
 */
export const GetUnresolvedTransactionsRequestSchema: GenMessage<GetUnresolvedTransactionsRequest, GetUnresolvedTransactionsRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 48);

/**
 * @generated from message tabletmanagerdata.GetUnresolvedTransactionsResponse
 */
export type GetUnresolvedTransactionsResponse = Message<"tabletmanagerdata.GetUnresolvedTransactionsResponse"> & {
  /**
   * @generated from field: repeated query.TransactionMetadata transactions = 1;
   */
  transactions: TransactionMetadata[];
};

/**
 * @generated from message tabletmanagerdata.GetUnresolvedTransactionsResponse
 */
export type GetUnresolvedTransactionsResponseJson = {
  /**
   * @generated from field: repeated query.TransactionMetadata transactions = 1;
   */
  transactions?: TransactionMetadataJson[];
};

/**
 * Describes the message tabletmanagerdata.GetUnresolvedTransactionsResponse.
 * Use `create(GetUnresolvedTransactionsResponseSchema)` to create a new message.
 */
export const GetUnresolvedTransactionsResponseSchema: GenMessage<GetUnresolvedTransactionsResponse, GetUnresolvedTransactionsResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 49);

/**
 * @generated from message tabletmanagerdata.ReadTransactionRequest
 */
export type ReadTransactionRequest = Message<"tabletmanagerdata.ReadTransactionRequest"> & {
  /**
   * @generated from field: string dtid = 1;
   */
  dtid: string;
};

/**
 * @generated from message tabletmanagerdata.ReadTransactionRequest
 */
export type ReadTransactionRequestJson = {
  /**
   * @generated from field: string dtid = 1;
   */
  dtid?: string;
};

/**
 * Describes the message tabletmanagerdata.ReadTransactionRequest.
 * Use `create(ReadTransactionRequestSchema)` to create a new message.
 */
export const ReadTransactionRequestSchema: GenMessage<ReadTransactionRequest, ReadTransactionRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 50);

/**
 * @generated from message tabletmanagerdata.ReadTransactionResponse
 */
export type ReadTransactionResponse = Message<"tabletmanagerdata.ReadTransactionResponse"> & {
  /**
   * @generated from field: query.TransactionMetadata transaction = 1;
   */
  transaction?: TransactionMetadata;
};

/**
 * @generated from message tabletmanagerdata.ReadTransactionResponse
 */
export type ReadTransactionResponseJson = {
  /**
   * @generated from field: query.TransactionMetadata transaction = 1;
   */
  transaction?: TransactionMetadataJson;
};

/**
 * Describes the message tabletmanagerdata.ReadTransactionResponse.
 * Use `create(ReadTransactionResponseSchema)` to create a new message.
 */
export const ReadTransactionResponseSchema: GenMessage<ReadTransactionResponse, ReadTransactionResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 51);

/**
 * @generated from message tabletmanagerdata.ConcludeTransactionRequest
 */
export type ConcludeTransactionRequest = Message<"tabletmanagerdata.ConcludeTransactionRequest"> & {
  /**
   * @generated from field: string dtid = 1;
   */
  dtid: string;

  /**
   * @generated from field: bool mm = 2;
   */
  mm: boolean;
};

/**
 * @generated from message tabletmanagerdata.ConcludeTransactionRequest
 */
export type ConcludeTransactionRequestJson = {
  /**
   * @generated from field: string dtid = 1;
   */
  dtid?: string;

  /**
   * @generated from field: bool mm = 2;
   */
  mm?: boolean;
};

/**
 * Describes the message tabletmanagerdata.ConcludeTransactionRequest.
 * Use `create(ConcludeTransactionRequestSchema)` to create a new message.
 */
export const ConcludeTransactionRequestSchema: GenMessage<ConcludeTransactionRequest, ConcludeTransactionRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 52);

/**
 * @generated from message tabletmanagerdata.ConcludeTransactionResponse
 */
export type ConcludeTransactionResponse = Message<"tabletmanagerdata.ConcludeTransactionResponse"> & {
};

/**
 * @generated from message tabletmanagerdata.ConcludeTransactionResponse
 */
export type ConcludeTransactionResponseJson = {
};

/**
 * Describes the message tabletmanagerdata.ConcludeTransactionResponse.
 * Use `create(ConcludeTransactionResponseSchema)` to create a new message.
 */
export const ConcludeTransactionResponseSchema: GenMessage<ConcludeTransactionResponse, ConcludeTransactionResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 53);

/**
 * @generated from message tabletmanagerdata.MysqlHostMetricsRequest
 */
export type MysqlHostMetricsRequest = Message<"tabletmanagerdata.MysqlHostMetricsRequest"> & {
};

/**
 * @generated from message tabletmanagerdata.MysqlHostMetricsRequest
 */
export type MysqlHostMetricsRequestJson = {
};

/**
 * Describes the message tabletmanagerdata.MysqlHostMetricsRequest.
 * Use `create(MysqlHostMetricsRequestSchema)` to create a new message.
 */
export const MysqlHostMetricsRequestSchema: GenMessage<MysqlHostMetricsRequest, MysqlHostMetricsRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 54);

/**
 * @generated from message tabletmanagerdata.MysqlHostMetricsResponse
 */
export type MysqlHostMetricsResponse = Message<"tabletmanagerdata.MysqlHostMetricsResponse"> & {
  /**
   * @generated from field: mysqlctl.HostMetricsResponse HostMetrics = 1;
   */
  HostMetrics?: HostMetricsResponse;
};

/**
 * @generated from message tabletmanagerdata.MysqlHostMetricsResponse
 */
export type MysqlHostMetricsResponseJson = {
  /**
   * @generated from field: mysqlctl.HostMetricsResponse HostMetrics = 1;
   */
  HostMetrics?: HostMetricsResponseJson;
};

/**
 * Describes the message tabletmanagerdata.MysqlHostMetricsResponse.
 * Use `create(MysqlHostMetricsResponseSchema)` to create a new message.
 */
export const MysqlHostMetricsResponseSchema: GenMessage<MysqlHostMetricsResponse, MysqlHostMetricsResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 55);

/**
 * @generated from message tabletmanagerdata.ReplicationStatusRequest
 */
export type ReplicationStatusRequest = Message<"tabletmanagerdata.ReplicationStatusRequest"> & {
};

/**
 * @generated from message tabletmanagerdata.ReplicationStatusRequest
 */
export type ReplicationStatusRequestJson = {
};

/**
 * Describes the message tabletmanagerdata.ReplicationStatusRequest.
 * Use `create(ReplicationStatusRequestSchema)` to create a new message.
 */
export const ReplicationStatusRequestSchema: GenMessage<ReplicationStatusRequest, ReplicationStatusRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 56);

/**
 * @generated from message tabletmanagerdata.ReplicationStatusResponse
 */
export type ReplicationStatusResponse = Message<"tabletmanagerdata.ReplicationStatusResponse"> & {
  /**
   * @generated from field: replicationdata.Status status = 1;
   */
  status?: Status;
};

/**
 * @generated from message tabletmanagerdata.ReplicationStatusResponse
 */
export type ReplicationStatusResponseJson = {
  /**
   * @generated from field: replicationdata.Status status = 1;
   */
  status?: StatusJson;
};

/**
 * Describes the message tabletmanagerdata.ReplicationStatusResponse.
 * Use `create(ReplicationStatusResponseSchema)` to create a new message.
 */
export const ReplicationStatusResponseSchema: GenMessage<ReplicationStatusResponse, ReplicationStatusResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 57);

/**
 * @generated from message tabletmanagerdata.PrimaryStatusRequest
 */
export type PrimaryStatusRequest = Message<"tabletmanagerdata.PrimaryStatusRequest"> & {
};

/**
 * @generated from message tabletmanagerdata.PrimaryStatusRequest
 */
export type PrimaryStatusRequestJson = {
};

/**
 * Describes the message tabletmanagerdata.PrimaryStatusRequest.
 * Use `create(PrimaryStatusRequestSchema)` to create a new message.
 */
export const PrimaryStatusRequestSchema: GenMessage<PrimaryStatusRequest, PrimaryStatusRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 58);

/**
 * @generated from message tabletmanagerdata.PrimaryStatusResponse
 */
export type PrimaryStatusResponse = Message<"tabletmanagerdata.PrimaryStatusResponse"> & {
  /**
   * @generated from field: replicationdata.PrimaryStatus status = 1;
   */
  status?: PrimaryStatus;
};

/**
 * @generated from message tabletmanagerdata.PrimaryStatusResponse
 */
export type PrimaryStatusResponseJson = {
  /**
   * @generated from field: replicationdata.PrimaryStatus status = 1;
   */
  status?: PrimaryStatusJson;
};

/**
 * Describes the message tabletmanagerdata.PrimaryStatusResponse.
 * Use `create(PrimaryStatusResponseSchema)` to create a new message.
 */
export const PrimaryStatusResponseSchema: GenMessage<PrimaryStatusResponse, PrimaryStatusResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 59);

/**
 * @generated from message tabletmanagerdata.PrimaryPositionRequest
 */
export type PrimaryPositionRequest = Message<"tabletmanagerdata.PrimaryPositionRequest"> & {
};

/**
 * @generated from message tabletmanagerdata.PrimaryPositionRequest
 */
export type PrimaryPositionRequestJson = {
};

/**
 * Describes the message tabletmanagerdata.PrimaryPositionRequest.
 * Use `create(PrimaryPositionRequestSchema)` to create a new message.
 */
export const PrimaryPositionRequestSchema: GenMessage<PrimaryPositionRequest, PrimaryPositionRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 60);

/**
 * @generated from message tabletmanagerdata.PrimaryPositionResponse
 */
export type PrimaryPositionResponse = Message<"tabletmanagerdata.PrimaryPositionResponse"> & {
  /**
   * @generated from field: string position = 1;
   */
  position: string;
};

/**
 * @generated from message tabletmanagerdata.PrimaryPositionResponse
 */
export type PrimaryPositionResponseJson = {
  /**
   * @generated from field: string position = 1;
   */
  position?: string;
};

/**
 * Describes the message tabletmanagerdata.PrimaryPositionResponse.
 * Use `create(PrimaryPositionResponseSchema)` to create a new message.
 */
export const PrimaryPositionResponseSchema: GenMessage<PrimaryPositionResponse, PrimaryPositionResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 61);

/**
 * @generated from message tabletmanagerdata.WaitForPositionRequest
 */
export type WaitForPositionRequest = Message<"tabletmanagerdata.WaitForPositionRequest"> & {
  /**
   * @generated from field: string position = 1;
   */
  position: string;
};

/**
 * @generated from message tabletmanagerdata.WaitForPositionRequest
 */
export type WaitForPositionRequestJson = {
  /**
   * @generated from field: string position = 1;
   */
  position?: string;
};

/**
 * Describes the message tabletmanagerdata.WaitForPositionRequest.
 * Use `create(WaitForPositionRequestSchema)` to create a new message.
 */
export const WaitForPositionRequestSchema: GenMessage<WaitForPositionRequest, WaitForPositionRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 62);

/**
 * @generated from message tabletmanagerdata.WaitForPositionResponse
 */
export type WaitForPositionResponse = Message<"tabletmanagerdata.WaitForPositionResponse"> & {
};

/**
 * @generated from message tabletmanagerdata.WaitForPositionResponse
 */
export type WaitForPositionResponseJson = {
};

/**
 * Describes the message tabletmanagerdata.WaitForPositionResponse.
 * Use `create(WaitForPositionResponseSchema)` to create a new message.
 */
export const WaitForPositionResponseSchema: GenMessage<WaitForPositionResponse, WaitForPositionResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 63);

/**
 * @generated from message tabletmanagerdata.StopReplicationRequest
 */
export type StopReplicationRequest = Message<"tabletmanagerdata.StopReplicationRequest"> & {
};

/**
 * @generated from message tabletmanagerdata.StopReplicationRequest
 */
export type StopReplicationRequestJson = {
};

/**
 * Describes the message tabletmanagerdata.StopReplicationRequest.
 * Use `create(StopReplicationRequestSchema)` to create a new message.
 */
export const StopReplicationRequestSchema: GenMessage<StopReplicationRequest, StopReplicationRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 64);

/**
 * @generated from message tabletmanagerdata.StopReplicationResponse
 */
export type StopReplicationResponse = Message<"tabletmanagerdata.StopReplicationResponse"> & {
};

/**
 * @generated from message tabletmanagerdata.StopReplicationResponse
 */
export type StopReplicationResponseJson = {
};

/**
 * Describes the message tabletmanagerdata.StopReplicationResponse.
 * Use `create(StopReplicationResponseSchema)` to create a new message.
 */
export const StopReplicationResponseSchema: GenMessage<StopReplicationResponse, StopReplicationResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 65);

/**
 * @generated from message tabletmanagerdata.StopReplicationMinimumRequest
 */
export type StopReplicationMinimumRequest = Message<"tabletmanagerdata.StopReplicationMinimumRequest"> & {
  /**
   * @generated from field: string position = 1;
   */
  position: string;

  /**
   * @generated from field: int64 wait_timeout = 2;
   */
  waitTimeout: bigint;
};

/**
 * @generated from message tabletmanagerdata.StopReplicationMinimumRequest
 */
export type StopReplicationMinimumRequestJson = {
  /**
   * @generated from field: string position = 1;
   */
  position?: string;

  /**
   * @generated from field: int64 wait_timeout = 2;
   */
  waitTimeout?: string;
};

/**
 * Describes the message tabletmanagerdata.StopReplicationMinimumRequest.
 * Use `create(StopReplicationMinimumRequestSchema)` to create a new message.
 */
export const StopReplicationMinimumRequestSchema: GenMessage<StopReplicationMinimumRequest, StopReplicationMinimumRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 66);

/**
 * @generated from message tabletmanagerdata.StopReplicationMinimumResponse
 */
export type StopReplicationMinimumResponse = Message<"tabletmanagerdata.StopReplicationMinimumResponse"> & {
  /**
   * @generated from field: string position = 1;
   */
  position: string;
};

/**
 * @generated from message tabletmanagerdata.StopReplicationMinimumResponse
 */
export type StopReplicationMinimumResponseJson = {
  /**
   * @generated from field: string position = 1;
   */
  position?: string;
};

/**
 * Describes the message tabletmanagerdata.StopReplicationMinimumResponse.
 * Use `create(StopReplicationMinimumResponseSchema)` to create a new message.
 */
export const StopReplicationMinimumResponseSchema: GenMessage<StopReplicationMinimumResponse, StopReplicationMinimumResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 67);

/**
 * @generated from message tabletmanagerdata.StartReplicationRequest
 */
export type StartReplicationRequest = Message<"tabletmanagerdata.StartReplicationRequest"> & {
  /**
   * @generated from field: bool semiSync = 1;
   */
  semiSync: boolean;
};

/**
 * @generated from message tabletmanagerdata.StartReplicationRequest
 */
export type StartReplicationRequestJson = {
  /**
   * @generated from field: bool semiSync = 1;
   */
  semiSync?: boolean;
};

/**
 * Describes the message tabletmanagerdata.StartReplicationRequest.
 * Use `create(StartReplicationRequestSchema)` to create a new message.
 */
export const StartReplicationRequestSchema: GenMessage<StartReplicationRequest, StartReplicationRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 68);

/**
 * @generated from message tabletmanagerdata.StartReplicationResponse
 */
export type StartReplicationResponse = Message<"tabletmanagerdata.StartReplicationResponse"> & {
};

/**
 * @generated from message tabletmanagerdata.StartReplicationResponse
 */
export type StartReplicationResponseJson = {
};

/**
 * Describes the message tabletmanagerdata.StartReplicationResponse.
 * Use `create(StartReplicationResponseSchema)` to create a new message.
 */
export const StartReplicationResponseSchema: GenMessage<StartReplicationResponse, StartReplicationResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 69);

/**
 * @generated from message tabletmanagerdata.StartReplicationUntilAfterRequest
 */
export type StartReplicationUntilAfterRequest = Message<"tabletmanagerdata.StartReplicationUntilAfterRequest"> & {
  /**
   * @generated from field: string position = 1;
   */
  position: string;

  /**
   * @generated from field: int64 wait_timeout = 2;
   */
  waitTimeout: bigint;
};

/**
 * @generated from message tabletmanagerdata.StartReplicationUntilAfterRequest
 */
export type StartReplicationUntilAfterRequestJson = {
  /**
   * @generated from field: string position = 1;
   */
  position?: string;

  /**
   * @generated from field: int64 wait_timeout = 2;
   */
  waitTimeout?: string;
};

/**
 * Describes the message tabletmanagerdata.StartReplicationUntilAfterRequest.
 * Use `create(StartReplicationUntilAfterRequestSchema)` to create a new message.
 */
export const StartReplicationUntilAfterRequestSchema: GenMessage<StartReplicationUntilAfterRequest, StartReplicationUntilAfterRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 70);

/**
 * @generated from message tabletmanagerdata.StartReplicationUntilAfterResponse
 */
export type StartReplicationUntilAfterResponse = Message<"tabletmanagerdata.StartReplicationUntilAfterResponse"> & {
};

/**
 * @generated from message tabletmanagerdata.StartReplicationUntilAfterResponse
 */
export type StartReplicationUntilAfterResponseJson = {
};

/**
 * Describes the message tabletmanagerdata.StartReplicationUntilAfterResponse.
 * Use `create(StartReplicationUntilAfterResponseSchema)` to create a new message.
 */
export const StartReplicationUntilAfterResponseSchema: GenMessage<StartReplicationUntilAfterResponse, StartReplicationUntilAfterResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 71);

/**
 * @generated from message tabletmanagerdata.GetReplicasRequest
 */
export type GetReplicasRequest = Message<"tabletmanagerdata.GetReplicasRequest"> & {
};

/**
 * @generated from message tabletmanagerdata.GetReplicasRequest
 */
export type GetReplicasRequestJson = {
};

/**
 * Describes the message tabletmanagerdata.GetReplicasRequest.
 * Use `create(GetReplicasRequestSchema)` to create a new message.
 */
export const GetReplicasRequestSchema: GenMessage<GetReplicasRequest, GetReplicasRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 72);

/**
 * @generated from message tabletmanagerdata.GetReplicasResponse
 */
export type GetReplicasResponse = Message<"tabletmanagerdata.GetReplicasResponse"> & {
  /**
   * @generated from field: repeated string addrs = 1;
   */
  addrs: string[];
};

/**
 * @generated from message tabletmanagerdata.GetReplicasResponse
 */
export type GetReplicasResponseJson = {
  /**
   * @generated from field: repeated string addrs = 1;
   */
  addrs?: string[];
};

/**
 * Describes the message tabletmanagerdata.GetReplicasResponse.
 * Use `create(GetReplicasResponseSchema)` to create a new message.
 */
export const GetReplicasResponseSchema: GenMessage<GetReplicasResponse, GetReplicasResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 73);

/**
 * @generated from message tabletmanagerdata.ResetReplicationRequest
 */
export type ResetReplicationRequest = Message<"tabletmanagerdata.ResetReplicationRequest"> & {
};

/**
 * @generated from message tabletmanagerdata.ResetReplicationRequest
 */
export type ResetReplicationRequestJson = {
};

/**
 * Describes the message tabletmanagerdata.ResetReplicationRequest.
 * Use `create(ResetReplicationRequestSchema)` to create a new message.
 */
export const ResetReplicationRequestSchema: GenMessage<ResetReplicationRequest, ResetReplicationRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 74);

/**
 * @generated from message tabletmanagerdata.ResetReplicationResponse
 */
export type ResetReplicationResponse = Message<"tabletmanagerdata.ResetReplicationResponse"> & {
};

/**
 * @generated from message tabletmanagerdata.ResetReplicationResponse
 */
export type ResetReplicationResponseJson = {
};

/**
 * Describes the message tabletmanagerdata.ResetReplicationResponse.
 * Use `create(ResetReplicationResponseSchema)` to create a new message.
 */
export const ResetReplicationResponseSchema: GenMessage<ResetReplicationResponse, ResetReplicationResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 75);

/**
 * @generated from message tabletmanagerdata.VReplicationExecRequest
 */
export type VReplicationExecRequest = Message<"tabletmanagerdata.VReplicationExecRequest"> & {
  /**
   * @generated from field: string query = 1;
   */
  query: string;
};

/**
 * @generated from message tabletmanagerdata.VReplicationExecRequest
 */
export type VReplicationExecRequestJson = {
  /**
   * @generated from field: string query = 1;
   */
  query?: string;
};

/**
 * Describes the message tabletmanagerdata.VReplicationExecRequest.
 * Use `create(VReplicationExecRequestSchema)` to create a new message.
 */
export const VReplicationExecRequestSchema: GenMessage<VReplicationExecRequest, VReplicationExecRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 76);

/**
 * @generated from message tabletmanagerdata.VReplicationExecResponse
 */
export type VReplicationExecResponse = Message<"tabletmanagerdata.VReplicationExecResponse"> & {
  /**
   * @generated from field: query.QueryResult result = 1;
   */
  result?: QueryResult;
};

/**
 * @generated from message tabletmanagerdata.VReplicationExecResponse
 */
export type VReplicationExecResponseJson = {
  /**
   * @generated from field: query.QueryResult result = 1;
   */
  result?: QueryResultJson;
};

/**
 * Describes the message tabletmanagerdata.VReplicationExecResponse.
 * Use `create(VReplicationExecResponseSchema)` to create a new message.
 */
export const VReplicationExecResponseSchema: GenMessage<VReplicationExecResponse, VReplicationExecResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 77);

/**
 * @generated from message tabletmanagerdata.VReplicationWaitForPosRequest
 */
export type VReplicationWaitForPosRequest = Message<"tabletmanagerdata.VReplicationWaitForPosRequest"> & {
  /**
   * @generated from field: int32 id = 1;
   */
  id: number;

  /**
   * @generated from field: string position = 2;
   */
  position: string;
};

/**
 * @generated from message tabletmanagerdata.VReplicationWaitForPosRequest
 */
export type VReplicationWaitForPosRequestJson = {
  /**
   * @generated from field: int32 id = 1;
   */
  id?: number;

  /**
   * @generated from field: string position = 2;
   */
  position?: string;
};

/**
 * Describes the message tabletmanagerdata.VReplicationWaitForPosRequest.
 * Use `create(VReplicationWaitForPosRequestSchema)` to create a new message.
 */
export const VReplicationWaitForPosRequestSchema: GenMessage<VReplicationWaitForPosRequest, VReplicationWaitForPosRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 78);

/**
 * @generated from message tabletmanagerdata.VReplicationWaitForPosResponse
 */
export type VReplicationWaitForPosResponse = Message<"tabletmanagerdata.VReplicationWaitForPosResponse"> & {
};

/**
 * @generated from message tabletmanagerdata.VReplicationWaitForPosResponse
 */
export type VReplicationWaitForPosResponseJson = {
};

/**
 * Describes the message tabletmanagerdata.VReplicationWaitForPosResponse.
 * Use `create(VReplicationWaitForPosResponseSchema)` to create a new message.
 */
export const VReplicationWaitForPosResponseSchema: GenMessage<VReplicationWaitForPosResponse, VReplicationWaitForPosResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 79);

/**
 * @generated from message tabletmanagerdata.InitPrimaryRequest
 */
export type InitPrimaryRequest = Message<"tabletmanagerdata.InitPrimaryRequest"> & {
  /**
   * @generated from field: bool semiSync = 1;
   */
  semiSync: boolean;
};

/**
 * @generated from message tabletmanagerdata.InitPrimaryRequest
 */
export type InitPrimaryRequestJson = {
  /**
   * @generated from field: bool semiSync = 1;
   */
  semiSync?: boolean;
};

/**
 * Describes the message tabletmanagerdata.InitPrimaryRequest.
 * Use `create(InitPrimaryRequestSchema)` to create a new message.
 */
export const InitPrimaryRequestSchema: GenMessage<InitPrimaryRequest, InitPrimaryRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 80);

/**
 * @generated from message tabletmanagerdata.InitPrimaryResponse
 */
export type InitPrimaryResponse = Message<"tabletmanagerdata.InitPrimaryResponse"> & {
  /**
   * @generated from field: string position = 1;
   */
  position: string;
};

/**
 * @generated from message tabletmanagerdata.InitPrimaryResponse
 */
export type InitPrimaryResponseJson = {
  /**
   * @generated from field: string position = 1;
   */
  position?: string;
};

/**
 * Describes the message tabletmanagerdata.InitPrimaryResponse.
 * Use `create(InitPrimaryResponseSchema)` to create a new message.
 */
export const InitPrimaryResponseSchema: GenMessage<InitPrimaryResponse, InitPrimaryResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 81);

/**
 * @generated from message tabletmanagerdata.PopulateReparentJournalRequest
 */
export type PopulateReparentJournalRequest = Message<"tabletmanagerdata.PopulateReparentJournalRequest"> & {
  /**
   * @generated from field: int64 time_created_ns = 1;
   */
  timeCreatedNs: bigint;

  /**
   * @generated from field: string action_name = 2;
   */
  actionName: string;

  /**
   * @generated from field: topodata.TabletAlias primary_alias = 3;
   */
  primaryAlias?: TabletAlias;

  /**
   * @generated from field: string replication_position = 4;
   */
  replicationPosition: string;
};

/**
 * @generated from message tabletmanagerdata.PopulateReparentJournalRequest
 */
export type PopulateReparentJournalRequestJson = {
  /**
   * @generated from field: int64 time_created_ns = 1;
   */
  timeCreatedNs?: string;

  /**
   * @generated from field: string action_name = 2;
   */
  actionName?: string;

  /**
   * @generated from field: topodata.TabletAlias primary_alias = 3;
   */
  primaryAlias?: TabletAliasJson;

  /**
   * @generated from field: string replication_position = 4;
   */
  replicationPosition?: string;
};

/**
 * Describes the message tabletmanagerdata.PopulateReparentJournalRequest.
 * Use `create(PopulateReparentJournalRequestSchema)` to create a new message.
 */
export const PopulateReparentJournalRequestSchema: GenMessage<PopulateReparentJournalRequest, PopulateReparentJournalRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 82);

/**
 * @generated from message tabletmanagerdata.PopulateReparentJournalResponse
 */
export type PopulateReparentJournalResponse = Message<"tabletmanagerdata.PopulateReparentJournalResponse"> & {
};

/**
 * @generated from message tabletmanagerdata.PopulateReparentJournalResponse
 */
export type PopulateReparentJournalResponseJson = {
};

/**
 * Describes the message tabletmanagerdata.PopulateReparentJournalResponse.
 * Use `create(PopulateReparentJournalResponseSchema)` to create a new message.
 */
export const PopulateReparentJournalResponseSchema: GenMessage<PopulateReparentJournalResponse, PopulateReparentJournalResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 83);

/**
 * @generated from message tabletmanagerdata.ReadReparentJournalInfoRequest
 */
export type ReadReparentJournalInfoRequest = Message<"tabletmanagerdata.ReadReparentJournalInfoRequest"> & {
};

/**
 * @generated from message tabletmanagerdata.ReadReparentJournalInfoRequest
 */
export type ReadReparentJournalInfoRequestJson = {
};

/**
 * Describes the message tabletmanagerdata.ReadReparentJournalInfoRequest.
 * Use `create(ReadReparentJournalInfoRequestSchema)` to create a new message.
 */
export const ReadReparentJournalInfoRequestSchema: GenMessage<ReadReparentJournalInfoRequest, ReadReparentJournalInfoRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 84);

/**
 * @generated from message tabletmanagerdata.ReadReparentJournalInfoResponse
 */
export type ReadReparentJournalInfoResponse = Message<"tabletmanagerdata.ReadReparentJournalInfoResponse"> & {
  /**
   * @generated from field: int32 length = 1;
   */
  length: number;
};

/**
 * @generated from message tabletmanagerdata.ReadReparentJournalInfoResponse
 */
export type ReadReparentJournalInfoResponseJson = {
  /**
   * @generated from field: int32 length = 1;
   */
  length?: number;
};

/**
 * Describes the message tabletmanagerdata.ReadReparentJournalInfoResponse.
 * Use `create(ReadReparentJournalInfoResponseSchema)` to create a new message.
 */
export const ReadReparentJournalInfoResponseSchema: GenMessage<ReadReparentJournalInfoResponse, ReadReparentJournalInfoResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 85);

/**
 * @generated from message tabletmanagerdata.InitReplicaRequest
 */
export type InitReplicaRequest = Message<"tabletmanagerdata.InitReplicaRequest"> & {
  /**
   * @generated from field: topodata.TabletAlias parent = 1;
   */
  parent?: TabletAlias;

  /**
   * @generated from field: string replication_position = 2;
   */
  replicationPosition: string;

  /**
   * @generated from field: int64 time_created_ns = 3;
   */
  timeCreatedNs: bigint;

  /**
   * @generated from field: bool semiSync = 4;
   */
  semiSync: boolean;
};

/**
 * @generated from message tabletmanagerdata.InitReplicaRequest
 */
export type InitReplicaRequestJson = {
  /**
   * @generated from field: topodata.TabletAlias parent = 1;
   */
  parent?: TabletAliasJson;

  /**
   * @generated from field: string replication_position = 2;
   */
  replicationPosition?: string;

  /**
   * @generated from field: int64 time_created_ns = 3;
   */
  timeCreatedNs?: string;

  /**
   * @generated from field: bool semiSync = 4;
   */
  semiSync?: boolean;
};

/**
 * Describes the message tabletmanagerdata.InitReplicaRequest.
 * Use `create(InitReplicaRequestSchema)` to create a new message.
 */
export const InitReplicaRequestSchema: GenMessage<InitReplicaRequest, InitReplicaRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 86);

/**
 * @generated from message tabletmanagerdata.InitReplicaResponse
 */
export type InitReplicaResponse = Message<"tabletmanagerdata.InitReplicaResponse"> & {
};

/**
 * @generated from message tabletmanagerdata.InitReplicaResponse
 */
export type InitReplicaResponseJson = {
};

/**
 * Describes the message tabletmanagerdata.InitReplicaResponse.
 * Use `create(InitReplicaResponseSchema)` to create a new message.
 */
export const InitReplicaResponseSchema: GenMessage<InitReplicaResponse, InitReplicaResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 87);

/**
 * @generated from message tabletmanagerdata.DemotePrimaryRequest
 */
export type DemotePrimaryRequest = Message<"tabletmanagerdata.DemotePrimaryRequest"> & {
};

/**
 * @generated from message tabletmanagerdata.DemotePrimaryRequest
 */
export type DemotePrimaryRequestJson = {
};

/**
 * Describes the message tabletmanagerdata.DemotePrimaryRequest.
 * Use `create(DemotePrimaryRequestSchema)` to create a new message.
 */
export const DemotePrimaryRequestSchema: GenMessage<DemotePrimaryRequest, DemotePrimaryRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 88);

/**
 * @generated from message tabletmanagerdata.DemotePrimaryResponse
 */
export type DemotePrimaryResponse = Message<"tabletmanagerdata.DemotePrimaryResponse"> & {
  /**
   * PrimaryStatus represents the response from calling `SHOW BINARY LOG STATUS` on a primary that has been demoted.
   *
   * @generated from field: replicationdata.PrimaryStatus primary_status = 2;
   */
  primaryStatus?: PrimaryStatus;
};

/**
 * @generated from message tabletmanagerdata.DemotePrimaryResponse
 */
export type DemotePrimaryResponseJson = {
  /**
   * PrimaryStatus represents the response from calling `SHOW BINARY LOG STATUS` on a primary that has been demoted.
   *
   * @generated from field: replicationdata.PrimaryStatus primary_status = 2;
   */
  primaryStatus?: PrimaryStatusJson;
};

/**
 * Describes the message tabletmanagerdata.DemotePrimaryResponse.
 * Use `create(DemotePrimaryResponseSchema)` to create a new message.
 */
export const DemotePrimaryResponseSchema: GenMessage<DemotePrimaryResponse, DemotePrimaryResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 89);

/**
 * @generated from message tabletmanagerdata.UndoDemotePrimaryRequest
 */
export type UndoDemotePrimaryRequest = Message<"tabletmanagerdata.UndoDemotePrimaryRequest"> & {
  /**
   * @generated from field: bool semiSync = 1;
   */
  semiSync: boolean;
};

/**
 * @generated from message tabletmanagerdata.UndoDemotePrimaryRequest
 */
export type UndoDemotePrimaryRequestJson = {
  /**
   * @generated from field: bool semiSync = 1;
   */
  semiSync?: boolean;
};

/**
 * Describes the message tabletmanagerdata.UndoDemotePrimaryRequest.
 * Use `create(UndoDemotePrimaryRequestSchema)` to create a new message.
 */
export const UndoDemotePrimaryRequestSchema: GenMessage<UndoDemotePrimaryRequest, UndoDemotePrimaryRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 90);

/**
 * @generated from message tabletmanagerdata.UndoDemotePrimaryResponse
 */
export type UndoDemotePrimaryResponse = Message<"tabletmanagerdata.UndoDemotePrimaryResponse"> & {
};

/**
 * @generated from message tabletmanagerdata.UndoDemotePrimaryResponse
 */
export type UndoDemotePrimaryResponseJson = {
};

/**
 * Describes the message tabletmanagerdata.UndoDemotePrimaryResponse.
 * Use `create(UndoDemotePrimaryResponseSchema)` to create a new message.
 */
export const UndoDemotePrimaryResponseSchema: GenMessage<UndoDemotePrimaryResponse, UndoDemotePrimaryResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 91);

/**
 * @generated from message tabletmanagerdata.ReplicaWasPromotedRequest
 */
export type ReplicaWasPromotedRequest = Message<"tabletmanagerdata.ReplicaWasPromotedRequest"> & {
};

/**
 * @generated from message tabletmanagerdata.ReplicaWasPromotedRequest
 */
export type ReplicaWasPromotedRequestJson = {
};

/**
 * Describes the message tabletmanagerdata.ReplicaWasPromotedRequest.
 * Use `create(ReplicaWasPromotedRequestSchema)` to create a new message.
 */
export const ReplicaWasPromotedRequestSchema: GenMessage<ReplicaWasPromotedRequest, ReplicaWasPromotedRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 92);

/**
 * @generated from message tabletmanagerdata.ReplicaWasPromotedResponse
 */
export type ReplicaWasPromotedResponse = Message<"tabletmanagerdata.ReplicaWasPromotedResponse"> & {
};

/**
 * @generated from message tabletmanagerdata.ReplicaWasPromotedResponse
 */
export type ReplicaWasPromotedResponseJson = {
};

/**
 * Describes the message tabletmanagerdata.ReplicaWasPromotedResponse.
 * Use `create(ReplicaWasPromotedResponseSchema)` to create a new message.
 */
export const ReplicaWasPromotedResponseSchema: GenMessage<ReplicaWasPromotedResponse, ReplicaWasPromotedResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 93);

/**
 * @generated from message tabletmanagerdata.ResetReplicationParametersRequest
 */
export type ResetReplicationParametersRequest = Message<"tabletmanagerdata.ResetReplicationParametersRequest"> & {
};

/**
 * @generated from message tabletmanagerdata.ResetReplicationParametersRequest
 */
export type ResetReplicationParametersRequestJson = {
};

/**
 * Describes the message tabletmanagerdata.ResetReplicationParametersRequest.
 * Use `create(ResetReplicationParametersRequestSchema)` to create a new message.
 */
export const ResetReplicationParametersRequestSchema: GenMessage<ResetReplicationParametersRequest, ResetReplicationParametersRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 94);

/**
 * @generated from message tabletmanagerdata.ResetReplicationParametersResponse
 */
export type ResetReplicationParametersResponse = Message<"tabletmanagerdata.ResetReplicationParametersResponse"> & {
};

/**
 * @generated from message tabletmanagerdata.ResetReplicationParametersResponse
 */
export type ResetReplicationParametersResponseJson = {
};

/**
 * Describes the message tabletmanagerdata.ResetReplicationParametersResponse.
 * Use `create(ResetReplicationParametersResponseSchema)` to create a new message.
 */
export const ResetReplicationParametersResponseSchema: GenMessage<ResetReplicationParametersResponse, ResetReplicationParametersResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 95);

/**
 * @generated from message tabletmanagerdata.FullStatusRequest
 */
export type FullStatusRequest = Message<"tabletmanagerdata.FullStatusRequest"> & {
};

/**
 * @generated from message tabletmanagerdata.FullStatusRequest
 */
export type FullStatusRequestJson = {
};

/**
 * Describes the message tabletmanagerdata.FullStatusRequest.
 * Use `create(FullStatusRequestSchema)` to create a new message.
 */
export const FullStatusRequestSchema: GenMessage<FullStatusRequest, FullStatusRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 96);

/**
 * @generated from message tabletmanagerdata.FullStatusResponse
 */
export type FullStatusResponse = Message<"tabletmanagerdata.FullStatusResponse"> & {
  /**
   * @generated from field: replicationdata.FullStatus status = 1;
   */
  status?: FullStatus;
};

/**
 * @generated from message tabletmanagerdata.FullStatusResponse
 */
export type FullStatusResponseJson = {
  /**
   * @generated from field: replicationdata.FullStatus status = 1;
   */
  status?: FullStatusJson;
};

/**
 * Describes the message tabletmanagerdata.FullStatusResponse.
 * Use `create(FullStatusResponseSchema)` to create a new message.
 */
export const FullStatusResponseSchema: GenMessage<FullStatusResponse, FullStatusResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 97);

/**
 * @generated from message tabletmanagerdata.SetReplicationSourceRequest
 */
export type SetReplicationSourceRequest = Message<"tabletmanagerdata.SetReplicationSourceRequest"> & {
  /**
   * @generated from field: topodata.TabletAlias parent = 1;
   */
  parent?: TabletAlias;

  /**
   * @generated from field: int64 time_created_ns = 2;
   */
  timeCreatedNs: bigint;

  /**
   * @generated from field: bool force_start_replication = 3;
   */
  forceStartReplication: boolean;

  /**
   * @generated from field: string wait_position = 4;
   */
  waitPosition: string;

  /**
   * @generated from field: bool semiSync = 5;
   */
  semiSync: boolean;

  /**
   * @generated from field: double heartbeat_interval = 6;
   */
  heartbeatInterval: number;
};

/**
 * @generated from message tabletmanagerdata.SetReplicationSourceRequest
 */
export type SetReplicationSourceRequestJson = {
  /**
   * @generated from field: topodata.TabletAlias parent = 1;
   */
  parent?: TabletAliasJson;

  /**
   * @generated from field: int64 time_created_ns = 2;
   */
  timeCreatedNs?: string;

  /**
   * @generated from field: bool force_start_replication = 3;
   */
  forceStartReplication?: boolean;

  /**
   * @generated from field: string wait_position = 4;
   */
  waitPosition?: string;

  /**
   * @generated from field: bool semiSync = 5;
   */
  semiSync?: boolean;

  /**
   * @generated from field: double heartbeat_interval = 6;
   */
  heartbeatInterval?: number | "NaN" | "Infinity" | "-Infinity";
};

/**
 * Describes the message tabletmanagerdata.SetReplicationSourceRequest.
 * Use `create(SetReplicationSourceRequestSchema)` to create a new message.
 */
export const SetReplicationSourceRequestSchema: GenMessage<SetReplicationSourceRequest, SetReplicationSourceRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 98);

/**
 * @generated from message tabletmanagerdata.SetReplicationSourceResponse
 */
export type SetReplicationSourceResponse = Message<"tabletmanagerdata.SetReplicationSourceResponse"> & {
};

/**
 * @generated from message tabletmanagerdata.SetReplicationSourceResponse
 */
export type SetReplicationSourceResponseJson = {
};

/**
 * Describes the message tabletmanagerdata.SetReplicationSourceResponse.
 * Use `create(SetReplicationSourceResponseSchema)` to create a new message.
 */
export const SetReplicationSourceResponseSchema: GenMessage<SetReplicationSourceResponse, SetReplicationSourceResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 99);

/**
 * @generated from message tabletmanagerdata.ReplicaWasRestartedRequest
 */
export type ReplicaWasRestartedRequest = Message<"tabletmanagerdata.ReplicaWasRestartedRequest"> & {
  /**
   * the parent alias the tablet should have
   *
   * @generated from field: topodata.TabletAlias parent = 1;
   */
  parent?: TabletAlias;
};

/**
 * @generated from message tabletmanagerdata.ReplicaWasRestartedRequest
 */
export type ReplicaWasRestartedRequestJson = {
  /**
   * the parent alias the tablet should have
   *
   * @generated from field: topodata.TabletAlias parent = 1;
   */
  parent?: TabletAliasJson;
};

/**
 * Describes the message tabletmanagerdata.ReplicaWasRestartedRequest.
 * Use `create(ReplicaWasRestartedRequestSchema)` to create a new message.
 */
export const ReplicaWasRestartedRequestSchema: GenMessage<ReplicaWasRestartedRequest, ReplicaWasRestartedRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 100);

/**
 * @generated from message tabletmanagerdata.ReplicaWasRestartedResponse
 */
export type ReplicaWasRestartedResponse = Message<"tabletmanagerdata.ReplicaWasRestartedResponse"> & {
};

/**
 * @generated from message tabletmanagerdata.ReplicaWasRestartedResponse
 */
export type ReplicaWasRestartedResponseJson = {
};

/**
 * Describes the message tabletmanagerdata.ReplicaWasRestartedResponse.
 * Use `create(ReplicaWasRestartedResponseSchema)` to create a new message.
 */
export const ReplicaWasRestartedResponseSchema: GenMessage<ReplicaWasRestartedResponse, ReplicaWasRestartedResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 101);

/**
 * @generated from message tabletmanagerdata.StopReplicationAndGetStatusRequest
 */
export type StopReplicationAndGetStatusRequest = Message<"tabletmanagerdata.StopReplicationAndGetStatusRequest"> & {
  /**
   * @generated from field: replicationdata.StopReplicationMode stop_replication_mode = 1;
   */
  stopReplicationMode: StopReplicationMode;
};

/**
 * @generated from message tabletmanagerdata.StopReplicationAndGetStatusRequest
 */
export type StopReplicationAndGetStatusRequestJson = {
  /**
   * @generated from field: replicationdata.StopReplicationMode stop_replication_mode = 1;
   */
  stopReplicationMode?: StopReplicationModeJson;
};

/**
 * Describes the message tabletmanagerdata.StopReplicationAndGetStatusRequest.
 * Use `create(StopReplicationAndGetStatusRequestSchema)` to create a new message.
 */
export const StopReplicationAndGetStatusRequestSchema: GenMessage<StopReplicationAndGetStatusRequest, StopReplicationAndGetStatusRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 102);

/**
 * @generated from message tabletmanagerdata.StopReplicationAndGetStatusResponse
 */
export type StopReplicationAndGetStatusResponse = Message<"tabletmanagerdata.StopReplicationAndGetStatusResponse"> & {
  /**
   * Status represents the replication status call right before, and right after telling the replica to stop.
   *
   * @generated from field: replicationdata.StopReplicationStatus status = 2;
   */
  status?: StopReplicationStatus;
};

/**
 * @generated from message tabletmanagerdata.StopReplicationAndGetStatusResponse
 */
export type StopReplicationAndGetStatusResponseJson = {
  /**
   * Status represents the replication status call right before, and right after telling the replica to stop.
   *
   * @generated from field: replicationdata.StopReplicationStatus status = 2;
   */
  status?: StopReplicationStatusJson;
};

/**
 * Describes the message tabletmanagerdata.StopReplicationAndGetStatusResponse.
 * Use `create(StopReplicationAndGetStatusResponseSchema)` to create a new message.
 */
export const StopReplicationAndGetStatusResponseSchema: GenMessage<StopReplicationAndGetStatusResponse, StopReplicationAndGetStatusResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 103);

/**
 * @generated from message tabletmanagerdata.PromoteReplicaRequest
 */
export type PromoteReplicaRequest = Message<"tabletmanagerdata.PromoteReplicaRequest"> & {
  /**
   * @generated from field: bool semiSync = 1;
   */
  semiSync: boolean;
};

/**
 * @generated from message tabletmanagerdata.PromoteReplicaRequest
 */
export type PromoteReplicaRequestJson = {
  /**
   * @generated from field: bool semiSync = 1;
   */
  semiSync?: boolean;
};

/**
 * Describes the message tabletmanagerdata.PromoteReplicaRequest.
 * Use `create(PromoteReplicaRequestSchema)` to create a new message.
 */
export const PromoteReplicaRequestSchema: GenMessage<PromoteReplicaRequest, PromoteReplicaRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 104);

/**
 * @generated from message tabletmanagerdata.PromoteReplicaResponse
 */
export type PromoteReplicaResponse = Message<"tabletmanagerdata.PromoteReplicaResponse"> & {
  /**
   * @generated from field: string position = 1;
   */
  position: string;
};

/**
 * @generated from message tabletmanagerdata.PromoteReplicaResponse
 */
export type PromoteReplicaResponseJson = {
  /**
   * @generated from field: string position = 1;
   */
  position?: string;
};

/**
 * Describes the message tabletmanagerdata.PromoteReplicaResponse.
 * Use `create(PromoteReplicaResponseSchema)` to create a new message.
 */
export const PromoteReplicaResponseSchema: GenMessage<PromoteReplicaResponse, PromoteReplicaResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 105);

/**
 * @generated from message tabletmanagerdata.BackupRequest
 */
export type BackupRequest = Message<"tabletmanagerdata.BackupRequest"> & {
  /**
   * @generated from field: int32 concurrency = 1;
   */
  concurrency: number;

  /**
   * @generated from field: bool allow_primary = 2;
   */
  allowPrimary: boolean;

  /**
   * IncrementalFromPos indicates a position of a previous backup. When this value is non-empty
   * then the backup becomes incremental and applies as of given position.
   *
   * @generated from field: string incremental_from_pos = 3;
   */
  incrementalFromPos: string;

  /**
   * UpgradeSafe indicates if the backup should be taken with innodb_fast_shutdown=0
   * so that it's a backup that can be used for an upgrade.
   *
   * @generated from field: bool upgrade_safe = 4;
   */
  upgradeSafe: boolean;

  /**
   * BackupEngine specifies if we want to use a particular backup engine for this backup request
   *
   * @generated from field: optional string backup_engine = 5;
   */
  backupEngine?: string;
};

/**
 * @generated from message tabletmanagerdata.BackupRequest
 */
export type BackupRequestJson = {
  /**
   * @generated from field: int32 concurrency = 1;
   */
  concurrency?: number;

  /**
   * @generated from field: bool allow_primary = 2;
   */
  allowPrimary?: boolean;

  /**
   * IncrementalFromPos indicates a position of a previous backup. When this value is non-empty
   * then the backup becomes incremental and applies as of given position.
   *
   * @generated from field: string incremental_from_pos = 3;
   */
  incrementalFromPos?: string;

  /**
   * UpgradeSafe indicates if the backup should be taken with innodb_fast_shutdown=0
   * so that it's a backup that can be used for an upgrade.
   *
   * @generated from field: bool upgrade_safe = 4;
   */
  upgradeSafe?: boolean;

  /**
   * BackupEngine specifies if we want to use a particular backup engine for this backup request
   *
   * @generated from field: optional string backup_engine = 5;
   */
  backupEngine?: string;
};

/**
 * Describes the message tabletmanagerdata.BackupRequest.
 * Use `create(BackupRequestSchema)` to create a new message.
 */
export const BackupRequestSchema: GenMessage<BackupRequest, BackupRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 106);

/**
 * @generated from message tabletmanagerdata.BackupResponse
 */
export type BackupResponse = Message<"tabletmanagerdata.BackupResponse"> & {
  /**
   * @generated from field: logutil.Event event = 1;
   */
  event?: Event;
};

/**
 * @generated from message tabletmanagerdata.BackupResponse
 */
export type BackupResponseJson = {
  /**
   * @generated from field: logutil.Event event = 1;
   */
  event?: EventJson;
};

/**
 * Describes the message tabletmanagerdata.BackupResponse.
 * Use `create(BackupResponseSchema)` to create a new message.
 */
export const BackupResponseSchema: GenMessage<BackupResponse, BackupResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 107);

/**
 * @generated from message tabletmanagerdata.RestoreFromBackupRequest
 */
export type RestoreFromBackupRequest = Message<"tabletmanagerdata.RestoreFromBackupRequest"> & {
  /**
   * @generated from field: vttime.Time backup_time = 1;
   */
  backupTime?: Time;

  /**
   * RestoreToPos indicates a position for a point-in-time recovery. The recovery
   * is expected to utilize one full backup, followed by zero or more incremental backups,
   * that reach the precise desired position
   *
   * @generated from field: string restore_to_pos = 2;
   */
  restoreToPos: string;

  /**
   * Dry run does not actually performs the restore, but validates the steps and availability of backups
   *
   * @generated from field: bool dry_run = 3;
   */
  dryRun: boolean;

  /**
   * RestoreToTimestamp, if given, requested an inremental restore up to (and excluding) the given timestamp.
   * RestoreToTimestamp and RestoreToPos are mutually exclusive.
   *
   * @generated from field: vttime.Time restore_to_timestamp = 4;
   */
  restoreToTimestamp?: Time;

  /**
   * AllowedBackupEngines, if present will filter out any backups taken with engines not included in the list
   *
   * @generated from field: repeated string allowed_backup_engines = 5;
   */
  allowedBackupEngines: string[];
};

/**
 * @generated from message tabletmanagerdata.RestoreFromBackupRequest
 */
export type RestoreFromBackupRequestJson = {
  /**
   * @generated from field: vttime.Time backup_time = 1;
   */
  backupTime?: TimeJson;

  /**
   * RestoreToPos indicates a position for a point-in-time recovery. The recovery
   * is expected to utilize one full backup, followed by zero or more incremental backups,
   * that reach the precise desired position
   *
   * @generated from field: string restore_to_pos = 2;
   */
  restoreToPos?: string;

  /**
   * Dry run does not actually performs the restore, but validates the steps and availability of backups
   *
   * @generated from field: bool dry_run = 3;
   */
  dryRun?: boolean;

  /**
   * RestoreToTimestamp, if given, requested an inremental restore up to (and excluding) the given timestamp.
   * RestoreToTimestamp and RestoreToPos are mutually exclusive.
   *
   * @generated from field: vttime.Time restore_to_timestamp = 4;
   */
  restoreToTimestamp?: TimeJson;

  /**
   * AllowedBackupEngines, if present will filter out any backups taken with engines not included in the list
   *
   * @generated from field: repeated string allowed_backup_engines = 5;
   */
  allowedBackupEngines?: string[];
};

/**
 * Describes the message tabletmanagerdata.RestoreFromBackupRequest.
 * Use `create(RestoreFromBackupRequestSchema)` to create a new message.
 */
export const RestoreFromBackupRequestSchema: GenMessage<RestoreFromBackupRequest, RestoreFromBackupRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 108);

/**
 * @generated from message tabletmanagerdata.RestoreFromBackupResponse
 */
export type RestoreFromBackupResponse = Message<"tabletmanagerdata.RestoreFromBackupResponse"> & {
  /**
   * @generated from field: logutil.Event event = 1;
   */
  event?: Event;
};

/**
 * @generated from message tabletmanagerdata.RestoreFromBackupResponse
 */
export type RestoreFromBackupResponseJson = {
  /**
   * @generated from field: logutil.Event event = 1;
   */
  event?: EventJson;
};

/**
 * Describes the message tabletmanagerdata.RestoreFromBackupResponse.
 * Use `create(RestoreFromBackupResponseSchema)` to create a new message.
 */
export const RestoreFromBackupResponseSchema: GenMessage<RestoreFromBackupResponse, RestoreFromBackupResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 109);

/**
 * @generated from message tabletmanagerdata.CreateVReplicationWorkflowRequest
 */
export type CreateVReplicationWorkflowRequest = Message<"tabletmanagerdata.CreateVReplicationWorkflowRequest"> & {
  /**
   * @generated from field: string workflow = 1;
   */
  workflow: string;

  /**
   * @generated from field: repeated binlogdata.BinlogSource binlog_source = 2;
   */
  binlogSource: BinlogSource[];

  /**
   * Optional parameters.
   *
   * @generated from field: repeated string cells = 3;
   */
  cells: string[];

  /**
   * TabletTypes is the list of tablet types to use when selecting source tablets.
   *
   * @generated from field: repeated topodata.TabletType tablet_types = 4;
   */
  tabletTypes: TabletType[];

  /**
   * @generated from field: tabletmanagerdata.TabletSelectionPreference tablet_selection_preference = 5;
   */
  tabletSelectionPreference: TabletSelectionPreference;

  /**
   * @generated from field: binlogdata.VReplicationWorkflowType workflow_type = 6;
   */
  workflowType: VReplicationWorkflowType;

  /**
   * @generated from field: binlogdata.VReplicationWorkflowSubType workflow_sub_type = 7;
   */
  workflowSubType: VReplicationWorkflowSubType;

  /**
   * DeferSecondaryKeys specifies if secondary keys should be created in one shot after table
   * copy finishes.
   *
   * @generated from field: bool defer_secondary_keys = 8;
   */
  deferSecondaryKeys: boolean;

  /**
   * AutoStart specifies if the workflow should be started when created.
   *
   * @generated from field: bool auto_start = 9;
   */
  autoStart: boolean;

  /**
   * Should the workflow stop after the copy phase.
   *
   * @generated from field: bool stop_after_copy = 10;
   */
  stopAfterCopy: boolean;

  /**
   * @generated from field: string options = 11;
   */
  options: string;
};

/**
 * @generated from message tabletmanagerdata.CreateVReplicationWorkflowRequest
 */
export type CreateVReplicationWorkflowRequestJson = {
  /**
   * @generated from field: string workflow = 1;
   */
  workflow?: string;

  /**
   * @generated from field: repeated binlogdata.BinlogSource binlog_source = 2;
   */
  binlogSource?: BinlogSourceJson[];

  /**
   * Optional parameters.
   *
   * @generated from field: repeated string cells = 3;
   */
  cells?: string[];

  /**
   * TabletTypes is the list of tablet types to use when selecting source tablets.
   *
   * @generated from field: repeated topodata.TabletType tablet_types = 4;
   */
  tabletTypes?: TabletTypeJson[];

  /**
   * @generated from field: tabletmanagerdata.TabletSelectionPreference tablet_selection_preference = 5;
   */
  tabletSelectionPreference?: TabletSelectionPreferenceJson;

  /**
   * @generated from field: binlogdata.VReplicationWorkflowType workflow_type = 6;
   */
  workflowType?: VReplicationWorkflowTypeJson;

  /**
   * @generated from field: binlogdata.VReplicationWorkflowSubType workflow_sub_type = 7;
   */
  workflowSubType?: VReplicationWorkflowSubTypeJson;

  /**
   * DeferSecondaryKeys specifies if secondary keys should be created in one shot after table
   * copy finishes.
   *
   * @generated from field: bool defer_secondary_keys = 8;
   */
  deferSecondaryKeys?: boolean;

  /**
   * AutoStart specifies if the workflow should be started when created.
   *
   * @generated from field: bool auto_start = 9;
   */
  autoStart?: boolean;

  /**
   * Should the workflow stop after the copy phase.
   *
   * @generated from field: bool stop_after_copy = 10;
   */
  stopAfterCopy?: boolean;

  /**
   * @generated from field: string options = 11;
   */
  options?: string;
};

/**
 * Describes the message tabletmanagerdata.CreateVReplicationWorkflowRequest.
 * Use `create(CreateVReplicationWorkflowRequestSchema)` to create a new message.
 */
export const CreateVReplicationWorkflowRequestSchema: GenMessage<CreateVReplicationWorkflowRequest, CreateVReplicationWorkflowRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 110);

/**
 * @generated from message tabletmanagerdata.CreateVReplicationWorkflowResponse
 */
export type CreateVReplicationWorkflowResponse = Message<"tabletmanagerdata.CreateVReplicationWorkflowResponse"> & {
  /**
   * @generated from field: query.QueryResult result = 1;
   */
  result?: QueryResult;
};

/**
 * @generated from message tabletmanagerdata.CreateVReplicationWorkflowResponse
 */
export type CreateVReplicationWorkflowResponseJson = {
  /**
   * @generated from field: query.QueryResult result = 1;
   */
  result?: QueryResultJson;
};

/**
 * Describes the message tabletmanagerdata.CreateVReplicationWorkflowResponse.
 * Use `create(CreateVReplicationWorkflowResponseSchema)` to create a new message.
 */
export const CreateVReplicationWorkflowResponseSchema: GenMessage<CreateVReplicationWorkflowResponse, CreateVReplicationWorkflowResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 111);

/**
 * @generated from message tabletmanagerdata.DeleteVReplicationWorkflowRequest
 */
export type DeleteVReplicationWorkflowRequest = Message<"tabletmanagerdata.DeleteVReplicationWorkflowRequest"> & {
  /**
   * @generated from field: string workflow = 1;
   */
  workflow: string;
};

/**
 * @generated from message tabletmanagerdata.DeleteVReplicationWorkflowRequest
 */
export type DeleteVReplicationWorkflowRequestJson = {
  /**
   * @generated from field: string workflow = 1;
   */
  workflow?: string;
};

/**
 * Describes the message tabletmanagerdata.DeleteVReplicationWorkflowRequest.
 * Use `create(DeleteVReplicationWorkflowRequestSchema)` to create a new message.
 */
export const DeleteVReplicationWorkflowRequestSchema: GenMessage<DeleteVReplicationWorkflowRequest, DeleteVReplicationWorkflowRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 112);

/**
 * @generated from message tabletmanagerdata.DeleteVReplicationWorkflowResponse
 */
export type DeleteVReplicationWorkflowResponse = Message<"tabletmanagerdata.DeleteVReplicationWorkflowResponse"> & {
  /**
   * @generated from field: query.QueryResult result = 1;
   */
  result?: QueryResult;
};

/**
 * @generated from message tabletmanagerdata.DeleteVReplicationWorkflowResponse
 */
export type DeleteVReplicationWorkflowResponseJson = {
  /**
   * @generated from field: query.QueryResult result = 1;
   */
  result?: QueryResultJson;
};

/**
 * Describes the message tabletmanagerdata.DeleteVReplicationWorkflowResponse.
 * Use `create(DeleteVReplicationWorkflowResponseSchema)` to create a new message.
 */
export const DeleteVReplicationWorkflowResponseSchema: GenMessage<DeleteVReplicationWorkflowResponse, DeleteVReplicationWorkflowResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 113);

/**
 * @generated from message tabletmanagerdata.HasVReplicationWorkflowsRequest
 */
export type HasVReplicationWorkflowsRequest = Message<"tabletmanagerdata.HasVReplicationWorkflowsRequest"> & {
};

/**
 * @generated from message tabletmanagerdata.HasVReplicationWorkflowsRequest
 */
export type HasVReplicationWorkflowsRequestJson = {
};

/**
 * Describes the message tabletmanagerdata.HasVReplicationWorkflowsRequest.
 * Use `create(HasVReplicationWorkflowsRequestSchema)` to create a new message.
 */
export const HasVReplicationWorkflowsRequestSchema: GenMessage<HasVReplicationWorkflowsRequest, HasVReplicationWorkflowsRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 114);

/**
 * @generated from message tabletmanagerdata.HasVReplicationWorkflowsResponse
 */
export type HasVReplicationWorkflowsResponse = Message<"tabletmanagerdata.HasVReplicationWorkflowsResponse"> & {
  /**
   * @generated from field: bool has = 1;
   */
  has: boolean;
};

/**
 * @generated from message tabletmanagerdata.HasVReplicationWorkflowsResponse
 */
export type HasVReplicationWorkflowsResponseJson = {
  /**
   * @generated from field: bool has = 1;
   */
  has?: boolean;
};

/**
 * Describes the message tabletmanagerdata.HasVReplicationWorkflowsResponse.
 * Use `create(HasVReplicationWorkflowsResponseSchema)` to create a new message.
 */
export const HasVReplicationWorkflowsResponseSchema: GenMessage<HasVReplicationWorkflowsResponse, HasVReplicationWorkflowsResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 115);

/**
 * @generated from message tabletmanagerdata.ReadVReplicationWorkflowsRequest
 */
export type ReadVReplicationWorkflowsRequest = Message<"tabletmanagerdata.ReadVReplicationWorkflowsRequest"> & {
  /**
   * @generated from field: repeated int32 include_ids = 1;
   */
  includeIds: number[];

  /**
   * @generated from field: repeated string include_workflows = 2;
   */
  includeWorkflows: string[];

  /**
   * @generated from field: repeated binlogdata.VReplicationWorkflowState include_states = 3;
   */
  includeStates: VReplicationWorkflowState[];

  /**
   * @generated from field: repeated string exclude_workflows = 4;
   */
  excludeWorkflows: string[];

  /**
   * @generated from field: repeated binlogdata.VReplicationWorkflowState exclude_states = 5;
   */
  excludeStates: VReplicationWorkflowState[];

  /**
   * @generated from field: bool exclude_frozen = 6;
   */
  excludeFrozen: boolean;
};

/**
 * @generated from message tabletmanagerdata.ReadVReplicationWorkflowsRequest
 */
export type ReadVReplicationWorkflowsRequestJson = {
  /**
   * @generated from field: repeated int32 include_ids = 1;
   */
  includeIds?: number[];

  /**
   * @generated from field: repeated string include_workflows = 2;
   */
  includeWorkflows?: string[];

  /**
   * @generated from field: repeated binlogdata.VReplicationWorkflowState include_states = 3;
   */
  includeStates?: VReplicationWorkflowStateJson[];

  /**
   * @generated from field: repeated string exclude_workflows = 4;
   */
  excludeWorkflows?: string[];

  /**
   * @generated from field: repeated binlogdata.VReplicationWorkflowState exclude_states = 5;
   */
  excludeStates?: VReplicationWorkflowStateJson[];

  /**
   * @generated from field: bool exclude_frozen = 6;
   */
  excludeFrozen?: boolean;
};

/**
 * Describes the message tabletmanagerdata.ReadVReplicationWorkflowsRequest.
 * Use `create(ReadVReplicationWorkflowsRequestSchema)` to create a new message.
 */
export const ReadVReplicationWorkflowsRequestSchema: GenMessage<ReadVReplicationWorkflowsRequest, ReadVReplicationWorkflowsRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 116);

/**
 * @generated from message tabletmanagerdata.ReadVReplicationWorkflowsResponse
 */
export type ReadVReplicationWorkflowsResponse = Message<"tabletmanagerdata.ReadVReplicationWorkflowsResponse"> & {
  /**
   * @generated from field: repeated tabletmanagerdata.ReadVReplicationWorkflowResponse workflows = 1;
   */
  workflows: ReadVReplicationWorkflowResponse[];
};

/**
 * @generated from message tabletmanagerdata.ReadVReplicationWorkflowsResponse
 */
export type ReadVReplicationWorkflowsResponseJson = {
  /**
   * @generated from field: repeated tabletmanagerdata.ReadVReplicationWorkflowResponse workflows = 1;
   */
  workflows?: ReadVReplicationWorkflowResponseJson[];
};

/**
 * Describes the message tabletmanagerdata.ReadVReplicationWorkflowsResponse.
 * Use `create(ReadVReplicationWorkflowsResponseSchema)` to create a new message.
 */
export const ReadVReplicationWorkflowsResponseSchema: GenMessage<ReadVReplicationWorkflowsResponse, ReadVReplicationWorkflowsResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 117);

/**
 * @generated from message tabletmanagerdata.ReadVReplicationWorkflowRequest
 */
export type ReadVReplicationWorkflowRequest = Message<"tabletmanagerdata.ReadVReplicationWorkflowRequest"> & {
  /**
   * @generated from field: string workflow = 1;
   */
  workflow: string;
};

/**
 * @generated from message tabletmanagerdata.ReadVReplicationWorkflowRequest
 */
export type ReadVReplicationWorkflowRequestJson = {
  /**
   * @generated from field: string workflow = 1;
   */
  workflow?: string;
};

/**
 * Describes the message tabletmanagerdata.ReadVReplicationWorkflowRequest.
 * Use `create(ReadVReplicationWorkflowRequestSchema)` to create a new message.
 */
export const ReadVReplicationWorkflowRequestSchema: GenMessage<ReadVReplicationWorkflowRequest, ReadVReplicationWorkflowRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 118);

/**
 * @generated from message tabletmanagerdata.ReadVReplicationWorkflowResponse
 */
export type ReadVReplicationWorkflowResponse = Message<"tabletmanagerdata.ReadVReplicationWorkflowResponse"> & {
  /**
   * @generated from field: string workflow = 2;
   */
  workflow: string;

  /**
   * @generated from field: string cells = 3;
   */
  cells: string;

  /**
   * @generated from field: repeated topodata.TabletType tablet_types = 4;
   */
  tabletTypes: TabletType[];

  /**
   * @generated from field: tabletmanagerdata.TabletSelectionPreference tablet_selection_preference = 5;
   */
  tabletSelectionPreference: TabletSelectionPreference;

  /**
   * @generated from field: string db_name = 6;
   */
  dbName: string;

  /**
   * @generated from field: string tags = 7;
   */
  tags: string;

  /**
   * @generated from field: binlogdata.VReplicationWorkflowType workflow_type = 8;
   */
  workflowType: VReplicationWorkflowType;

  /**
   * @generated from field: binlogdata.VReplicationWorkflowSubType workflow_sub_type = 9;
   */
  workflowSubType: VReplicationWorkflowSubType;

  /**
   * @generated from field: bool defer_secondary_keys = 10;
   */
  deferSecondaryKeys: boolean;

  /**
   * @generated from field: repeated tabletmanagerdata.ReadVReplicationWorkflowResponse.Stream streams = 11;
   */
  streams: ReadVReplicationWorkflowResponse_Stream[];

  /**
   * @generated from field: string options = 12;
   */
  options: string;

  /**
   * @generated from field: map<string, string> config_overrides = 13;
   */
  configOverrides: { [key: string]: string };
};

/**
 * @generated from message tabletmanagerdata.ReadVReplicationWorkflowResponse
 */
export type ReadVReplicationWorkflowResponseJson = {
  /**
   * @generated from field: string workflow = 2;
   */
  workflow?: string;

  /**
   * @generated from field: string cells = 3;
   */
  cells?: string;

  /**
   * @generated from field: repeated topodata.TabletType tablet_types = 4;
   */
  tabletTypes?: TabletTypeJson[];

  /**
   * @generated from field: tabletmanagerdata.TabletSelectionPreference tablet_selection_preference = 5;
   */
  tabletSelectionPreference?: TabletSelectionPreferenceJson;

  /**
   * @generated from field: string db_name = 6;
   */
  dbName?: string;

  /**
   * @generated from field: string tags = 7;
   */
  tags?: string;

  /**
   * @generated from field: binlogdata.VReplicationWorkflowType workflow_type = 8;
   */
  workflowType?: VReplicationWorkflowTypeJson;

  /**
   * @generated from field: binlogdata.VReplicationWorkflowSubType workflow_sub_type = 9;
   */
  workflowSubType?: VReplicationWorkflowSubTypeJson;

  /**
   * @generated from field: bool defer_secondary_keys = 10;
   */
  deferSecondaryKeys?: boolean;

  /**
   * @generated from field: repeated tabletmanagerdata.ReadVReplicationWorkflowResponse.Stream streams = 11;
   */
  streams?: ReadVReplicationWorkflowResponse_StreamJson[];

  /**
   * @generated from field: string options = 12;
   */
  options?: string;

  /**
   * @generated from field: map<string, string> config_overrides = 13;
   */
  configOverrides?: { [key: string]: string };
};

/**
 * Describes the message tabletmanagerdata.ReadVReplicationWorkflowResponse.
 * Use `create(ReadVReplicationWorkflowResponseSchema)` to create a new message.
 */
export const ReadVReplicationWorkflowResponseSchema: GenMessage<ReadVReplicationWorkflowResponse, ReadVReplicationWorkflowResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 119);

/**
 * @generated from message tabletmanagerdata.ReadVReplicationWorkflowResponse.Stream
 */
export type ReadVReplicationWorkflowResponse_Stream = Message<"tabletmanagerdata.ReadVReplicationWorkflowResponse.Stream"> & {
  /**
   * @generated from field: int32 id = 1;
   */
  id: number;

  /**
   * @generated from field: binlogdata.BinlogSource bls = 2;
   */
  bls?: BinlogSource;

  /**
   * @generated from field: string pos = 3;
   */
  pos: string;

  /**
   * @generated from field: string stop_pos = 4;
   */
  stopPos: string;

  /**
   * @generated from field: int64 max_tps = 5;
   */
  maxTps: bigint;

  /**
   * @generated from field: int64 max_replication_lag = 6;
   */
  maxReplicationLag: bigint;

  /**
   * @generated from field: vttime.Time time_updated = 7;
   */
  timeUpdated?: Time;

  /**
   * @generated from field: vttime.Time transaction_timestamp = 8;
   */
  transactionTimestamp?: Time;

  /**
   * @generated from field: binlogdata.VReplicationWorkflowState state = 9;
   */
  state: VReplicationWorkflowState;

  /**
   * @generated from field: string message = 10;
   */
  message: string;

  /**
   * @generated from field: int64 rows_copied = 11;
   */
  rowsCopied: bigint;

  /**
   * @generated from field: vttime.Time time_heartbeat = 12;
   */
  timeHeartbeat?: Time;

  /**
   * @generated from field: vttime.Time time_throttled = 13;
   */
  timeThrottled?: Time;

  /**
   * @generated from field: string component_throttled = 14;
   */
  componentThrottled: string;
};

/**
 * @generated from message tabletmanagerdata.ReadVReplicationWorkflowResponse.Stream
 */
export type ReadVReplicationWorkflowResponse_StreamJson = {
  /**
   * @generated from field: int32 id = 1;
   */
  id?: number;

  /**
   * @generated from field: binlogdata.BinlogSource bls = 2;
   */
  bls?: BinlogSourceJson;

  /**
   * @generated from field: string pos = 3;
   */
  pos?: string;

  /**
   * @generated from field: string stop_pos = 4;
   */
  stopPos?: string;

  /**
   * @generated from field: int64 max_tps = 5;
   */
  maxTps?: string;

  /**
   * @generated from field: int64 max_replication_lag = 6;
   */
  maxReplicationLag?: string;

  /**
   * @generated from field: vttime.Time time_updated = 7;
   */
  timeUpdated?: TimeJson;

  /**
   * @generated from field: vttime.Time transaction_timestamp = 8;
   */
  transactionTimestamp?: TimeJson;

  /**
   * @generated from field: binlogdata.VReplicationWorkflowState state = 9;
   */
  state?: VReplicationWorkflowStateJson;

  /**
   * @generated from field: string message = 10;
   */
  message?: string;

  /**
   * @generated from field: int64 rows_copied = 11;
   */
  rowsCopied?: string;

  /**
   * @generated from field: vttime.Time time_heartbeat = 12;
   */
  timeHeartbeat?: TimeJson;

  /**
   * @generated from field: vttime.Time time_throttled = 13;
   */
  timeThrottled?: TimeJson;

  /**
   * @generated from field: string component_throttled = 14;
   */
  componentThrottled?: string;
};

/**
 * Describes the message tabletmanagerdata.ReadVReplicationWorkflowResponse.Stream.
 * Use `create(ReadVReplicationWorkflowResponse_StreamSchema)` to create a new message.
 */
export const ReadVReplicationWorkflowResponse_StreamSchema: GenMessage<ReadVReplicationWorkflowResponse_Stream, ReadVReplicationWorkflowResponse_StreamJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 119, 0);

/**
 * @generated from message tabletmanagerdata.ValidateVReplicationPermissionsRequest
 */
export type ValidateVReplicationPermissionsRequest = Message<"tabletmanagerdata.ValidateVReplicationPermissionsRequest"> & {
};

/**
 * @generated from message tabletmanagerdata.ValidateVReplicationPermissionsRequest
 */
export type ValidateVReplicationPermissionsRequestJson = {
};

/**
 * Describes the message tabletmanagerdata.ValidateVReplicationPermissionsRequest.
 * Use `create(ValidateVReplicationPermissionsRequestSchema)` to create a new message.
 */
export const ValidateVReplicationPermissionsRequestSchema: GenMessage<ValidateVReplicationPermissionsRequest, ValidateVReplicationPermissionsRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 120);

/**
 * @generated from message tabletmanagerdata.ValidateVReplicationPermissionsResponse
 */
export type ValidateVReplicationPermissionsResponse = Message<"tabletmanagerdata.ValidateVReplicationPermissionsResponse"> & {
  /**
   * The --db_filtered_user on the tablet.
   *
   * @generated from field: string user = 1;
   */
  user: string;

  /**
   * Does the user have the minimum privileges needed to manage
   * vreplication metadata.
   *
   * @generated from field: bool ok = 2;
   */
  ok: boolean;
};

/**
 * @generated from message tabletmanagerdata.ValidateVReplicationPermissionsResponse
 */
export type ValidateVReplicationPermissionsResponseJson = {
  /**
   * The --db_filtered_user on the tablet.
   *
   * @generated from field: string user = 1;
   */
  user?: string;

  /**
   * Does the user have the minimum privileges needed to manage
   * vreplication metadata.
   *
   * @generated from field: bool ok = 2;
   */
  ok?: boolean;
};

/**
 * Describes the message tabletmanagerdata.ValidateVReplicationPermissionsResponse.
 * Use `create(ValidateVReplicationPermissionsResponseSchema)` to create a new message.
 */
export const ValidateVReplicationPermissionsResponseSchema: GenMessage<ValidateVReplicationPermissionsResponse, ValidateVReplicationPermissionsResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 121);

/**
 * @generated from message tabletmanagerdata.VDiffRequest
 */
export type VDiffRequest = Message<"tabletmanagerdata.VDiffRequest"> & {
  /**
   * @generated from field: string keyspace = 1;
   */
  keyspace: string;

  /**
   * @generated from field: string workflow = 2;
   */
  workflow: string;

  /**
   * @generated from field: string action = 3;
   */
  action: string;

  /**
   * @generated from field: string action_arg = 4;
   */
  actionArg: string;

  /**
   * @generated from field: string vdiff_uuid = 5;
   */
  vdiffUuid: string;

  /**
   * @generated from field: tabletmanagerdata.VDiffOptions options = 6;
   */
  options?: VDiffOptions;
};

/**
 * @generated from message tabletmanagerdata.VDiffRequest
 */
export type VDiffRequestJson = {
  /**
   * @generated from field: string keyspace = 1;
   */
  keyspace?: string;

  /**
   * @generated from field: string workflow = 2;
   */
  workflow?: string;

  /**
   * @generated from field: string action = 3;
   */
  action?: string;

  /**
   * @generated from field: string action_arg = 4;
   */
  actionArg?: string;

  /**
   * @generated from field: string vdiff_uuid = 5;
   */
  vdiffUuid?: string;

  /**
   * @generated from field: tabletmanagerdata.VDiffOptions options = 6;
   */
  options?: VDiffOptionsJson;
};

/**
 * Describes the message tabletmanagerdata.VDiffRequest.
 * Use `create(VDiffRequestSchema)` to create a new message.
 */
export const VDiffRequestSchema: GenMessage<VDiffRequest, VDiffRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 122);

/**
 * @generated from message tabletmanagerdata.VDiffResponse
 */
export type VDiffResponse = Message<"tabletmanagerdata.VDiffResponse"> & {
  /**
   * @generated from field: int64 id = 1;
   */
  id: bigint;

  /**
   * @generated from field: query.QueryResult output = 2;
   */
  output?: QueryResult;

  /**
   * @generated from field: string vdiff_uuid = 3;
   */
  vdiffUuid: string;
};

/**
 * @generated from message tabletmanagerdata.VDiffResponse
 */
export type VDiffResponseJson = {
  /**
   * @generated from field: int64 id = 1;
   */
  id?: string;

  /**
   * @generated from field: query.QueryResult output = 2;
   */
  output?: QueryResultJson;

  /**
   * @generated from field: string vdiff_uuid = 3;
   */
  vdiffUuid?: string;
};

/**
 * Describes the message tabletmanagerdata.VDiffResponse.
 * Use `create(VDiffResponseSchema)` to create a new message.
 */
export const VDiffResponseSchema: GenMessage<VDiffResponse, VDiffResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 123);

/**
 * options that influence the tablet selected by the picker for streaming data from
 *
 * @generated from message tabletmanagerdata.VDiffPickerOptions
 */
export type VDiffPickerOptions = Message<"tabletmanagerdata.VDiffPickerOptions"> & {
  /**
   * @generated from field: string tablet_types = 1;
   */
  tabletTypes: string;

  /**
   * @generated from field: string source_cell = 2;
   */
  sourceCell: string;

  /**
   * @generated from field: string target_cell = 3;
   */
  targetCell: string;
};

/**
 * options that influence the tablet selected by the picker for streaming data from
 *
 * @generated from message tabletmanagerdata.VDiffPickerOptions
 */
export type VDiffPickerOptionsJson = {
  /**
   * @generated from field: string tablet_types = 1;
   */
  tabletTypes?: string;

  /**
   * @generated from field: string source_cell = 2;
   */
  sourceCell?: string;

  /**
   * @generated from field: string target_cell = 3;
   */
  targetCell?: string;
};

/**
 * Describes the message tabletmanagerdata.VDiffPickerOptions.
 * Use `create(VDiffPickerOptionsSchema)` to create a new message.
 */
export const VDiffPickerOptionsSchema: GenMessage<VDiffPickerOptions, VDiffPickerOptionsJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 124);

/**
 * options that only influence how vdiff differences are reported
 *
 * @generated from message tabletmanagerdata.VDiffReportOptions
 */
export type VDiffReportOptions = Message<"tabletmanagerdata.VDiffReportOptions"> & {
  /**
   * @generated from field: bool only_pks = 1;
   */
  onlyPks: boolean;

  /**
   * @generated from field: bool debug_query = 2;
   */
  debugQuery: boolean;

  /**
   * @generated from field: string format = 3;
   */
  format: string;

  /**
   * @generated from field: int64 max_sample_rows = 4;
   */
  maxSampleRows: bigint;

  /**
   * @generated from field: int64 row_diff_column_truncate_at = 5;
   */
  rowDiffColumnTruncateAt: bigint;
};

/**
 * options that only influence how vdiff differences are reported
 *
 * @generated from message tabletmanagerdata.VDiffReportOptions
 */
export type VDiffReportOptionsJson = {
  /**
   * @generated from field: bool only_pks = 1;
   */
  onlyPks?: boolean;

  /**
   * @generated from field: bool debug_query = 2;
   */
  debugQuery?: boolean;

  /**
   * @generated from field: string format = 3;
   */
  format?: string;

  /**
   * @generated from field: int64 max_sample_rows = 4;
   */
  maxSampleRows?: string;

  /**
   * @generated from field: int64 row_diff_column_truncate_at = 5;
   */
  rowDiffColumnTruncateAt?: string;
};

/**
 * Describes the message tabletmanagerdata.VDiffReportOptions.
 * Use `create(VDiffReportOptionsSchema)` to create a new message.
 */
export const VDiffReportOptionsSchema: GenMessage<VDiffReportOptions, VDiffReportOptionsJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 125);

/**
 * @generated from message tabletmanagerdata.VDiffCoreOptions
 */
export type VDiffCoreOptions = Message<"tabletmanagerdata.VDiffCoreOptions"> & {
  /**
   * @generated from field: string tables = 1;
   */
  tables: string;

  /**
   * @generated from field: bool auto_retry = 2;
   */
  autoRetry: boolean;

  /**
   * @generated from field: int64 max_rows = 3;
   */
  maxRows: bigint;

  /**
   * @generated from field: bool checksum = 4;
   */
  checksum: boolean;

  /**
   * @generated from field: int64 sample_pct = 5;
   */
  samplePct: bigint;

  /**
   * @generated from field: int64 timeout_seconds = 6;
   */
  timeoutSeconds: bigint;

  /**
   * @generated from field: int64 max_extra_rows_to_compare = 7;
   */
  maxExtraRowsToCompare: bigint;

  /**
   * @generated from field: bool update_table_stats = 8;
   */
  updateTableStats: boolean;

  /**
   * @generated from field: int64 max_diff_seconds = 9;
   */
  maxDiffSeconds: bigint;

  /**
   * @generated from field: optional bool auto_start = 10;
   */
  autoStart?: boolean;
};

/**
 * @generated from message tabletmanagerdata.VDiffCoreOptions
 */
export type VDiffCoreOptionsJson = {
  /**
   * @generated from field: string tables = 1;
   */
  tables?: string;

  /**
   * @generated from field: bool auto_retry = 2;
   */
  autoRetry?: boolean;

  /**
   * @generated from field: int64 max_rows = 3;
   */
  maxRows?: string;

  /**
   * @generated from field: bool checksum = 4;
   */
  checksum?: boolean;

  /**
   * @generated from field: int64 sample_pct = 5;
   */
  samplePct?: string;

  /**
   * @generated from field: int64 timeout_seconds = 6;
   */
  timeoutSeconds?: string;

  /**
   * @generated from field: int64 max_extra_rows_to_compare = 7;
   */
  maxExtraRowsToCompare?: string;

  /**
   * @generated from field: bool update_table_stats = 8;
   */
  updateTableStats?: boolean;

  /**
   * @generated from field: int64 max_diff_seconds = 9;
   */
  maxDiffSeconds?: string;

  /**
   * @generated from field: optional bool auto_start = 10;
   */
  autoStart?: boolean;
};

/**
 * Describes the message tabletmanagerdata.VDiffCoreOptions.
 * Use `create(VDiffCoreOptionsSchema)` to create a new message.
 */
export const VDiffCoreOptionsSchema: GenMessage<VDiffCoreOptions, VDiffCoreOptionsJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 126);

/**
 * @generated from message tabletmanagerdata.VDiffOptions
 */
export type VDiffOptions = Message<"tabletmanagerdata.VDiffOptions"> & {
  /**
   * @generated from field: tabletmanagerdata.VDiffPickerOptions picker_options = 1;
   */
  pickerOptions?: VDiffPickerOptions;

  /**
   * @generated from field: tabletmanagerdata.VDiffCoreOptions core_options = 2;
   */
  coreOptions?: VDiffCoreOptions;

  /**
   * @generated from field: tabletmanagerdata.VDiffReportOptions report_options = 3;
   */
  reportOptions?: VDiffReportOptions;
};

/**
 * @generated from message tabletmanagerdata.VDiffOptions
 */
export type VDiffOptionsJson = {
  /**
   * @generated from field: tabletmanagerdata.VDiffPickerOptions picker_options = 1;
   */
  pickerOptions?: VDiffPickerOptionsJson;

  /**
   * @generated from field: tabletmanagerdata.VDiffCoreOptions core_options = 2;
   */
  coreOptions?: VDiffCoreOptionsJson;

  /**
   * @generated from field: tabletmanagerdata.VDiffReportOptions report_options = 3;
   */
  reportOptions?: VDiffReportOptionsJson;
};

/**
 * Describes the message tabletmanagerdata.VDiffOptions.
 * Use `create(VDiffOptionsSchema)` to create a new message.
 */
export const VDiffOptionsSchema: GenMessage<VDiffOptions, VDiffOptionsJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 127);

/**
 * UpdateVReplicationWorkflowRequest is used to update an existing VReplication
 * workflow. Note that the following fields MUST have an explicit value provided
 * if you do NOT wish to update the existing value to the given type's ZeroValue:
 * cells, tablet_types, on_ddl, and state.
 * TODO: leverage the optional modifier for these fields rather than using SimulatedNull
 * values: https://github.com/vitessio/vitess/issues/15627
 *
 * @generated from message tabletmanagerdata.UpdateVReplicationWorkflowRequest
 */
export type UpdateVReplicationWorkflowRequest = Message<"tabletmanagerdata.UpdateVReplicationWorkflowRequest"> & {
  /**
   * @generated from field: string workflow = 1;
   */
  workflow: string;

  /**
   * @generated from field: repeated string cells = 2;
   */
  cells: string[];

  /**
   * @generated from field: repeated topodata.TabletType tablet_types = 3;
   */
  tabletTypes: TabletType[];

  /**
   * @generated from field: optional tabletmanagerdata.TabletSelectionPreference tablet_selection_preference = 4;
   */
  tabletSelectionPreference?: TabletSelectionPreference;

  /**
   * @generated from field: optional binlogdata.OnDDLAction on_ddl = 5;
   */
  onDdl?: OnDDLAction;

  /**
   * @generated from field: optional binlogdata.VReplicationWorkflowState state = 6;
   */
  state?: VReplicationWorkflowState;

  /**
   * @generated from field: map<string, string> config_overrides = 8;
   */
  configOverrides: { [key: string]: string };
};

/**
 * UpdateVReplicationWorkflowRequest is used to update an existing VReplication
 * workflow. Note that the following fields MUST have an explicit value provided
 * if you do NOT wish to update the existing value to the given type's ZeroValue:
 * cells, tablet_types, on_ddl, and state.
 * TODO: leverage the optional modifier for these fields rather than using SimulatedNull
 * values: https://github.com/vitessio/vitess/issues/15627
 *
 * @generated from message tabletmanagerdata.UpdateVReplicationWorkflowRequest
 */
export type UpdateVReplicationWorkflowRequestJson = {
  /**
   * @generated from field: string workflow = 1;
   */
  workflow?: string;

  /**
   * @generated from field: repeated string cells = 2;
   */
  cells?: string[];

  /**
   * @generated from field: repeated topodata.TabletType tablet_types = 3;
   */
  tabletTypes?: TabletTypeJson[];

  /**
   * @generated from field: optional tabletmanagerdata.TabletSelectionPreference tablet_selection_preference = 4;
   */
  tabletSelectionPreference?: TabletSelectionPreferenceJson;

  /**
   * @generated from field: optional binlogdata.OnDDLAction on_ddl = 5;
   */
  onDdl?: OnDDLActionJson;

  /**
   * @generated from field: optional binlogdata.VReplicationWorkflowState state = 6;
   */
  state?: VReplicationWorkflowStateJson;

  /**
   * @generated from field: map<string, string> config_overrides = 8;
   */
  configOverrides?: { [key: string]: string };
};

/**
 * Describes the message tabletmanagerdata.UpdateVReplicationWorkflowRequest.
 * Use `create(UpdateVReplicationWorkflowRequestSchema)` to create a new message.
 */
export const UpdateVReplicationWorkflowRequestSchema: GenMessage<UpdateVReplicationWorkflowRequest, UpdateVReplicationWorkflowRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 128);

/**
 * @generated from message tabletmanagerdata.UpdateVReplicationWorkflowResponse
 */
export type UpdateVReplicationWorkflowResponse = Message<"tabletmanagerdata.UpdateVReplicationWorkflowResponse"> & {
  /**
   * @generated from field: query.QueryResult result = 1;
   */
  result?: QueryResult;
};

/**
 * @generated from message tabletmanagerdata.UpdateVReplicationWorkflowResponse
 */
export type UpdateVReplicationWorkflowResponseJson = {
  /**
   * @generated from field: query.QueryResult result = 1;
   */
  result?: QueryResultJson;
};

/**
 * Describes the message tabletmanagerdata.UpdateVReplicationWorkflowResponse.
 * Use `create(UpdateVReplicationWorkflowResponseSchema)` to create a new message.
 */
export const UpdateVReplicationWorkflowResponseSchema: GenMessage<UpdateVReplicationWorkflowResponse, UpdateVReplicationWorkflowResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 129);

/**
 * UpdateVReplicationWorkflowsRequest is used to update multiple existing VReplication
 * workflows. Note that the following fields MUST have an explicit value provided
 * if you do NOT wish to update the existing values to the given type's ZeroValue:
 * state, message, and stop_position.
 * TODO: leverage the optional modifier for these fields rather than using SimulatedNull
 * values: https://github.com/vitessio/vitess/issues/15627
 *
 * @generated from message tabletmanagerdata.UpdateVReplicationWorkflowsRequest
 */
export type UpdateVReplicationWorkflowsRequest = Message<"tabletmanagerdata.UpdateVReplicationWorkflowsRequest"> & {
  /**
   * @generated from field: bool all_workflows = 1;
   */
  allWorkflows: boolean;

  /**
   * @generated from field: repeated string include_workflows = 2;
   */
  includeWorkflows: string[];

  /**
   * @generated from field: repeated string exclude_workflows = 3;
   */
  excludeWorkflows: string[];

  /**
   * @generated from field: optional binlogdata.VReplicationWorkflowState state = 4;
   */
  state?: VReplicationWorkflowState;

  /**
   * @generated from field: optional string message = 5;
   */
  message?: string;

  /**
   * @generated from field: optional string stop_position = 6;
   */
  stopPosition?: string;
};

/**
 * UpdateVReplicationWorkflowsRequest is used to update multiple existing VReplication
 * workflows. Note that the following fields MUST have an explicit value provided
 * if you do NOT wish to update the existing values to the given type's ZeroValue:
 * state, message, and stop_position.
 * TODO: leverage the optional modifier for these fields rather than using SimulatedNull
 * values: https://github.com/vitessio/vitess/issues/15627
 *
 * @generated from message tabletmanagerdata.UpdateVReplicationWorkflowsRequest
 */
export type UpdateVReplicationWorkflowsRequestJson = {
  /**
   * @generated from field: bool all_workflows = 1;
   */
  allWorkflows?: boolean;

  /**
   * @generated from field: repeated string include_workflows = 2;
   */
  includeWorkflows?: string[];

  /**
   * @generated from field: repeated string exclude_workflows = 3;
   */
  excludeWorkflows?: string[];

  /**
   * @generated from field: optional binlogdata.VReplicationWorkflowState state = 4;
   */
  state?: VReplicationWorkflowStateJson;

  /**
   * @generated from field: optional string message = 5;
   */
  message?: string;

  /**
   * @generated from field: optional string stop_position = 6;
   */
  stopPosition?: string;
};

/**
 * Describes the message tabletmanagerdata.UpdateVReplicationWorkflowsRequest.
 * Use `create(UpdateVReplicationWorkflowsRequestSchema)` to create a new message.
 */
export const UpdateVReplicationWorkflowsRequestSchema: GenMessage<UpdateVReplicationWorkflowsRequest, UpdateVReplicationWorkflowsRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 130);

/**
 * @generated from message tabletmanagerdata.UpdateVReplicationWorkflowsResponse
 */
export type UpdateVReplicationWorkflowsResponse = Message<"tabletmanagerdata.UpdateVReplicationWorkflowsResponse"> & {
  /**
   * @generated from field: query.QueryResult result = 1;
   */
  result?: QueryResult;
};

/**
 * @generated from message tabletmanagerdata.UpdateVReplicationWorkflowsResponse
 */
export type UpdateVReplicationWorkflowsResponseJson = {
  /**
   * @generated from field: query.QueryResult result = 1;
   */
  result?: QueryResultJson;
};

/**
 * Describes the message tabletmanagerdata.UpdateVReplicationWorkflowsResponse.
 * Use `create(UpdateVReplicationWorkflowsResponseSchema)` to create a new message.
 */
export const UpdateVReplicationWorkflowsResponseSchema: GenMessage<UpdateVReplicationWorkflowsResponse, UpdateVReplicationWorkflowsResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 131);

/**
 * @generated from message tabletmanagerdata.ResetSequencesRequest
 */
export type ResetSequencesRequest = Message<"tabletmanagerdata.ResetSequencesRequest"> & {
  /**
   * @generated from field: repeated string tables = 1;
   */
  tables: string[];
};

/**
 * @generated from message tabletmanagerdata.ResetSequencesRequest
 */
export type ResetSequencesRequestJson = {
  /**
   * @generated from field: repeated string tables = 1;
   */
  tables?: string[];
};

/**
 * Describes the message tabletmanagerdata.ResetSequencesRequest.
 * Use `create(ResetSequencesRequestSchema)` to create a new message.
 */
export const ResetSequencesRequestSchema: GenMessage<ResetSequencesRequest, ResetSequencesRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 132);

/**
 * @generated from message tabletmanagerdata.ResetSequencesResponse
 */
export type ResetSequencesResponse = Message<"tabletmanagerdata.ResetSequencesResponse"> & {
};

/**
 * @generated from message tabletmanagerdata.ResetSequencesResponse
 */
export type ResetSequencesResponseJson = {
};

/**
 * Describes the message tabletmanagerdata.ResetSequencesResponse.
 * Use `create(ResetSequencesResponseSchema)` to create a new message.
 */
export const ResetSequencesResponseSchema: GenMessage<ResetSequencesResponse, ResetSequencesResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 133);

/**
 * @generated from message tabletmanagerdata.CheckThrottlerRequest
 */
export type CheckThrottlerRequest = Message<"tabletmanagerdata.CheckThrottlerRequest"> & {
  /**
   * @generated from field: string app_name = 1;
   */
  appName: string;

  /**
   * @generated from field: string scope = 2;
   */
  scope: string;

  /**
   * SkipRequestHeartbeats ensures this check does not renew heartbeat lease
   *
   * @generated from field: bool skip_request_heartbeats = 3;
   */
  skipRequestHeartbeats: boolean;

  /**
   * OKIfNotExists asks the throttler to return OK even if the metric does not exist
   *
   * @generated from field: bool ok_if_not_exists = 4;
   */
  okIfNotExists: boolean;

  /**
   * MultiMetricsEnabled is always set to "true" and is how a multi-metrics enabled replica
   * throttler knows its being probed by a multi-metrics enabled primary vttablet.
   *
   * @generated from field: bool multi_metrics_enabled = 5;
   */
  multiMetricsEnabled: boolean;
};

/**
 * @generated from message tabletmanagerdata.CheckThrottlerRequest
 */
export type CheckThrottlerRequestJson = {
  /**
   * @generated from field: string app_name = 1;
   */
  appName?: string;

  /**
   * @generated from field: string scope = 2;
   */
  scope?: string;

  /**
   * SkipRequestHeartbeats ensures this check does not renew heartbeat lease
   *
   * @generated from field: bool skip_request_heartbeats = 3;
   */
  skipRequestHeartbeats?: boolean;

  /**
   * OKIfNotExists asks the throttler to return OK even if the metric does not exist
   *
   * @generated from field: bool ok_if_not_exists = 4;
   */
  okIfNotExists?: boolean;

  /**
   * MultiMetricsEnabled is always set to "true" and is how a multi-metrics enabled replica
   * throttler knows its being probed by a multi-metrics enabled primary vttablet.
   *
   * @generated from field: bool multi_metrics_enabled = 5;
   */
  multiMetricsEnabled?: boolean;
};

/**
 * Describes the message tabletmanagerdata.CheckThrottlerRequest.
 * Use `create(CheckThrottlerRequestSchema)` to create a new message.
 */
export const CheckThrottlerRequestSchema: GenMessage<CheckThrottlerRequest, CheckThrottlerRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 134);

/**
 * @generated from message tabletmanagerdata.CheckThrottlerResponse
 */
export type CheckThrottlerResponse = Message<"tabletmanagerdata.CheckThrottlerResponse"> & {
  /**
   * StatusCode is HTTP compliant response code (e.g. 200 for OK)
   *
   * @generated from field: int32 status_code = 1;
   */
  statusCode: number;

  /**
   * Value is the metric value collected by the tablet
   *
   * @generated from field: double value = 2;
   */
  value: number;

  /**
   * Threshold is the throttling threshold the table was comparing the value with
   *
   * @generated from field: double threshold = 3;
   */
  threshold: number;

  /**
   * Error indicates an error retrieving the value
   *
   * @generated from field: string error = 4;
   */
  error: string;

  /**
   * Message
   *
   * @generated from field: string message = 5;
   */
  message: string;

  /**
   * RecentlyChecked indicates that the tablet has been hit with a user-facing check, which can then imply
   * that heartbeats lease should be renwed.
   *
   * @generated from field: bool recently_checked = 6;
   */
  recentlyChecked: boolean;

  /**
   * Metrics is a map (metric name -> metric value/error) so that the client has as much
   * information as possible about all the checked metrics.
   *
   * @generated from field: map<string, tabletmanagerdata.CheckThrottlerResponse.Metric> metrics = 7;
   */
  metrics: { [key: string]: CheckThrottlerResponse_Metric };

  /**
   * AppName is the name of app that was matched by the throttler
   *
   * @generated from field: string app_name = 8;
   */
  appName: string;

  /**
   * Summary is a human readable analysis of the result
   *
   * @generated from field: string summary = 9;
   */
  summary: string;

  /**
   * ResponseCode is the enum representation of the response
   *
   * @generated from field: tabletmanagerdata.CheckThrottlerResponseCode response_code = 10;
   */
  responseCode: CheckThrottlerResponseCode;
};

/**
 * @generated from message tabletmanagerdata.CheckThrottlerResponse
 */
export type CheckThrottlerResponseJson = {
  /**
   * StatusCode is HTTP compliant response code (e.g. 200 for OK)
   *
   * @generated from field: int32 status_code = 1;
   */
  statusCode?: number;

  /**
   * Value is the metric value collected by the tablet
   *
   * @generated from field: double value = 2;
   */
  value?: number | "NaN" | "Infinity" | "-Infinity";

  /**
   * Threshold is the throttling threshold the table was comparing the value with
   *
   * @generated from field: double threshold = 3;
   */
  threshold?: number | "NaN" | "Infinity" | "-Infinity";

  /**
   * Error indicates an error retrieving the value
   *
   * @generated from field: string error = 4;
   */
  error?: string;

  /**
   * Message
   *
   * @generated from field: string message = 5;
   */
  message?: string;

  /**
   * RecentlyChecked indicates that the tablet has been hit with a user-facing check, which can then imply
   * that heartbeats lease should be renwed.
   *
   * @generated from field: bool recently_checked = 6;
   */
  recentlyChecked?: boolean;

  /**
   * Metrics is a map (metric name -> metric value/error) so that the client has as much
   * information as possible about all the checked metrics.
   *
   * @generated from field: map<string, tabletmanagerdata.CheckThrottlerResponse.Metric> metrics = 7;
   */
  metrics?: { [key: string]: CheckThrottlerResponse_MetricJson };

  /**
   * AppName is the name of app that was matched by the throttler
   *
   * @generated from field: string app_name = 8;
   */
  appName?: string;

  /**
   * Summary is a human readable analysis of the result
   *
   * @generated from field: string summary = 9;
   */
  summary?: string;

  /**
   * ResponseCode is the enum representation of the response
   *
   * @generated from field: tabletmanagerdata.CheckThrottlerResponseCode response_code = 10;
   */
  responseCode?: CheckThrottlerResponseCodeJson;
};

/**
 * Describes the message tabletmanagerdata.CheckThrottlerResponse.
 * Use `create(CheckThrottlerResponseSchema)` to create a new message.
 */
export const CheckThrottlerResponseSchema: GenMessage<CheckThrottlerResponse, CheckThrottlerResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 135);

/**
 * @generated from message tabletmanagerdata.CheckThrottlerResponse.Metric
 */
export type CheckThrottlerResponse_Metric = Message<"tabletmanagerdata.CheckThrottlerResponse.Metric"> & {
  /**
   * Name of the metric
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * StatusCode is HTTP compliant response code (e.g. 200 for OK)
   *
   * @generated from field: int32 status_code = 2;
   */
  statusCode: number;

  /**
   * Value is the metric value collected by the tablet
   *
   * @generated from field: double value = 3;
   */
  value: number;

  /**
   * Threshold is the throttling threshold the table was comparing the value with
   *
   * @generated from field: double threshold = 4;
   */
  threshold: number;

  /**
   * Error indicates an error retrieving the value
   *
   * @generated from field: string error = 5;
   */
  error: string;

  /**
   * Message
   *
   * @generated from field: string message = 6;
   */
  message: string;

  /**
   * Scope used in this check
   *
   * @generated from field: string scope = 7;
   */
  scope: string;

  /**
   * ResponseCode is the enum representation of the response
   *
   * @generated from field: tabletmanagerdata.CheckThrottlerResponseCode response_code = 8;
   */
  responseCode: CheckThrottlerResponseCode;
};

/**
 * @generated from message tabletmanagerdata.CheckThrottlerResponse.Metric
 */
export type CheckThrottlerResponse_MetricJson = {
  /**
   * Name of the metric
   *
   * @generated from field: string name = 1;
   */
  name?: string;

  /**
   * StatusCode is HTTP compliant response code (e.g. 200 for OK)
   *
   * @generated from field: int32 status_code = 2;
   */
  statusCode?: number;

  /**
   * Value is the metric value collected by the tablet
   *
   * @generated from field: double value = 3;
   */
  value?: number | "NaN" | "Infinity" | "-Infinity";

  /**
   * Threshold is the throttling threshold the table was comparing the value with
   *
   * @generated from field: double threshold = 4;
   */
  threshold?: number | "NaN" | "Infinity" | "-Infinity";

  /**
   * Error indicates an error retrieving the value
   *
   * @generated from field: string error = 5;
   */
  error?: string;

  /**
   * Message
   *
   * @generated from field: string message = 6;
   */
  message?: string;

  /**
   * Scope used in this check
   *
   * @generated from field: string scope = 7;
   */
  scope?: string;

  /**
   * ResponseCode is the enum representation of the response
   *
   * @generated from field: tabletmanagerdata.CheckThrottlerResponseCode response_code = 8;
   */
  responseCode?: CheckThrottlerResponseCodeJson;
};

/**
 * Describes the message tabletmanagerdata.CheckThrottlerResponse.Metric.
 * Use `create(CheckThrottlerResponse_MetricSchema)` to create a new message.
 */
export const CheckThrottlerResponse_MetricSchema: GenMessage<CheckThrottlerResponse_Metric, CheckThrottlerResponse_MetricJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 135, 0);

/**
 * @generated from message tabletmanagerdata.GetThrottlerStatusRequest
 */
export type GetThrottlerStatusRequest = Message<"tabletmanagerdata.GetThrottlerStatusRequest"> & {
};

/**
 * @generated from message tabletmanagerdata.GetThrottlerStatusRequest
 */
export type GetThrottlerStatusRequestJson = {
};

/**
 * Describes the message tabletmanagerdata.GetThrottlerStatusRequest.
 * Use `create(GetThrottlerStatusRequestSchema)` to create a new message.
 */
export const GetThrottlerStatusRequestSchema: GenMessage<GetThrottlerStatusRequest, GetThrottlerStatusRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 136);

/**
 * @generated from message tabletmanagerdata.GetThrottlerStatusResponse
 */
export type GetThrottlerStatusResponse = Message<"tabletmanagerdata.GetThrottlerStatusResponse"> & {
  /**
   * TabletAlias of probed tablet
   *
   * @generated from field: string tablet_alias = 1;
   */
  tabletAlias: string;

  /**
   * @generated from field: string keyspace = 2;
   */
  keyspace: string;

  /**
   * @generated from field: string shard = 3;
   */
  shard: string;

  /**
   * IsLeader indicates if the tablet is the leader of the shard, ie. the primary
   *
   * @generated from field: bool is_leader = 4;
   */
  isLeader: boolean;

  /**
   * IsOpen per stateManager
   *
   * @generated from field: bool is_open = 5;
   */
  isOpen: boolean;

  /**
   * IsEnabled per throttler configuration
   *
   * @generated from field: bool is_enabled = 6;
   */
  isEnabled: boolean;

  /**
   * IsDormant: whether the throttler is dormant, ie has not received any checks in a while
   * and goes into low-frequency probing mode.
   *
   * @generated from field: bool is_dormant = 7;
   */
  isDormant: boolean;

  /**
   * LagMetricQuery is the query used to check the lag metric, a constant used by the throttler.
   *
   * @generated from field: string lag_metric_query = 8;
   */
  lagMetricQuery: string;

  /**
   * CustomMetricQuery is the query used to check the custom metric, supplied by the user.
   *
   * @generated from field: string custom_metric_query = 9;
   */
  customMetricQuery: string;

  /**
   * DefaultThreshold is the threshold used by the throttler for the default metric (lag or custom in single-metric throttlers)
   *
   * @generated from field: double default_threshold = 10;
   */
  defaultThreshold: number;

  /**
   * MetricNameUsedAsDefault is the name of the metric used as the default metric: "lag" or "custom", for backwards compatibility
   * with single-metric throttlers
   *
   * @generated from field: string metric_name_used_as_default = 11;
   */
  metricNameUsedAsDefault: string;

  /**
   * AggregatedMetrics is a map of metric names to their values/errors
   * Names are, for example, "self", "self/lag", "shard/lag", "shard/loadavg", etc.
   *
   * @generated from field: map<string, tabletmanagerdata.GetThrottlerStatusResponse.MetricResult> aggregated_metrics = 12;
   */
  aggregatedMetrics: { [key: string]: GetThrottlerStatusResponse_MetricResult };

  /**
   * MetricThresholds is a map of metric names to their thresholds.
   *
   * @generated from field: map<string, double> metric_thresholds = 13;
   */
  metricThresholds: { [key: string]: number };

  /**
   * MetricsHealth is a map of metric names to their health status.
   *
   * @generated from field: map<string, tabletmanagerdata.GetThrottlerStatusResponse.MetricHealth> metrics_health = 14;
   */
  metricsHealth: { [key: string]: GetThrottlerStatusResponse_MetricHealth };

  /**
   * ThrottledApps is a map of app names to their throttling rules
   *
   * @generated from field: map<string, topodata.ThrottledAppRule> throttled_apps = 15;
   */
  throttledApps: { [key: string]: ThrottledAppRule };

  /**
   * AppCheckedMetrics is a map of app names to their assigned metrics
   *
   * @generated from field: map<string, string> app_checked_metrics = 16;
   */
  appCheckedMetrics: { [key: string]: string };

  /**
   * @generated from field: bool recently_checked = 17;
   */
  recentlyChecked: boolean;

  /**
   * RecentApps is a map of app names to their recent check status
   *
   * @generated from field: map<string, tabletmanagerdata.GetThrottlerStatusResponse.RecentApp> recent_apps = 18;
   */
  recentApps: { [key: string]: GetThrottlerStatusResponse_RecentApp };
};

/**
 * @generated from message tabletmanagerdata.GetThrottlerStatusResponse
 */
export type GetThrottlerStatusResponseJson = {
  /**
   * TabletAlias of probed tablet
   *
   * @generated from field: string tablet_alias = 1;
   */
  tabletAlias?: string;

  /**
   * @generated from field: string keyspace = 2;
   */
  keyspace?: string;

  /**
   * @generated from field: string shard = 3;
   */
  shard?: string;

  /**
   * IsLeader indicates if the tablet is the leader of the shard, ie. the primary
   *
   * @generated from field: bool is_leader = 4;
   */
  isLeader?: boolean;

  /**
   * IsOpen per stateManager
   *
   * @generated from field: bool is_open = 5;
   */
  isOpen?: boolean;

  /**
   * IsEnabled per throttler configuration
   *
   * @generated from field: bool is_enabled = 6;
   */
  isEnabled?: boolean;

  /**
   * IsDormant: whether the throttler is dormant, ie has not received any checks in a while
   * and goes into low-frequency probing mode.
   *
   * @generated from field: bool is_dormant = 7;
   */
  isDormant?: boolean;

  /**
   * LagMetricQuery is the query used to check the lag metric, a constant used by the throttler.
   *
   * @generated from field: string lag_metric_query = 8;
   */
  lagMetricQuery?: string;

  /**
   * CustomMetricQuery is the query used to check the custom metric, supplied by the user.
   *
   * @generated from field: string custom_metric_query = 9;
   */
  customMetricQuery?: string;

  /**
   * DefaultThreshold is the threshold used by the throttler for the default metric (lag or custom in single-metric throttlers)
   *
   * @generated from field: double default_threshold = 10;
   */
  defaultThreshold?: number | "NaN" | "Infinity" | "-Infinity";

  /**
   * MetricNameUsedAsDefault is the name of the metric used as the default metric: "lag" or "custom", for backwards compatibility
   * with single-metric throttlers
   *
   * @generated from field: string metric_name_used_as_default = 11;
   */
  metricNameUsedAsDefault?: string;

  /**
   * AggregatedMetrics is a map of metric names to their values/errors
   * Names are, for example, "self", "self/lag", "shard/lag", "shard/loadavg", etc.
   *
   * @generated from field: map<string, tabletmanagerdata.GetThrottlerStatusResponse.MetricResult> aggregated_metrics = 12;
   */
  aggregatedMetrics?: { [key: string]: GetThrottlerStatusResponse_MetricResultJson };

  /**
   * MetricThresholds is a map of metric names to their thresholds.
   *
   * @generated from field: map<string, double> metric_thresholds = 13;
   */
  metricThresholds?: { [key: string]: number | "NaN" | "Infinity" | "-Infinity" };

  /**
   * MetricsHealth is a map of metric names to their health status.
   *
   * @generated from field: map<string, tabletmanagerdata.GetThrottlerStatusResponse.MetricHealth> metrics_health = 14;
   */
  metricsHealth?: { [key: string]: GetThrottlerStatusResponse_MetricHealthJson };

  /**
   * ThrottledApps is a map of app names to their throttling rules
   *
   * @generated from field: map<string, topodata.ThrottledAppRule> throttled_apps = 15;
   */
  throttledApps?: { [key: string]: ThrottledAppRuleJson };

  /**
   * AppCheckedMetrics is a map of app names to their assigned metrics
   *
   * @generated from field: map<string, string> app_checked_metrics = 16;
   */
  appCheckedMetrics?: { [key: string]: string };

  /**
   * @generated from field: bool recently_checked = 17;
   */
  recentlyChecked?: boolean;

  /**
   * RecentApps is a map of app names to their recent check status
   *
   * @generated from field: map<string, tabletmanagerdata.GetThrottlerStatusResponse.RecentApp> recent_apps = 18;
   */
  recentApps?: { [key: string]: GetThrottlerStatusResponse_RecentAppJson };
};

/**
 * Describes the message tabletmanagerdata.GetThrottlerStatusResponse.
 * Use `create(GetThrottlerStatusResponseSchema)` to create a new message.
 */
export const GetThrottlerStatusResponseSchema: GenMessage<GetThrottlerStatusResponse, GetThrottlerStatusResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 137);

/**
 * @generated from message tabletmanagerdata.GetThrottlerStatusResponse.MetricResult
 */
export type GetThrottlerStatusResponse_MetricResult = Message<"tabletmanagerdata.GetThrottlerStatusResponse.MetricResult"> & {
  /**
   * @generated from field: double value = 1;
   */
  value: number;

  /**
   * @generated from field: string error = 2;
   */
  error: string;
};

/**
 * @generated from message tabletmanagerdata.GetThrottlerStatusResponse.MetricResult
 */
export type GetThrottlerStatusResponse_MetricResultJson = {
  /**
   * @generated from field: double value = 1;
   */
  value?: number | "NaN" | "Infinity" | "-Infinity";

  /**
   * @generated from field: string error = 2;
   */
  error?: string;
};

/**
 * Describes the message tabletmanagerdata.GetThrottlerStatusResponse.MetricResult.
 * Use `create(GetThrottlerStatusResponse_MetricResultSchema)` to create a new message.
 */
export const GetThrottlerStatusResponse_MetricResultSchema: GenMessage<GetThrottlerStatusResponse_MetricResult, GetThrottlerStatusResponse_MetricResultJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 137, 0);

/**
 * @generated from message tabletmanagerdata.GetThrottlerStatusResponse.MetricHealth
 */
export type GetThrottlerStatusResponse_MetricHealth = Message<"tabletmanagerdata.GetThrottlerStatusResponse.MetricHealth"> & {
  /**
   * @generated from field: vttime.Time last_healthy_at = 1;
   */
  lastHealthyAt?: Time;

  /**
   * @generated from field: int64 seconds_since_last_healthy = 2;
   */
  secondsSinceLastHealthy: bigint;
};

/**
 * @generated from message tabletmanagerdata.GetThrottlerStatusResponse.MetricHealth
 */
export type GetThrottlerStatusResponse_MetricHealthJson = {
  /**
   * @generated from field: vttime.Time last_healthy_at = 1;
   */
  lastHealthyAt?: TimeJson;

  /**
   * @generated from field: int64 seconds_since_last_healthy = 2;
   */
  secondsSinceLastHealthy?: string;
};

/**
 * Describes the message tabletmanagerdata.GetThrottlerStatusResponse.MetricHealth.
 * Use `create(GetThrottlerStatusResponse_MetricHealthSchema)` to create a new message.
 */
export const GetThrottlerStatusResponse_MetricHealthSchema: GenMessage<GetThrottlerStatusResponse_MetricHealth, GetThrottlerStatusResponse_MetricHealthJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 137, 1);

/**
 * @generated from message tabletmanagerdata.GetThrottlerStatusResponse.RecentApp
 */
export type GetThrottlerStatusResponse_RecentApp = Message<"tabletmanagerdata.GetThrottlerStatusResponse.RecentApp"> & {
  /**
   * @generated from field: vttime.Time checked_at = 1;
   */
  checkedAt?: Time;

  /**
   * @generated from field: int32 status_code = 2;
   */
  statusCode: number;

  /**
   * ResponseCode is the enum representation of the response
   *
   * @generated from field: tabletmanagerdata.CheckThrottlerResponseCode response_code = 3;
   */
  responseCode: CheckThrottlerResponseCode;
};

/**
 * @generated from message tabletmanagerdata.GetThrottlerStatusResponse.RecentApp
 */
export type GetThrottlerStatusResponse_RecentAppJson = {
  /**
   * @generated from field: vttime.Time checked_at = 1;
   */
  checkedAt?: TimeJson;

  /**
   * @generated from field: int32 status_code = 2;
   */
  statusCode?: number;

  /**
   * ResponseCode is the enum representation of the response
   *
   * @generated from field: tabletmanagerdata.CheckThrottlerResponseCode response_code = 3;
   */
  responseCode?: CheckThrottlerResponseCodeJson;
};

/**
 * Describes the message tabletmanagerdata.GetThrottlerStatusResponse.RecentApp.
 * Use `create(GetThrottlerStatusResponse_RecentAppSchema)` to create a new message.
 */
export const GetThrottlerStatusResponse_RecentAppSchema: GenMessage<GetThrottlerStatusResponse_RecentApp, GetThrottlerStatusResponse_RecentAppJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 137, 2);

/**
 * @generated from message tabletmanagerdata.ChangeTagsRequest
 */
export type ChangeTagsRequest = Message<"tabletmanagerdata.ChangeTagsRequest"> & {
  /**
   * @generated from field: map<string, string> tags = 1;
   */
  tags: { [key: string]: string };

  /**
   * @generated from field: bool replace = 2;
   */
  replace: boolean;
};

/**
 * @generated from message tabletmanagerdata.ChangeTagsRequest
 */
export type ChangeTagsRequestJson = {
  /**
   * @generated from field: map<string, string> tags = 1;
   */
  tags?: { [key: string]: string };

  /**
   * @generated from field: bool replace = 2;
   */
  replace?: boolean;
};

/**
 * Describes the message tabletmanagerdata.ChangeTagsRequest.
 * Use `create(ChangeTagsRequestSchema)` to create a new message.
 */
export const ChangeTagsRequestSchema: GenMessage<ChangeTagsRequest, ChangeTagsRequestJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 138);

/**
 * @generated from message tabletmanagerdata.ChangeTagsResponse
 */
export type ChangeTagsResponse = Message<"tabletmanagerdata.ChangeTagsResponse"> & {
  /**
   * @generated from field: map<string, string> tags = 1;
   */
  tags: { [key: string]: string };
};

/**
 * @generated from message tabletmanagerdata.ChangeTagsResponse
 */
export type ChangeTagsResponseJson = {
  /**
   * @generated from field: map<string, string> tags = 1;
   */
  tags?: { [key: string]: string };
};

/**
 * Describes the message tabletmanagerdata.ChangeTagsResponse.
 * Use `create(ChangeTagsResponseSchema)` to create a new message.
 */
export const ChangeTagsResponseSchema: GenMessage<ChangeTagsResponse, ChangeTagsResponseJson> = /*@__PURE__*/
  messageDesc(file_tabletmanagerdata, 139);

/**
 * This structure allows us to manage tablet selection preferences
 * which are eventually passed to a TabletPicker.
 *
 * @generated from enum tabletmanagerdata.TabletSelectionPreference
 */
export enum TabletSelectionPreference {
  /**
   * @generated from enum value: ANY = 0;
   */
  ANY = 0,

  /**
   * @generated from enum value: INORDER = 1;
   */
  INORDER = 1,

  /**
   * Don't change any existing value
   *
   * @generated from enum value: UNKNOWN = 3;
   */
  UNKNOWN = 3,
}

/**
 * This structure allows us to manage tablet selection preferences
 * which are eventually passed to a TabletPicker.
 *
 * @generated from enum tabletmanagerdata.TabletSelectionPreference
 */
export type TabletSelectionPreferenceJson = "ANY" | "INORDER" | "UNKNOWN";

/**
 * Describes the enum tabletmanagerdata.TabletSelectionPreference.
 */
export const TabletSelectionPreferenceSchema: GenEnum<TabletSelectionPreference, TabletSelectionPreferenceJson> = /*@__PURE__*/
  enumDesc(file_tabletmanagerdata, 0);

/**
 * @generated from enum tabletmanagerdata.CheckThrottlerResponseCode
 */
export enum CheckThrottlerResponseCode {
  /**
   * @generated from enum value: UNDEFINED = 0;
   */
  UNDEFINED = 0,

  /**
   * @generated from enum value: OK = 1;
   */
  OK = 1,

  /**
   * @generated from enum value: THRESHOLD_EXCEEDED = 2;
   */
  THRESHOLD_EXCEEDED = 2,

  /**
   * @generated from enum value: APP_DENIED = 3;
   */
  APP_DENIED = 3,

  /**
   * @generated from enum value: UNKNOWN_METRIC = 4;
   */
  UNKNOWN_METRIC = 4,

  /**
   * @generated from enum value: INTERNAL_ERROR = 5;
   */
  INTERNAL_ERROR = 5,
}

/**
 * @generated from enum tabletmanagerdata.CheckThrottlerResponseCode
 */
export type CheckThrottlerResponseCodeJson = "UNDEFINED" | "OK" | "THRESHOLD_EXCEEDED" | "APP_DENIED" | "UNKNOWN_METRIC" | "INTERNAL_ERROR";

/**
 * Describes the enum tabletmanagerdata.CheckThrottlerResponseCode.
 */
export const CheckThrottlerResponseCodeSchema: GenEnum<CheckThrottlerResponseCode, CheckThrottlerResponseCodeJson> = /*@__PURE__*/
  enumDesc(file_tabletmanagerdata, 1);

