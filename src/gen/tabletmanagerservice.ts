// @generated by protobuf-ts 2.9.6 with parameter long_type_bigint
// @generated from protobuf file "tabletmanagerservice.proto" (package "tabletmanagerservice", syntax proto3)
// tslint:disable
//
//
//Copyright 2019 The Vitess Authors.
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
//
// This file contains the service definition for making management API
// calls to VtTablet.
//
import { GetThrottlerStatusResponse } from "./tabletmanagerdata";
import { GetThrottlerStatusRequest } from "./tabletmanagerdata";
import { CheckThrottlerResponse } from "./tabletmanagerdata";
import { CheckThrottlerRequest } from "./tabletmanagerdata";
import { RestoreFromBackupResponse } from "./tabletmanagerdata";
import { RestoreFromBackupRequest } from "./tabletmanagerdata";
import { BackupResponse } from "./tabletmanagerdata";
import { BackupRequest } from "./tabletmanagerdata";
import { PromoteReplicaResponse } from "./tabletmanagerdata";
import { PromoteReplicaRequest } from "./tabletmanagerdata";
import { StopReplicationAndGetStatusResponse } from "./tabletmanagerdata";
import { StopReplicationAndGetStatusRequest } from "./tabletmanagerdata";
import { ReplicaWasRestartedResponse } from "./tabletmanagerdata";
import { ReplicaWasRestartedRequest } from "./tabletmanagerdata";
import { SetReplicationSourceResponse } from "./tabletmanagerdata";
import { SetReplicationSourceRequest } from "./tabletmanagerdata";
import { FullStatusResponse } from "./tabletmanagerdata";
import { FullStatusRequest } from "./tabletmanagerdata";
import { ResetReplicationParametersResponse } from "./tabletmanagerdata";
import { ResetReplicationParametersRequest } from "./tabletmanagerdata";
import { ReplicaWasPromotedResponse } from "./tabletmanagerdata";
import { ReplicaWasPromotedRequest } from "./tabletmanagerdata";
import { UndoDemotePrimaryResponse } from "./tabletmanagerdata";
import { UndoDemotePrimaryRequest } from "./tabletmanagerdata";
import { DemotePrimaryResponse } from "./tabletmanagerdata";
import { DemotePrimaryRequest } from "./tabletmanagerdata";
import { InitReplicaResponse } from "./tabletmanagerdata";
import { InitReplicaRequest } from "./tabletmanagerdata";
import { ReadReparentJournalInfoResponse } from "./tabletmanagerdata";
import { ReadReparentJournalInfoRequest } from "./tabletmanagerdata";
import { PopulateReparentJournalResponse } from "./tabletmanagerdata";
import { PopulateReparentJournalRequest } from "./tabletmanagerdata";
import { InitPrimaryResponse } from "./tabletmanagerdata";
import { InitPrimaryRequest } from "./tabletmanagerdata";
import { ResetReplicationResponse } from "./tabletmanagerdata";
import { ResetReplicationRequest } from "./tabletmanagerdata";
import { VDiffResponse } from "./tabletmanagerdata";
import { VDiffRequest } from "./tabletmanagerdata";
import { VReplicationWaitForPosResponse } from "./tabletmanagerdata";
import { VReplicationWaitForPosRequest } from "./tabletmanagerdata";
import { VReplicationExecResponse } from "./tabletmanagerdata";
import { VReplicationExecRequest } from "./tabletmanagerdata";
import { ValidateVReplicationPermissionsResponse } from "./tabletmanagerdata";
import { ValidateVReplicationPermissionsRequest } from "./tabletmanagerdata";
import { UpdateVReplicationWorkflowsResponse } from "./tabletmanagerdata";
import { UpdateVReplicationWorkflowsRequest } from "./tabletmanagerdata";
import { UpdateVReplicationWorkflowResponse } from "./tabletmanagerdata";
import { UpdateVReplicationWorkflowRequest } from "./tabletmanagerdata";
import { ReadVReplicationWorkflowsResponse } from "./tabletmanagerdata";
import { ReadVReplicationWorkflowsRequest } from "./tabletmanagerdata";
import { ReadVReplicationWorkflowResponse } from "./tabletmanagerdata";
import { ReadVReplicationWorkflowRequest } from "./tabletmanagerdata";
import { HasVReplicationWorkflowsResponse } from "./tabletmanagerdata";
import { HasVReplicationWorkflowsRequest } from "./tabletmanagerdata";
import { DeleteVReplicationWorkflowResponse } from "./tabletmanagerdata";
import { DeleteVReplicationWorkflowRequest } from "./tabletmanagerdata";
import { CreateVReplicationWorkflowResponse } from "./tabletmanagerdata";
import { CreateVReplicationWorkflowRequest } from "./tabletmanagerdata";
import { GetReplicasResponse } from "./tabletmanagerdata";
import { GetReplicasRequest } from "./tabletmanagerdata";
import { StartReplicationUntilAfterResponse } from "./tabletmanagerdata";
import { StartReplicationUntilAfterRequest } from "./tabletmanagerdata";
import { StartReplicationResponse } from "./tabletmanagerdata";
import { StartReplicationRequest } from "./tabletmanagerdata";
import { StopReplicationMinimumResponse } from "./tabletmanagerdata";
import { StopReplicationMinimumRequest } from "./tabletmanagerdata";
import { StopReplicationResponse } from "./tabletmanagerdata";
import { StopReplicationRequest } from "./tabletmanagerdata";
import { WaitForPositionResponse } from "./tabletmanagerdata";
import { WaitForPositionRequest } from "./tabletmanagerdata";
import { PrimaryPositionResponse } from "./tabletmanagerdata";
import { PrimaryPositionRequest } from "./tabletmanagerdata";
import { PrimaryStatusResponse } from "./tabletmanagerdata";
import { PrimaryStatusRequest } from "./tabletmanagerdata";
import { ReplicationStatusResponse } from "./tabletmanagerdata";
import { ReplicationStatusRequest } from "./tabletmanagerdata";
import { MysqlHostMetricsResponse } from "./tabletmanagerdata";
import { MysqlHostMetricsRequest } from "./tabletmanagerdata";
import { ConcludeTransactionResponse } from "./tabletmanagerdata";
import { ConcludeTransactionRequest } from "./tabletmanagerdata";
import { ReadTransactionResponse } from "./tabletmanagerdata";
import { ReadTransactionRequest } from "./tabletmanagerdata";
import { GetUnresolvedTransactionsResponse } from "./tabletmanagerdata";
import { GetUnresolvedTransactionsRequest } from "./tabletmanagerdata";
import { ExecuteFetchAsAppResponse } from "./tabletmanagerdata";
import { ExecuteFetchAsAppRequest } from "./tabletmanagerdata";
import { ExecuteFetchAsAllPrivsResponse } from "./tabletmanagerdata";
import { ExecuteFetchAsAllPrivsRequest } from "./tabletmanagerdata";
import { ExecuteMultiFetchAsDbaResponse } from "./tabletmanagerdata";
import { ExecuteMultiFetchAsDbaRequest } from "./tabletmanagerdata";
import { ExecuteFetchAsDbaResponse } from "./tabletmanagerdata";
import { ExecuteFetchAsDbaRequest } from "./tabletmanagerdata";
import { ExecuteQueryResponse } from "./tabletmanagerdata";
import { ExecuteQueryRequest } from "./tabletmanagerdata";
import { UnlockTablesResponse } from "./tabletmanagerdata";
import { UnlockTablesRequest } from "./tabletmanagerdata";
import { LockTablesResponse } from "./tabletmanagerdata";
import { LockTablesRequest } from "./tabletmanagerdata";
import { ResetSequencesResponse } from "./tabletmanagerdata";
import { ResetSequencesRequest } from "./tabletmanagerdata";
import { ApplySchemaResponse } from "./tabletmanagerdata";
import { ApplySchemaRequest } from "./tabletmanagerdata";
import { PreflightSchemaResponse } from "./tabletmanagerdata";
import { PreflightSchemaRequest } from "./tabletmanagerdata";
import { ReloadSchemaResponse } from "./tabletmanagerdata";
import { ReloadSchemaRequest } from "./tabletmanagerdata";
import { RunHealthCheckResponse } from "./tabletmanagerdata";
import { RunHealthCheckRequest } from "./tabletmanagerdata";
import { RefreshStateResponse } from "./tabletmanagerdata";
import { RefreshStateRequest } from "./tabletmanagerdata";
import { ChangeTypeResponse } from "./tabletmanagerdata";
import { ChangeTypeRequest } from "./tabletmanagerdata";
import { ChangeTagsResponse } from "./tabletmanagerdata";
import { ChangeTagsRequest } from "./tabletmanagerdata";
import { SetReadWriteResponse } from "./tabletmanagerdata";
import { SetReadWriteRequest } from "./tabletmanagerdata";
import { SetReadOnlyResponse } from "./tabletmanagerdata";
import { SetReadOnlyRequest } from "./tabletmanagerdata";
import { GetGlobalStatusVarsResponse } from "./tabletmanagerdata";
import { GetGlobalStatusVarsRequest } from "./tabletmanagerdata";
import { GetPermissionsResponse } from "./tabletmanagerdata";
import { GetPermissionsRequest } from "./tabletmanagerdata";
import { GetSchemaResponse } from "./tabletmanagerdata";
import { GetSchemaRequest } from "./tabletmanagerdata";
import { ExecuteHookResponse } from "./tabletmanagerdata";
import { ExecuteHookRequest } from "./tabletmanagerdata";
import { SleepResponse } from "./tabletmanagerdata";
import { SleepRequest } from "./tabletmanagerdata";
import { PingResponse } from "./tabletmanagerdata";
import { PingRequest } from "./tabletmanagerdata";
import { ServiceType } from "@protobuf-ts/runtime-rpc";
/**
 * @generated ServiceType for protobuf service tabletmanagerservice.TabletManager
 */
export const TabletManager = new ServiceType("tabletmanagerservice.TabletManager", [
    { name: "Ping", options: {}, I: PingRequest, O: PingResponse },
    { name: "Sleep", options: {}, I: SleepRequest, O: SleepResponse },
    { name: "ExecuteHook", options: {}, I: ExecuteHookRequest, O: ExecuteHookResponse },
    { name: "GetSchema", options: {}, I: GetSchemaRequest, O: GetSchemaResponse },
    { name: "GetPermissions", options: {}, I: GetPermissionsRequest, O: GetPermissionsResponse },
    { name: "GetGlobalStatusVars", options: {}, I: GetGlobalStatusVarsRequest, O: GetGlobalStatusVarsResponse },
    { name: "SetReadOnly", options: {}, I: SetReadOnlyRequest, O: SetReadOnlyResponse },
    { name: "SetReadWrite", options: {}, I: SetReadWriteRequest, O: SetReadWriteResponse },
    { name: "ChangeTags", options: {}, I: ChangeTagsRequest, O: ChangeTagsResponse },
    { name: "ChangeType", options: {}, I: ChangeTypeRequest, O: ChangeTypeResponse },
    { name: "RefreshState", options: {}, I: RefreshStateRequest, O: RefreshStateResponse },
    { name: "RunHealthCheck", options: {}, I: RunHealthCheckRequest, O: RunHealthCheckResponse },
    { name: "ReloadSchema", options: {}, I: ReloadSchemaRequest, O: ReloadSchemaResponse },
    { name: "PreflightSchema", options: {}, I: PreflightSchemaRequest, O: PreflightSchemaResponse },
    { name: "ApplySchema", options: {}, I: ApplySchemaRequest, O: ApplySchemaResponse },
    { name: "ResetSequences", options: {}, I: ResetSequencesRequest, O: ResetSequencesResponse },
    { name: "LockTables", options: {}, I: LockTablesRequest, O: LockTablesResponse },
    { name: "UnlockTables", options: {}, I: UnlockTablesRequest, O: UnlockTablesResponse },
    { name: "ExecuteQuery", options: {}, I: ExecuteQueryRequest, O: ExecuteQueryResponse },
    { name: "ExecuteFetchAsDba", options: {}, I: ExecuteFetchAsDbaRequest, O: ExecuteFetchAsDbaResponse },
    { name: "ExecuteMultiFetchAsDba", options: {}, I: ExecuteMultiFetchAsDbaRequest, O: ExecuteMultiFetchAsDbaResponse },
    { name: "ExecuteFetchAsAllPrivs", options: {}, I: ExecuteFetchAsAllPrivsRequest, O: ExecuteFetchAsAllPrivsResponse },
    { name: "ExecuteFetchAsApp", options: {}, I: ExecuteFetchAsAppRequest, O: ExecuteFetchAsAppResponse },
    { name: "GetUnresolvedTransactions", options: {}, I: GetUnresolvedTransactionsRequest, O: GetUnresolvedTransactionsResponse },
    { name: "ReadTransaction", options: {}, I: ReadTransactionRequest, O: ReadTransactionResponse },
    { name: "ConcludeTransaction", options: {}, I: ConcludeTransactionRequest, O: ConcludeTransactionResponse },
    { name: "MysqlHostMetrics", options: {}, I: MysqlHostMetricsRequest, O: MysqlHostMetricsResponse },
    { name: "ReplicationStatus", options: {}, I: ReplicationStatusRequest, O: ReplicationStatusResponse },
    { name: "PrimaryStatus", options: {}, I: PrimaryStatusRequest, O: PrimaryStatusResponse },
    { name: "PrimaryPosition", options: {}, I: PrimaryPositionRequest, O: PrimaryPositionResponse },
    { name: "WaitForPosition", options: {}, I: WaitForPositionRequest, O: WaitForPositionResponse },
    { name: "StopReplication", options: {}, I: StopReplicationRequest, O: StopReplicationResponse },
    { name: "StopReplicationMinimum", options: {}, I: StopReplicationMinimumRequest, O: StopReplicationMinimumResponse },
    { name: "StartReplication", options: {}, I: StartReplicationRequest, O: StartReplicationResponse },
    { name: "StartReplicationUntilAfter", options: {}, I: StartReplicationUntilAfterRequest, O: StartReplicationUntilAfterResponse },
    { name: "GetReplicas", options: {}, I: GetReplicasRequest, O: GetReplicasResponse },
    { name: "CreateVReplicationWorkflow", options: {}, I: CreateVReplicationWorkflowRequest, O: CreateVReplicationWorkflowResponse },
    { name: "DeleteVReplicationWorkflow", options: {}, I: DeleteVReplicationWorkflowRequest, O: DeleteVReplicationWorkflowResponse },
    { name: "HasVReplicationWorkflows", options: {}, I: HasVReplicationWorkflowsRequest, O: HasVReplicationWorkflowsResponse },
    { name: "ReadVReplicationWorkflow", options: {}, I: ReadVReplicationWorkflowRequest, O: ReadVReplicationWorkflowResponse },
    { name: "ReadVReplicationWorkflows", options: {}, I: ReadVReplicationWorkflowsRequest, O: ReadVReplicationWorkflowsResponse },
    { name: "UpdateVReplicationWorkflow", options: {}, I: UpdateVReplicationWorkflowRequest, O: UpdateVReplicationWorkflowResponse },
    { name: "UpdateVReplicationWorkflows", options: {}, I: UpdateVReplicationWorkflowsRequest, O: UpdateVReplicationWorkflowsResponse },
    { name: "ValidateVReplicationPermissions", options: {}, I: ValidateVReplicationPermissionsRequest, O: ValidateVReplicationPermissionsResponse },
    { name: "VReplicationExec", options: {}, I: VReplicationExecRequest, O: VReplicationExecResponse },
    { name: "VReplicationWaitForPos", options: {}, I: VReplicationWaitForPosRequest, O: VReplicationWaitForPosResponse },
    { name: "VDiff", options: {}, I: VDiffRequest, O: VDiffResponse },
    { name: "ResetReplication", options: {}, I: ResetReplicationRequest, O: ResetReplicationResponse },
    { name: "InitPrimary", options: {}, I: InitPrimaryRequest, O: InitPrimaryResponse },
    { name: "PopulateReparentJournal", options: {}, I: PopulateReparentJournalRequest, O: PopulateReparentJournalResponse },
    { name: "ReadReparentJournalInfo", options: {}, I: ReadReparentJournalInfoRequest, O: ReadReparentJournalInfoResponse },
    { name: "InitReplica", options: {}, I: InitReplicaRequest, O: InitReplicaResponse },
    { name: "DemotePrimary", options: {}, I: DemotePrimaryRequest, O: DemotePrimaryResponse },
    { name: "UndoDemotePrimary", options: {}, I: UndoDemotePrimaryRequest, O: UndoDemotePrimaryResponse },
    { name: "ReplicaWasPromoted", options: {}, I: ReplicaWasPromotedRequest, O: ReplicaWasPromotedResponse },
    { name: "ResetReplicationParameters", options: {}, I: ResetReplicationParametersRequest, O: ResetReplicationParametersResponse },
    { name: "FullStatus", options: {}, I: FullStatusRequest, O: FullStatusResponse },
    { name: "SetReplicationSource", options: {}, I: SetReplicationSourceRequest, O: SetReplicationSourceResponse },
    { name: "ReplicaWasRestarted", options: {}, I: ReplicaWasRestartedRequest, O: ReplicaWasRestartedResponse },
    { name: "StopReplicationAndGetStatus", options: {}, I: StopReplicationAndGetStatusRequest, O: StopReplicationAndGetStatusResponse },
    { name: "PromoteReplica", options: {}, I: PromoteReplicaRequest, O: PromoteReplicaResponse },
    { name: "Backup", serverStreaming: true, options: {}, I: BackupRequest, O: BackupResponse },
    { name: "RestoreFromBackup", serverStreaming: true, options: {}, I: RestoreFromBackupRequest, O: RestoreFromBackupResponse },
    { name: "CheckThrottler", options: {}, I: CheckThrottlerRequest, O: CheckThrottlerResponse },
    { name: "GetThrottlerStatus", options: {}, I: GetThrottlerStatusRequest, O: GetThrottlerStatusResponse }
]);
