//
//Copyright 2019 The Vitess Authors.
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// gRPC RPC interface for the internal resharding throttler (go/vt/throttler)
// which is used by vreplication.

// @generated by protoc-gen-es v2.2.5 with parameter "target=ts,json_types=true"
// @generated from file throttlerservice.proto (package throttlerservice, syntax proto3)
/* eslint-disable */

import type { GenFile, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { GetConfigurationRequestSchema, GetConfigurationResponseSchema, MaxRatesRequestSchema, MaxRatesResponseSchema, ResetConfigurationRequestSchema, ResetConfigurationResponseSchema, SetMaxRateRequestSchema, SetMaxRateResponseSchema, UpdateConfigurationRequestSchema, UpdateConfigurationResponseSchema } from "./throttlerdata_pb";
import { file_throttlerdata } from "./throttlerdata_pb";

/**
 * Describes the file throttlerservice.proto.
 */
export const file_throttlerservice: GenFile = /*@__PURE__*/
  fileDesc("ChZ0aHJvdHRsZXJzZXJ2aWNlLnByb3RvEhB0aHJvdHRsZXJzZXJ2aWNlMvMDCglUaHJvdHRsZXISTQoITWF4UmF0ZXMSHi50aHJvdHRsZXJkYXRhLk1heFJhdGVzUmVxdWVzdBofLnRocm90dGxlcmRhdGEuTWF4UmF0ZXNSZXNwb25zZSIAElMKClNldE1heFJhdGUSIC50aHJvdHRsZXJkYXRhLlNldE1heFJhdGVSZXF1ZXN0GiEudGhyb3R0bGVyZGF0YS5TZXRNYXhSYXRlUmVzcG9uc2UiABJlChBHZXRDb25maWd1cmF0aW9uEiYudGhyb3R0bGVyZGF0YS5HZXRDb25maWd1cmF0aW9uUmVxdWVzdBonLnRocm90dGxlcmRhdGEuR2V0Q29uZmlndXJhdGlvblJlc3BvbnNlIgASbgoTVXBkYXRlQ29uZmlndXJhdGlvbhIpLnRocm90dGxlcmRhdGEuVXBkYXRlQ29uZmlndXJhdGlvblJlcXVlc3QaKi50aHJvdHRsZXJkYXRhLlVwZGF0ZUNvbmZpZ3VyYXRpb25SZXNwb25zZSIAEmsKElJlc2V0Q29uZmlndXJhdGlvbhIoLnRocm90dGxlcmRhdGEuUmVzZXRDb25maWd1cmF0aW9uUmVxdWVzdBopLnRocm90dGxlcmRhdGEuUmVzZXRDb25maWd1cmF0aW9uUmVzcG9uc2UiAEIvWi12aXRlc3MuaW8vdml0ZXNzL2dvL3Z0L3Byb3RvL3Rocm90dGxlcnNlcnZpY2ViBnByb3RvMw", [file_throttlerdata]);

/**
 * Throttler defines the throttler RPC calls.
 *
 * @generated from service throttlerservice.Throttler
 */
export const Throttler: GenService<{
  /**
   * MaxRates returns the current max rate for each throttler of the process.
   *
   * @generated from rpc throttlerservice.Throttler.MaxRates
   */
  maxRates: {
    methodKind: "unary";
    input: typeof MaxRatesRequestSchema;
    output: typeof MaxRatesResponseSchema;
  },
  /**
   * SetMaxRate allows to change the current max rate for all throttlers
   * of the process.
   *
   * @generated from rpc throttlerservice.Throttler.SetMaxRate
   */
  setMaxRate: {
    methodKind: "unary";
    input: typeof SetMaxRateRequestSchema;
    output: typeof SetMaxRateResponseSchema;
  },
  /**
   * GetConfiguration returns the configuration of the MaxReplicationlag module
   * for the given throttler or all throttlers if "throttler_name" is empty.
   *
   * @generated from rpc throttlerservice.Throttler.GetConfiguration
   */
  getConfiguration: {
    methodKind: "unary";
    input: typeof GetConfigurationRequestSchema;
    output: typeof GetConfigurationResponseSchema;
  },
  /**
   * UpdateConfiguration (partially) updates the configuration of the
   * MaxReplicationlag module for the given throttler or all throttlers if
   * "throttler_name" is empty.
   * If "copy_zero_values" is true, fields with zero values will be copied
   * as well.
   *
   * @generated from rpc throttlerservice.Throttler.UpdateConfiguration
   */
  updateConfiguration: {
    methodKind: "unary";
    input: typeof UpdateConfigurationRequestSchema;
    output: typeof UpdateConfigurationResponseSchema;
  },
  /**
   * ResetConfiguration resets the configuration of the MaxReplicationlag module
   * to the initial configuration for the given throttler or all throttlers if
   * "throttler_name" is empty.
   *
   * @generated from rpc throttlerservice.Throttler.ResetConfiguration
   */
  resetConfiguration: {
    methodKind: "unary";
    input: typeof ResetConfigurationRequestSchema;
    output: typeof ResetConfigurationResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_throttlerservice, 0);

