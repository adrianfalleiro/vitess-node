// @generated by protobuf-ts 2.9.6 with parameter long_type_bigint
// @generated from protobuf file "vtgateservice.proto" (package "vtgateservice", syntax proto3)
// tslint:disable
//
//
//Copyright 2019 The Vitess Authors.
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
//
// Service definition for vtgateservice.
// This is the main entry point to Vitess.
//
import { CloseSessionResponse } from "./vtgate";
import { CloseSessionRequest } from "./vtgate";
import { PrepareResponse } from "./vtgate";
import { PrepareRequest } from "./vtgate";
import { VStreamResponse } from "./vtgate";
import { VStreamRequest } from "./vtgate";
import { StreamExecuteResponse } from "./vtgate";
import { StreamExecuteRequest } from "./vtgate";
import { ExecuteBatchResponse } from "./vtgate";
import { ExecuteBatchRequest } from "./vtgate";
import { ExecuteResponse } from "./vtgate";
import { ExecuteRequest } from "./vtgate";
import { ServiceType } from "@protobuf-ts/runtime-rpc";
/**
 * @generated ServiceType for protobuf service vtgateservice.Vitess
 */
export const Vitess = new ServiceType("vtgateservice.Vitess", [
    { name: "Execute", options: {}, I: ExecuteRequest, O: ExecuteResponse },
    { name: "ExecuteBatch", options: {}, I: ExecuteBatchRequest, O: ExecuteBatchResponse },
    { name: "StreamExecute", serverStreaming: true, options: {}, I: StreamExecuteRequest, O: StreamExecuteResponse },
    { name: "VStream", serverStreaming: true, options: {}, I: VStreamRequest, O: VStreamResponse },
    { name: "Prepare", options: {}, I: PrepareRequest, O: PrepareResponse },
    { name: "CloseSession", options: {}, I: CloseSessionRequest, O: CloseSessionResponse }
]);
